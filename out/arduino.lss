
arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017c  00800100  000029e6  00002a7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029e6  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021a  0080027c  0080027c  00002bf6  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00002bf6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002c08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a8  00000000  00000000  00002c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000eab0  00000000  00000000  000030f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002b29  00000000  00000000  00011ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000030fb  00000000  00000000  000146c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c80  00000000  00000000  000177c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000030d7  00000000  00000000  00018444  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005124  00000000  00000000  0001b51b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004b0  00000000  00000000  0002063f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
       4:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      10:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      18:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      20:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      24:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      28:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      2c:	0c 94 7e 0f 	jmp	0x1efc	; 0x1efc <__vector_11>
      30:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      34:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      38:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      3c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      40:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__vector_16>
      44:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      48:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__vector_18>
      4c:	0c 94 c7 0a 	jmp	0x158e	; 0x158e <__vector_19>
      50:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      58:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      5c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      60:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      64:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 08       	sbc	r0, r0
      6c:	00 02       	muls	r16, r16
      6e:	01 00       	.word	0x0001	; ????
      70:	00 03       	mulsu	r16, r16
      72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_output_PGM>:
      a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ae <port_to_mode_PGM>:
      ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000b8 <__ctors_start>:
      b8:	f7 0a       	sbc	r15, r23

000000ba <__ctors_end>:
      ba:	11 24       	eor	r1, r1
      bc:	1f be       	out	0x3f, r1	; 63
      be:	cf ef       	ldi	r28, 0xFF	; 255
      c0:	d8 e0       	ldi	r29, 0x08	; 8
      c2:	de bf       	out	0x3e, r29	; 62
      c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
      c6:	12 e0       	ldi	r17, 0x02	; 2
      c8:	a0 e0       	ldi	r26, 0x00	; 0
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	e6 ee       	ldi	r30, 0xE6	; 230
      ce:	f9 e2       	ldi	r31, 0x29	; 41
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
      d2:	05 90       	lpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	ac 37       	cpi	r26, 0x7C	; 124
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
      dc:	24 e0       	ldi	r18, 0x04	; 4
      de:	ac e7       	ldi	r26, 0x7C	; 124
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	a6 39       	cpi	r26, 0x96	; 150
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
      ec:	10 e0       	ldi	r17, 0x00	; 0
      ee:	cd e5       	ldi	r28, 0x5D	; 93
      f0:	d0 e0       	ldi	r29, 0x00	; 0
      f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_global_ctors+0x10>
      f4:	21 97       	sbiw	r28, 0x01	; 1
      f6:	fe 01       	movw	r30, r28
      f8:	0e 94 06 12 	call	0x240c	; 0x240c <__tablejump2__>
      fc:	cc 35       	cpi	r28, 0x5C	; 92
      fe:	d1 07       	cpc	r29, r17
     100:	c9 f7       	brne	.-14     	; 0xf4 <__do_global_ctors+0x8>
     102:	0e 94 a8 06 	call	0xd50	; 0xd50 <main>
     106:	0c 94 f1 14 	jmp	0x29e2	; 0x29e2 <_exit>

0000010a <__bad_interrupt>:
     10a:	0c 94 7a 0f 	jmp	0x1ef4	; 0x1ef4 <__vector_default>
	...

00000110 <osEE_hal_save_ctx_and_restore_ctx>:
     110:	2f 92       	push	r2
     112:	3f 92       	push	r3
     114:	4f 92       	push	r4
     116:	5f 92       	push	r5
     118:	6f 92       	push	r6
     11a:	7f 92       	push	r7
     11c:	8f 92       	push	r8
     11e:	9f 92       	push	r9
     120:	af 92       	push	r10
     122:	bf 92       	push	r11
     124:	cf 92       	push	r12
     126:	df 92       	push	r13
     128:	ef 92       	push	r14
     12a:	ff 92       	push	r15
     12c:	0f 93       	push	r16
     12e:	1f 93       	push	r17
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	e4 2f       	mov	r30, r20
     136:	f5 2f       	mov	r31, r21
     138:	41 90       	ld	r4, Z+
     13a:	50 80       	ld	r5, Z
     13c:	4f 92       	push	r4
     13e:	5f 92       	push	r5
     140:	e4 2f       	mov	r30, r20
     142:	f5 2f       	mov	r31, r21
     144:	4d b6       	in	r4, 0x3d	; 61
     146:	5e b6       	in	r5, 0x3e	; 62
     148:	41 92       	st	Z+, r4
     14a:	50 82       	st	Z, r5
     14c:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>

00000150 <osEE_hal_restore_ctx>:
     150:	e6 2f       	mov	r30, r22
     152:	f7 2f       	mov	r31, r23
     154:	41 90       	ld	r4, Z+
     156:	50 80       	ld	r5, Z
     158:	4d be       	out	0x3d, r4	; 61
     15a:	5e be       	out	0x3e, r5	; 62
     15c:	5f 90       	pop	r5
     15e:	4f 90       	pop	r4
     160:	e6 2f       	mov	r30, r22
     162:	f7 2f       	mov	r31, r23
     164:	41 92       	st	Z+, r4
     166:	50 82       	st	Z, r5
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	ff 90       	pop	r15
     172:	ef 90       	pop	r14
     174:	df 90       	pop	r13
     176:	cf 90       	pop	r12
     178:	bf 90       	pop	r11
     17a:	af 90       	pop	r10
     17c:	9f 90       	pop	r9
     17e:	8f 90       	pop	r8
     180:	7f 90       	pop	r7
     182:	6f 90       	pop	r6
     184:	5f 90       	pop	r5
     186:	4f 90       	pop	r4
     188:	3f 90       	pop	r3
     18a:	2f 90       	pop	r2
     18c:	0c 94 a8 0c 	jmp	0x1950	; 0x1950 <osEE_scheduler_task_wrapper_restore>

00000190 <osEE_hal_ready2stacked>:
     190:	e6 2f       	mov	r30, r22
     192:	f7 2f       	mov	r31, r23
     194:	41 91       	ld	r20, Z+
     196:	50 81       	ld	r21, Z
     198:	4d bf       	out	0x3d, r20	; 61
     19a:	5e bf       	out	0x3e, r21	; 62
     19c:	0c 94 b2 0c 	jmp	0x1964	; 0x1964 <osEE_scheduler_task_wrapper_run>

000001a0 <osEE_hal_save_ctx_and_ready2stacked>:
     1a0:	2f 92       	push	r2
     1a2:	3f 92       	push	r3
     1a4:	4f 92       	push	r4
     1a6:	5f 92       	push	r5
     1a8:	6f 92       	push	r6
     1aa:	7f 92       	push	r7
     1ac:	8f 92       	push	r8
     1ae:	9f 92       	push	r9
     1b0:	af 92       	push	r10
     1b2:	bf 92       	push	r11
     1b4:	cf 92       	push	r12
     1b6:	df 92       	push	r13
     1b8:	ef 92       	push	r14
     1ba:	ff 92       	push	r15
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	e4 2f       	mov	r30, r20
     1c6:	f5 2f       	mov	r31, r21
     1c8:	41 90       	ld	r4, Z+
     1ca:	50 80       	ld	r5, Z
     1cc:	4f 92       	push	r4
     1ce:	5f 92       	push	r5
     1d0:	e4 2f       	mov	r30, r20
     1d2:	f5 2f       	mov	r31, r21
     1d4:	4d b6       	in	r4, 0x3d	; 61
     1d6:	5e b6       	in	r5, 0x3e	; 62
     1d8:	41 92       	st	Z+, r4
     1da:	50 82       	st	Z, r5
     1dc:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

000001e0 <osEE_hal_terminate_ctx>:
     1e0:	e8 2f       	mov	r30, r24
     1e2:	f9 2f       	mov	r31, r25
     1e4:	41 91       	ld	r20, Z+
     1e6:	50 81       	ld	r21, Z
     1e8:	4d bf       	out	0x3d, r20	; 61
     1ea:	5e bf       	out	0x3e, r21	; 62
     1ec:	e6 2f       	mov	r30, r22
     1ee:	f7 2f       	mov	r31, r23
     1f0:	09 94       	ijmp
	...

000001f4 <Check_Enable_of_SubFeatures>:
     1f4:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <Status_Accel_Decel>
     1f8:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <Status_Accel_Decel+0x1>
     1fc:	85 30       	cpi	r24, 0x05	; 5
     1fe:	91 05       	cpc	r25, r1
     200:	f9 f4       	brne	.+62     	; 0x240 <Check_Enable_of_SubFeatures+0x4c>
     202:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <CC_Enable>
     206:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <CC_Enable+0x1>
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	71 f1       	breq	.+92     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     20e:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <ACC_Enable>
     212:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <ACC_Enable+0x1>
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	41 f1       	breq	.+80     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     21a:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <Output_Acceleration>
     21e:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <Output_Acceleration+0x1>
     222:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <Output_Acceleration+0x2>
     226:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <Output_Acceleration+0x3>
     22a:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <Status_Accel_Decel+0x1>
     22e:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <Status_Accel_Decel>
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     23a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     23e:	08 95       	ret
     240:	84 30       	cpi	r24, 0x04	; 4
     242:	91 05       	cpc	r25, r1
     244:	21 f3       	breq	.-56     	; 0x20e <Check_Enable_of_SubFeatures+0x1a>
     246:	83 30       	cpi	r24, 0x03	; 3
     248:	91 05       	cpc	r25, r1
     24a:	39 f4       	brne	.+14     	; 0x25a <Check_Enable_of_SubFeatures+0x66>
     24c:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <CWAS_Enable>
     250:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <CWAS_Enable+0x1>
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	09 f7       	brne	.-62     	; 0x21a <Check_Enable_of_SubFeatures+0x26>
     258:	08 95       	ret
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	02 97       	sbiw	r24, 0x02	; 2
     25e:	28 f4       	brcc	.+10     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     260:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <EBS_Enable>
     264:	90 91 d5 02 	lds	r25, 0x02D5	; 0x8002d5 <EBS_Enable+0x1>
     268:	d6 cf       	rjmp	.-84     	; 0x216 <Check_Enable_of_SubFeatures+0x22>
     26a:	08 95       	ret

0000026c <Acc_Dec_Dtrmn_Sys>:
     26c:	4f 92       	push	r4
     26e:	5f 92       	push	r5
     270:	6f 92       	push	r6
     272:	7f 92       	push	r7
     274:	8f 92       	push	r8
     276:	9f 92       	push	r9
     278:	af 92       	push	r10
     27a:	bf 92       	push	r11
     27c:	cf 92       	push	r12
     27e:	df 92       	push	r13
     280:	ef 92       	push	r14
     282:	ff 92       	push	r15
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	c4 54       	subi	r28, 0x44	; 68
     28e:	d1 09       	sbc	r29, r1
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	f8 94       	cli
     294:	de bf       	out	0x3e, r29	; 62
     296:	0f be       	out	0x3f, r0	; 63
     298:	cd bf       	out	0x3d, r28	; 61
     29a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <CC_Enable>
     29e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <CC_Enable+0x1>
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	99 f0       	breq	.+38     	; 0x2cc <Acc_Dec_Dtrmn_Sys+0x60>
     2a6:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <ACC_Enable>
     2aa:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <ACC_Enable+0x1>
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	69 f0       	breq	.+26     	; 0x2cc <Acc_Dec_Dtrmn_Sys+0x60>
     2b2:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <CWAS_Enable>
     2b6:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <CWAS_Enable+0x1>
     2ba:	01 97       	sbiw	r24, 0x01	; 1
     2bc:	39 f0       	breq	.+14     	; 0x2cc <Acc_Dec_Dtrmn_Sys+0x60>
     2be:	80 91 d4 02 	lds	r24, 0x02D4	; 0x8002d4 <EBS_Enable>
     2c2:	90 91 d5 02 	lds	r25, 0x02D5	; 0x8002d5 <EBS_Enable+0x1>
     2c6:	01 97       	sbiw	r24, 0x01	; 1
     2c8:	09 f0       	breq	.+2      	; 0x2cc <Acc_Dec_Dtrmn_Sys+0x60>
     2ca:	79 c3       	rjmp	.+1778   	; 0x9be <__stack+0xbf>
     2cc:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <skip_first_two_dat>
     2d0:	82 30       	cpi	r24, 0x02	; 2
     2d2:	24 f4       	brge	.+8      	; 0x2dc <Acc_Dec_Dtrmn_Sys+0x70>
     2d4:	8f 5f       	subi	r24, 0xFF	; 255
     2d6:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <skip_first_two_dat>
     2da:	3a c0       	rjmp	.+116    	; 0x350 <Acc_Dec_Dtrmn_Sys+0xe4>
     2dc:	20 91 c0 02 	lds	r18, 0x02C0	; 0x8002c0 <Vehicle_Speed_Prev>
     2e0:	30 91 c1 02 	lds	r19, 0x02C1	; 0x8002c1 <Vehicle_Speed_Prev+0x1>
     2e4:	40 91 c2 02 	lds	r20, 0x02C2	; 0x8002c2 <Vehicle_Speed_Prev+0x2>
     2e8:	50 91 c3 02 	lds	r21, 0x02C3	; 0x8002c3 <Vehicle_Speed_Prev+0x3>
     2ec:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <Vehicle_Speed>
     2f0:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <Vehicle_Speed+0x1>
     2f4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <Vehicle_Speed+0x2>
     2f8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <Vehicle_Speed+0x3>
     2fc:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     300:	6b 01       	movw	r12, r22
     302:	7c 01       	movw	r14, r24
     304:	20 91 cc 02 	lds	r18, 0x02CC	; 0x8002cc <Relative_Speed>
     308:	30 91 cd 02 	lds	r19, 0x02CD	; 0x8002cd <Relative_Speed+0x1>
     30c:	40 91 ce 02 	lds	r20, 0x02CE	; 0x8002ce <Relative_Speed+0x2>
     310:	50 91 cf 02 	lds	r21, 0x02CF	; 0x8002cf <Relative_Speed+0x3>
     314:	60 91 bc 02 	lds	r22, 0x02BC	; 0x8002bc <Relative_Speed_Prev>
     318:	70 91 bd 02 	lds	r23, 0x02BD	; 0x8002bd <Relative_Speed_Prev+0x1>
     31c:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <Relative_Speed_Prev+0x2>
     320:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <Relative_Speed_Prev+0x3>
     324:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     328:	9b 01       	movw	r18, r22
     32a:	ac 01       	movw	r20, r24
     32c:	c7 01       	movw	r24, r14
     32e:	b6 01       	movw	r22, r12
     330:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     334:	2d ec       	ldi	r18, 0xCD	; 205
     336:	3c ec       	ldi	r19, 0xCC	; 204
     338:	4c ec       	ldi	r20, 0xCC	; 204
     33a:	5d e3       	ldi	r21, 0x3D	; 61
     33c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     340:	60 93 b8 02 	sts	0x02B8, r22	; 0x8002b8 <Target_Veh_Accel>
     344:	70 93 b9 02 	sts	0x02B9, r23	; 0x8002b9 <Target_Veh_Accel+0x1>
     348:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <Target_Veh_Accel+0x2>
     34c:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <Target_Veh_Accel+0x3>
     350:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <Vehicle_Speed>
     354:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <Vehicle_Speed+0x1>
     358:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <Vehicle_Speed+0x2>
     35c:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <Vehicle_Speed+0x3>
     360:	89 87       	std	Y+9, r24	; 0x09
     362:	9a 87       	std	Y+10, r25	; 0x0a
     364:	ab 87       	std	Y+11, r26	; 0x0b
     366:	bc 87       	std	Y+12, r27	; 0x0c
     368:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <Vehicle_Speed_Prev>
     36c:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <Vehicle_Speed_Prev+0x1>
     370:	a0 93 c2 02 	sts	0x02C2, r26	; 0x8002c2 <Vehicle_Speed_Prev+0x2>
     374:	b0 93 c3 02 	sts	0x02C3, r27	; 0x8002c3 <Vehicle_Speed_Prev+0x3>
     378:	80 90 cc 02 	lds	r8, 0x02CC	; 0x8002cc <Relative_Speed>
     37c:	90 90 cd 02 	lds	r9, 0x02CD	; 0x8002cd <Relative_Speed+0x1>
     380:	a0 90 ce 02 	lds	r10, 0x02CE	; 0x8002ce <Relative_Speed+0x2>
     384:	b0 90 cf 02 	lds	r11, 0x02CF	; 0x8002cf <Relative_Speed+0x3>
     388:	80 92 bc 02 	sts	0x02BC, r8	; 0x8002bc <Relative_Speed_Prev>
     38c:	90 92 bd 02 	sts	0x02BD, r9	; 0x8002bd <Relative_Speed_Prev+0x1>
     390:	a0 92 be 02 	sts	0x02BE, r10	; 0x8002be <Relative_Speed_Prev+0x2>
     394:	b0 92 bf 02 	sts	0x02BF, r11	; 0x8002bf <Relative_Speed_Prev+0x3>
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e0       	ldi	r20, 0x00	; 0
     39e:	5f e3       	ldi	r21, 0x3F	; 63
     3a0:	bc 01       	movw	r22, r24
     3a2:	cd 01       	movw	r24, r26
     3a4:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     3a8:	69 8b       	std	Y+17, r22	; 0x11
     3aa:	7a 8b       	std	Y+18, r23	; 0x12
     3ac:	8b 8b       	std	Y+19, r24	; 0x13
     3ae:	9c 8b       	std	Y+20, r25	; 0x14
     3b0:	60 93 b4 02 	sts	0x02B4, r22	; 0x8002b4 <Safety_Distance_Regulation>
     3b4:	70 93 b5 02 	sts	0x02B5, r23	; 0x8002b5 <Safety_Distance_Regulation+0x1>
     3b8:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <Safety_Distance_Regulation+0x2>
     3bc:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <Safety_Distance_Regulation+0x3>
     3c0:	dc 01       	movw	r26, r24
     3c2:	cb 01       	movw	r24, r22
     3c4:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <Safety_Distance>
     3c8:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <Safety_Distance+0x1>
     3cc:	a0 93 93 04 	sts	0x0493, r26	; 0x800493 <Safety_Distance+0x2>
     3d0:	b0 93 94 04 	sts	0x0494, r27	; 0x800494 <Safety_Distance+0x3>
     3d4:	26 e6       	ldi	r18, 0x66	; 102
     3d6:	36 e6       	ldi	r19, 0x66	; 102
     3d8:	46 e6       	ldi	r20, 0x66	; 102
     3da:	50 e4       	ldi	r21, 0x40	; 64
     3dc:	69 85       	ldd	r22, Y+9	; 0x09
     3de:	7a 85       	ldd	r23, Y+10	; 0x0a
     3e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     3e2:	9c 85       	ldd	r25, Y+12	; 0x0c
     3e4:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     3e8:	9b 01       	movw	r18, r22
     3ea:	ac 01       	movw	r20, r24
     3ec:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	40 e0       	ldi	r20, 0x00	; 0
     3fe:	5e e3       	ldi	r21, 0x3E	; 62
     400:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     404:	6d 8f       	std	Y+29, r22	; 0x1d
     406:	7e 8f       	std	Y+30, r23	; 0x1e
     408:	8f 8f       	std	Y+31, r24	; 0x1f
     40a:	98 a3       	std	Y+32, r25	; 0x20
     40c:	60 93 90 02 	sts	0x0290, r22	; 0x800290 <SafetyDistance_HalfBrake>
     410:	70 93 91 02 	sts	0x0291, r23	; 0x800291 <SafetyDistance_HalfBrake+0x1>
     414:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <SafetyDistance_HalfBrake+0x2>
     418:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <SafetyDistance_HalfBrake+0x3>
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	40 e4       	ldi	r20, 0x40	; 64
     422:	51 e4       	ldi	r21, 0x41	; 65
     424:	69 81       	ldd	r22, Y+1	; 0x01
     426:	7a 81       	ldd	r23, Y+2	; 0x02
     428:	8b 81       	ldd	r24, Y+3	; 0x03
     42a:	9c 81       	ldd	r25, Y+4	; 0x04
     42c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     430:	69 a3       	std	Y+33, r22	; 0x21
     432:	7a a3       	std	Y+34, r23	; 0x22
     434:	8b a3       	std	Y+35, r24	; 0x23
     436:	9c a3       	std	Y+36, r25	; 0x24
     438:	60 93 88 02 	sts	0x0288, r22	; 0x800288 <SafetyDistance_HalfFullBrake>
     43c:	70 93 89 02 	sts	0x0289, r23	; 0x800289 <SafetyDistance_HalfFullBrake+0x1>
     440:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <SafetyDistance_HalfFullBrake+0x2>
     444:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <SafetyDistance_HalfFullBrake+0x3>
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	40 e8       	ldi	r20, 0x80	; 128
     44e:	5d e3       	ldi	r21, 0x3D	; 61
     450:	69 81       	ldd	r22, Y+1	; 0x01
     452:	7a 81       	ldd	r23, Y+2	; 0x02
     454:	8b 81       	ldd	r24, Y+3	; 0x03
     456:	9c 81       	ldd	r25, Y+4	; 0x04
     458:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     45c:	69 8f       	std	Y+25, r22	; 0x19
     45e:	7a 8f       	std	Y+26, r23	; 0x1a
     460:	8b 8f       	std	Y+27, r24	; 0x1b
     462:	9c 8f       	std	Y+28, r25	; 0x1c
     464:	60 93 8c 02 	sts	0x028C, r22	; 0x80028c <SafetyDistance_FullBrake>
     468:	70 93 8d 02 	sts	0x028D, r23	; 0x80028d <SafetyDistance_FullBrake+0x1>
     46c:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <SafetyDistance_FullBrake+0x2>
     470:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <SafetyDistance_FullBrake+0x3>
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	40 ec       	ldi	r20, 0xC0	; 192
     47a:	50 e4       	ldi	r21, 0x40	; 64
     47c:	69 81       	ldd	r22, Y+1	; 0x01
     47e:	7a 81       	ldd	r23, Y+2	; 0x02
     480:	8b 81       	ldd	r24, Y+3	; 0x03
     482:	9c 81       	ldd	r25, Y+4	; 0x04
     484:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     488:	6d a3       	std	Y+37, r22	; 0x25
     48a:	7e a3       	std	Y+38, r23	; 0x26
     48c:	8f a3       	std	Y+39, r24	; 0x27
     48e:	98 a7       	std	Y+40, r25	; 0x28
     490:	60 93 84 02 	sts	0x0284, r22	; 0x800284 <SafetyDistance_AccDisabled>
     494:	70 93 85 02 	sts	0x0285, r23	; 0x800285 <SafetyDistance_AccDisabled+0x1>
     498:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <SafetyDistance_AccDisabled+0x2>
     49c:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <SafetyDistance_AccDisabled+0x3>
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	40 ea       	ldi	r20, 0xA0	; 160
     4a6:	50 e4       	ldi	r21, 0x40	; 64
     4a8:	69 81       	ldd	r22, Y+1	; 0x01
     4aa:	7a 81       	ldd	r23, Y+2	; 0x02
     4ac:	8b 81       	ldd	r24, Y+3	; 0x03
     4ae:	9c 81       	ldd	r25, Y+4	; 0x04
     4b0:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     4b4:	6d 87       	std	Y+13, r22	; 0x0d
     4b6:	7e 87       	std	Y+14, r23	; 0x0e
     4b8:	8f 87       	std	Y+15, r24	; 0x0f
     4ba:	98 8b       	std	Y+16, r25	; 0x10
     4bc:	60 93 80 02 	sts	0x0280, r22	; 0x800280 <SafetyDistance_AccMin>
     4c0:	70 93 81 02 	sts	0x0281, r23	; 0x800281 <SafetyDistance_AccMin+0x1>
     4c4:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <SafetyDistance_AccMin+0x2>
     4c8:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <SafetyDistance_AccMin+0x3>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	40 e8       	ldi	r20, 0x80	; 128
     4d2:	5e e3       	ldi	r21, 0x3E	; 62
     4d4:	69 81       	ldd	r22, Y+1	; 0x01
     4d6:	7a 81       	ldd	r23, Y+2	; 0x02
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	9c 81       	ldd	r25, Y+4	; 0x04
     4dc:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     4e0:	6d 8b       	std	Y+21, r22	; 0x15
     4e2:	7e 8b       	std	Y+22, r23	; 0x16
     4e4:	8f 8b       	std	Y+23, r24	; 0x17
     4e6:	98 8f       	std	Y+24, r25	; 0x18
     4e8:	60 93 7c 02 	sts	0x027C, r22	; 0x80027c <__data_end>
     4ec:	70 93 7d 02 	sts	0x027D, r23	; 0x80027d <__data_end+0x1>
     4f0:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <__data_end+0x2>
     4f4:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <__data_end+0x3>
     4f8:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <Relative_Distance>
     4fc:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <Relative_Distance+0x1>
     500:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <Relative_Distance+0x2>
     504:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <Relative_Distance+0x3>
     508:	26 e6       	ldi	r18, 0x66	; 102
     50a:	36 e6       	ldi	r19, 0x66	; 102
     50c:	46 e6       	ldi	r20, 0x66	; 102
     50e:	50 e4       	ldi	r21, 0x40	; 64
     510:	c5 01       	movw	r24, r10
     512:	b4 01       	movw	r22, r8
     514:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     518:	2b 01       	movw	r4, r22
     51a:	3c 01       	movw	r6, r24
     51c:	9b 01       	movw	r18, r22
     51e:	ac 01       	movw	r20, r24
     520:	c7 01       	movw	r24, r14
     522:	b6 01       	movw	r22, r12
     524:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     528:	6d 83       	std	Y+5, r22	; 0x05
     52a:	7e 83       	std	Y+6, r23	; 0x06
     52c:	8f 83       	std	Y+7, r24	; 0x07
     52e:	98 87       	std	Y+8, r25	; 0x08
     530:	60 93 b0 02 	sts	0x02B0, r22	; 0x8002b0 <TTC>
     534:	70 93 b1 02 	sts	0x02B1, r23	; 0x8002b1 <TTC+0x1>
     538:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <TTC+0x2>
     53c:	90 93 b3 02 	sts	0x02B3, r25	; 0x8002b3 <TTC+0x3>
     540:	a3 01       	movw	r20, r6
     542:	92 01       	movw	r18, r4
     544:	6d 8d       	ldd	r22, Y+29	; 0x1d
     546:	7e 8d       	ldd	r23, Y+30	; 0x1e
     548:	8f 8d       	ldd	r24, Y+31	; 0x1f
     54a:	98 a1       	ldd	r25, Y+32	; 0x20
     54c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     550:	6d a7       	std	Y+45, r22	; 0x2d
     552:	7e a7       	std	Y+46, r23	; 0x2e
     554:	8f a7       	std	Y+47, r24	; 0x2f
     556:	98 ab       	std	Y+48, r25	; 0x30
     558:	60 93 ac 02 	sts	0x02AC, r22	; 0x8002ac <TTC_HalfBrake>
     55c:	70 93 ad 02 	sts	0x02AD, r23	; 0x8002ad <TTC_HalfBrake+0x1>
     560:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <TTC_HalfBrake+0x2>
     564:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <TTC_HalfBrake+0x3>
     568:	a3 01       	movw	r20, r6
     56a:	92 01       	movw	r18, r4
     56c:	69 a1       	ldd	r22, Y+33	; 0x21
     56e:	7a a1       	ldd	r23, Y+34	; 0x22
     570:	8b a1       	ldd	r24, Y+35	; 0x23
     572:	9c a1       	ldd	r25, Y+36	; 0x24
     574:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     578:	69 ab       	std	Y+49, r22	; 0x31
     57a:	7a ab       	std	Y+50, r23	; 0x32
     57c:	8b ab       	std	Y+51, r24	; 0x33
     57e:	9c ab       	std	Y+52, r25	; 0x34
     580:	60 93 a4 02 	sts	0x02A4, r22	; 0x8002a4 <TTC_HalfFullBrake>
     584:	70 93 a5 02 	sts	0x02A5, r23	; 0x8002a5 <TTC_HalfFullBrake+0x1>
     588:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <TTC_HalfFullBrake+0x2>
     58c:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <TTC_HalfFullBrake+0x3>
     590:	a3 01       	movw	r20, r6
     592:	92 01       	movw	r18, r4
     594:	69 8d       	ldd	r22, Y+25	; 0x19
     596:	7a 8d       	ldd	r23, Y+26	; 0x1a
     598:	8b 8d       	ldd	r24, Y+27	; 0x1b
     59a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     59c:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     5a0:	25 96       	adiw	r28, 0x05	; 5
     5a2:	6c af       	std	Y+60, r22	; 0x3c
     5a4:	7d af       	std	Y+61, r23	; 0x3d
     5a6:	8e af       	std	Y+62, r24	; 0x3e
     5a8:	9f af       	std	Y+63, r25	; 0x3f
     5aa:	25 97       	sbiw	r28, 0x05	; 5
     5ac:	60 93 a8 02 	sts	0x02A8, r22	; 0x8002a8 <TTC_FullBrake>
     5b0:	70 93 a9 02 	sts	0x02A9, r23	; 0x8002a9 <TTC_FullBrake+0x1>
     5b4:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <TTC_FullBrake+0x2>
     5b8:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <TTC_FullBrake+0x3>
     5bc:	a3 01       	movw	r20, r6
     5be:	92 01       	movw	r18, r4
     5c0:	6d a1       	ldd	r22, Y+37	; 0x25
     5c2:	7e a1       	ldd	r23, Y+38	; 0x26
     5c4:	8f a1       	ldd	r24, Y+39	; 0x27
     5c6:	98 a5       	ldd	r25, Y+40	; 0x28
     5c8:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     5cc:	6d ab       	std	Y+53, r22	; 0x35
     5ce:	7e ab       	std	Y+54, r23	; 0x36
     5d0:	8f ab       	std	Y+55, r24	; 0x37
     5d2:	98 af       	std	Y+56, r25	; 0x38
     5d4:	60 93 9c 02 	sts	0x029C, r22	; 0x80029c <TTC_AccDisabled>
     5d8:	70 93 9d 02 	sts	0x029D, r23	; 0x80029d <TTC_AccDisabled+0x1>
     5dc:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <TTC_AccDisabled+0x2>
     5e0:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <TTC_AccDisabled+0x3>
     5e4:	a3 01       	movw	r20, r6
     5e6:	92 01       	movw	r18, r4
     5e8:	6d 85       	ldd	r22, Y+13	; 0x0d
     5ea:	7e 85       	ldd	r23, Y+14	; 0x0e
     5ec:	8f 85       	ldd	r24, Y+15	; 0x0f
     5ee:	98 89       	ldd	r25, Y+16	; 0x10
     5f0:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     5f4:	69 af       	std	Y+57, r22	; 0x39
     5f6:	7a af       	std	Y+58, r23	; 0x3a
     5f8:	8b af       	std	Y+59, r24	; 0x3b
     5fa:	9c af       	std	Y+60, r25	; 0x3c
     5fc:	60 93 98 02 	sts	0x0298, r22	; 0x800298 <TTC_AccMin>
     600:	70 93 99 02 	sts	0x0299, r23	; 0x800299 <TTC_AccMin+0x1>
     604:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <TTC_AccMin+0x2>
     608:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <TTC_AccMin+0x3>
     60c:	a3 01       	movw	r20, r6
     60e:	92 01       	movw	r18, r4
     610:	6d 89       	ldd	r22, Y+21	; 0x15
     612:	7e 89       	ldd	r23, Y+22	; 0x16
     614:	8f 89       	ldd	r24, Y+23	; 0x17
     616:	98 8d       	ldd	r25, Y+24	; 0x18
     618:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     61c:	69 a7       	std	Y+41, r22	; 0x29
     61e:	7a a7       	std	Y+42, r23	; 0x2a
     620:	8b a7       	std	Y+43, r24	; 0x2b
     622:	9c a7       	std	Y+44, r25	; 0x2c
     624:	60 93 94 02 	sts	0x0294, r22	; 0x800294 <TTC_AccMax>
     628:	70 93 95 02 	sts	0x0295, r23	; 0x800295 <TTC_AccMax+0x1>
     62c:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <TTC_AccMax+0x2>
     630:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <TTC_AccMax+0x3>
     634:	a3 01       	movw	r20, r6
     636:	92 01       	movw	r18, r4
     638:	69 89       	ldd	r22, Y+17	; 0x11
     63a:	7a 89       	ldd	r23, Y+18	; 0x12
     63c:	8b 89       	ldd	r24, Y+19	; 0x13
     63e:	9c 89       	ldd	r25, Y+20	; 0x14
     640:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     644:	21 96       	adiw	r28, 0x01	; 1
     646:	6c af       	std	Y+60, r22	; 0x3c
     648:	7d af       	std	Y+61, r23	; 0x3d
     64a:	8e af       	std	Y+62, r24	; 0x3e
     64c:	9f af       	std	Y+63, r25	; 0x3f
     64e:	21 97       	sbiw	r28, 0x01	; 1
     650:	60 93 a0 02 	sts	0x02A0, r22	; 0x8002a0 <TTC_SafetyDistMin>
     654:	70 93 a1 02 	sts	0x02A1, r23	; 0x8002a1 <TTC_SafetyDistMin+0x1>
     658:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <TTC_SafetyDistMin+0x2>
     65c:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <TTC_SafetyDistMin+0x3>
     660:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <Output_Acceleration>
     664:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <Output_Acceleration+0x1>
     668:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <Output_Acceleration+0x2>
     66c:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <Output_Acceleration+0x3>
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	a9 01       	movw	r20, r18
     676:	c5 01       	movw	r24, r10
     678:	b4 01       	movw	r22, r8
     67a:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     67e:	18 16       	cp	r1, r24
     680:	7c f4       	brge	.+30     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
     682:	25 96       	adiw	r28, 0x05	; 5
     684:	2c ad       	ldd	r18, Y+60	; 0x3c
     686:	3d ad       	ldd	r19, Y+61	; 0x3d
     688:	4e ad       	ldd	r20, Y+62	; 0x3e
     68a:	5f ad       	ldd	r21, Y+63	; 0x3f
     68c:	25 97       	sbiw	r28, 0x05	; 5
     68e:	6d 81       	ldd	r22, Y+5	; 0x05
     690:	7e 81       	ldd	r23, Y+6	; 0x06
     692:	8f 81       	ldd	r24, Y+7	; 0x07
     694:	98 85       	ldd	r25, Y+8	; 0x08
     696:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     69a:	18 16       	cp	r1, r24
     69c:	0c f1       	brlt	.+66     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
     69e:	13 c0       	rjmp	.+38     	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	a9 01       	movw	r20, r18
     6a6:	c5 01       	movw	r24, r10
     6a8:	b4 01       	movw	r22, r8
     6aa:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     6ae:	87 ff       	sbrs	r24, 7
     6b0:	de c0       	rjmp	.+444    	; 0x86e <__LOCK_REGION_LENGTH__+0x46e>
     6b2:	29 8d       	ldd	r18, Y+25	; 0x19
     6b4:	3a 8d       	ldd	r19, Y+26	; 0x1a
     6b6:	4b 8d       	ldd	r20, Y+27	; 0x1b
     6b8:	5c 8d       	ldd	r21, Y+28	; 0x1c
     6ba:	c7 01       	movw	r24, r14
     6bc:	b6 01       	movw	r22, r12
     6be:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     6c2:	18 16       	cp	r1, r24
     6c4:	5c f1       	brlt	.+86     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	a0 e0       	ldi	r26, 0x00	; 0
     6cc:	b1 e4       	ldi	r27, 0x41	; 65
     6ce:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Output_Acceleration>
     6d2:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Output_Acceleration+0x1>
     6d6:	a0 93 c9 02 	sts	0x02C9, r26	; 0x8002c9 <Output_Acceleration+0x2>
     6da:	b0 93 ca 02 	sts	0x02CA, r27	; 0x8002ca <Output_Acceleration+0x3>
     6de:	3e c0       	rjmp	.+124    	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	a9 01       	movw	r20, r18
     6e6:	c5 01       	movw	r24, r10
     6e8:	b4 01       	movw	r22, r8
     6ea:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     6ee:	87 fd       	sbrc	r24, 7
     6f0:	b8 c2       	rjmp	.+1392   	; 0xc62 <__stack+0x363>
     6f2:	29 a9       	ldd	r18, Y+49	; 0x31
     6f4:	3a a9       	ldd	r19, Y+50	; 0x32
     6f6:	4b a9       	ldd	r20, Y+51	; 0x33
     6f8:	5c a9       	ldd	r21, Y+52	; 0x34
     6fa:	6d 81       	ldd	r22, Y+5	; 0x05
     6fc:	7e 81       	ldd	r23, Y+6	; 0x06
     6fe:	8f 81       	ldd	r24, Y+7	; 0x07
     700:	98 85       	ldd	r25, Y+8	; 0x08
     702:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     706:	18 16       	cp	r1, r24
     708:	9c f4       	brge	.+38     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	a9 01       	movw	r20, r18
     710:	c5 01       	movw	r24, r10
     712:	b4 01       	movw	r22, r8
     714:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     718:	87 ff       	sbrs	r24, 7
     71a:	2d c0       	rjmp	.+90     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     71c:	29 a1       	ldd	r18, Y+33	; 0x21
     71e:	3a a1       	ldd	r19, Y+34	; 0x22
     720:	4b a1       	ldd	r20, Y+35	; 0x23
     722:	5c a1       	ldd	r21, Y+36	; 0x24
     724:	c7 01       	movw	r24, r14
     726:	b6 01       	movw	r22, r12
     728:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     72c:	18 16       	cp	r1, r24
     72e:	cc f0       	brlt	.+50     	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
     730:	a7 01       	movw	r20, r14
     732:	96 01       	movw	r18, r12
     734:	c7 01       	movw	r24, r14
     736:	b6 01       	movw	r22, r12
     738:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     73c:	9b 01       	movw	r18, r22
     73e:	ac 01       	movw	r20, r24
     740:	69 81       	ldd	r22, Y+1	; 0x01
     742:	7a 81       	ldd	r23, Y+2	; 0x02
     744:	8b 81       	ldd	r24, Y+3	; 0x03
     746:	9c 81       	ldd	r25, Y+4	; 0x04
     748:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     74c:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <Output_Acceleration>
     750:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <Output_Acceleration+0x1>
     754:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <Output_Acceleration+0x2>
     758:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <Output_Acceleration+0x3>
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0f c1       	rjmp	.+542    	; 0x980 <__stack+0x81>
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	a9 01       	movw	r20, r18
     768:	c5 01       	movw	r24, r10
     76a:	b4 01       	movw	r22, r8
     76c:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     770:	18 16       	cp	r1, r24
     772:	0c f0       	brlt	.+2      	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     774:	4c c1       	rjmp	.+664    	; 0xa0e <__stack+0x10f>
     776:	2d a5       	ldd	r18, Y+45	; 0x2d
     778:	3e a5       	ldd	r19, Y+46	; 0x2e
     77a:	4f a5       	ldd	r20, Y+47	; 0x2f
     77c:	58 a9       	ldd	r21, Y+48	; 0x30
     77e:	6d 81       	ldd	r22, Y+5	; 0x05
     780:	7e 81       	ldd	r23, Y+6	; 0x06
     782:	8f 81       	ldd	r24, Y+7	; 0x07
     784:	98 85       	ldd	r25, Y+8	; 0x08
     786:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     78a:	18 16       	cp	r1, r24
     78c:	0c f0       	brlt	.+2      	; 0x790 <__LOCK_REGION_LENGTH__+0x390>
     78e:	49 c1       	rjmp	.+658    	; 0xa22 <__stack+0x123>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	a9 01       	movw	r20, r18
     796:	c5 01       	movw	r24, r10
     798:	b4 01       	movw	r22, r8
     79a:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     79e:	87 fd       	sbrc	r24, 7
     7a0:	36 c1       	rjmp	.+620    	; 0xa0e <__stack+0x10f>
     7a2:	21 96       	adiw	r28, 0x01	; 1
     7a4:	2c ad       	ldd	r18, Y+60	; 0x3c
     7a6:	3d ad       	ldd	r19, Y+61	; 0x3d
     7a8:	4e ad       	ldd	r20, Y+62	; 0x3e
     7aa:	5f ad       	ldd	r21, Y+63	; 0x3f
     7ac:	21 97       	sbiw	r28, 0x01	; 1
     7ae:	6d 81       	ldd	r22, Y+5	; 0x05
     7b0:	7e 81       	ldd	r23, Y+6	; 0x06
     7b2:	8f 81       	ldd	r24, Y+7	; 0x07
     7b4:	98 85       	ldd	r25, Y+8	; 0x08
     7b6:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	0c f0       	brlt	.+2      	; 0x7c0 <__LOCK_REGION_LENGTH__+0x3c0>
     7be:	5e c1       	rjmp	.+700    	; 0xa7c <__stack+0x17d>
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	a9 01       	movw	r20, r18
     7c6:	c5 01       	movw	r24, r10
     7c8:	b4 01       	movw	r22, r8
     7ca:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     7ce:	87 fd       	sbrc	r24, 7
     7d0:	4b c1       	rjmp	.+662    	; 0xa68 <__stack+0x169>
     7d2:	2d a9       	ldd	r18, Y+53	; 0x35
     7d4:	3e a9       	ldd	r19, Y+54	; 0x36
     7d6:	4f a9       	ldd	r20, Y+55	; 0x37
     7d8:	58 ad       	ldd	r21, Y+56	; 0x38
     7da:	6d 81       	ldd	r22, Y+5	; 0x05
     7dc:	7e 81       	ldd	r23, Y+6	; 0x06
     7de:	8f 81       	ldd	r24, Y+7	; 0x07
     7e0:	98 85       	ldd	r25, Y+8	; 0x08
     7e2:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     7e6:	18 16       	cp	r1, r24
     7e8:	0c f0       	brlt	.+2      	; 0x7ec <__LOCK_REGION_LENGTH__+0x3ec>
     7ea:	75 c1       	rjmp	.+746    	; 0xad6 <__stack+0x1d7>
     7ec:	20 e0       	ldi	r18, 0x00	; 0
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	a9 01       	movw	r20, r18
     7f2:	c5 01       	movw	r24, r10
     7f4:	b4 01       	movw	r22, r8
     7f6:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     7fa:	87 fd       	sbrc	r24, 7
     7fc:	62 c1       	rjmp	.+708    	; 0xac2 <__stack+0x1c3>
     7fe:	29 ad       	ldd	r18, Y+57	; 0x39
     800:	3a ad       	ldd	r19, Y+58	; 0x3a
     802:	4b ad       	ldd	r20, Y+59	; 0x3b
     804:	5c ad       	ldd	r21, Y+60	; 0x3c
     806:	6d 81       	ldd	r22, Y+5	; 0x05
     808:	7e 81       	ldd	r23, Y+6	; 0x06
     80a:	8f 81       	ldd	r24, Y+7	; 0x07
     80c:	98 85       	ldd	r25, Y+8	; 0x08
     80e:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     812:	18 16       	cp	r1, r24
     814:	0c f0       	brlt	.+2      	; 0x818 <__LOCK_REGION_LENGTH__+0x418>
     816:	7a c1       	rjmp	.+756    	; 0xb0c <__stack+0x20d>
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	a9 01       	movw	r20, r18
     81e:	c5 01       	movw	r24, r10
     820:	b4 01       	movw	r22, r8
     822:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     826:	87 fd       	sbrc	r24, 7
     828:	67 c1       	rjmp	.+718    	; 0xaf8 <__stack+0x1f9>
     82a:	29 a5       	ldd	r18, Y+41	; 0x29
     82c:	3a a5       	ldd	r19, Y+42	; 0x2a
     82e:	4b a5       	ldd	r20, Y+43	; 0x2b
     830:	5c a5       	ldd	r21, Y+44	; 0x2c
     832:	6d 81       	ldd	r22, Y+5	; 0x05
     834:	7e 81       	ldd	r23, Y+6	; 0x06
     836:	8f 81       	ldd	r24, Y+7	; 0x07
     838:	98 85       	ldd	r25, Y+8	; 0x08
     83a:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     83e:	18 16       	cp	r1, r24
     840:	0c f0       	brlt	.+2      	; 0x844 <__LOCK_REGION_LENGTH__+0x444>
     842:	af c1       	rjmp	.+862    	; 0xba2 <__stack+0x2a3>
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	a9 01       	movw	r20, r18
     84a:	c5 01       	movw	r24, r10
     84c:	b4 01       	movw	r22, r8
     84e:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     852:	87 fd       	sbrc	r24, 7
     854:	92 c1       	rjmp	.+804    	; 0xb7a <__stack+0x27b>
     856:	29 a5       	ldd	r18, Y+41	; 0x29
     858:	3a a5       	ldd	r19, Y+42	; 0x2a
     85a:	4b a5       	ldd	r20, Y+43	; 0x2b
     85c:	5c a5       	ldd	r21, Y+44	; 0x2c
     85e:	6d 81       	ldd	r22, Y+5	; 0x05
     860:	7e 81       	ldd	r23, Y+6	; 0x06
     862:	8f 81       	ldd	r24, Y+7	; 0x07
     864:	98 85       	ldd	r25, Y+8	; 0x08
     866:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     86a:	18 16       	cp	r1, r24
     86c:	a4 f0       	brlt	.+40     	; 0x896 <__LOCK_REGION_LENGTH__+0x496>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	a9 01       	movw	r20, r18
     874:	c5 01       	movw	r24, r10
     876:	b4 01       	movw	r22, r8
     878:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     87c:	87 ff       	sbrs	r24, 7
     87e:	88 c0       	rjmp	.+272    	; 0x990 <__stack+0x91>
     880:	2d 89       	ldd	r18, Y+21	; 0x15
     882:	3e 89       	ldd	r19, Y+22	; 0x16
     884:	4f 89       	ldd	r20, Y+23	; 0x17
     886:	58 8d       	ldd	r21, Y+24	; 0x18
     888:	c7 01       	movw	r24, r14
     88a:	b6 01       	movw	r22, r12
     88c:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     890:	18 16       	cp	r1, r24
     892:	0c f0       	brlt	.+2      	; 0x896 <__LOCK_REGION_LENGTH__+0x496>
     894:	7d c0       	rjmp	.+250    	; 0x990 <__stack+0x91>
     896:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <Speed_SetbyDriver>
     89a:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <Speed_SetbyDriver+0x1>
     89e:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <Speed_SetbyDriver+0x2>
     8a2:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <Speed_SetbyDriver+0x3>
     8a6:	29 85       	ldd	r18, Y+9	; 0x09
     8a8:	3a 85       	ldd	r19, Y+10	; 0x0a
     8aa:	4b 85       	ldd	r20, Y+11	; 0x0b
     8ac:	5c 85       	ldd	r21, Y+12	; 0x0c
     8ae:	c7 01       	movw	r24, r14
     8b0:	b6 01       	movw	r22, r12
     8b2:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     8b6:	29 85       	ldd	r18, Y+9	; 0x09
     8b8:	3a 85       	ldd	r19, Y+10	; 0x0a
     8ba:	4b 85       	ldd	r20, Y+11	; 0x0b
     8bc:	5c 85       	ldd	r21, Y+12	; 0x0c
     8be:	18 16       	cp	r1, r24
     8c0:	84 f5       	brge	.+96     	; 0x922 <__stack+0x23>
     8c2:	c7 01       	movw	r24, r14
     8c4:	b6 01       	movw	r22, r12
     8c6:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     8ca:	6b 01       	movw	r12, r22
     8cc:	7c 01       	movw	r14, r24
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	40 e4       	ldi	r20, 0x40	; 64
     8d4:	50 e4       	ldi	r21, 0x40	; 64
     8d6:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     8da:	18 16       	cp	r1, r24
     8dc:	6c f4       	brge	.+26     	; 0x8f8 <__LOCK_REGION_LENGTH__+0x4f8>
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	a0 e4       	ldi	r26, 0x40	; 64
     8e4:	b0 e4       	ldi	r27, 0x40	; 64
     8e6:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Output_Acceleration>
     8ea:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Output_Acceleration+0x1>
     8ee:	a0 93 c9 02 	sts	0x02C9, r26	; 0x8002c9 <Output_Acceleration+0x2>
     8f2:	b0 93 ca 02 	sts	0x02CA, r27	; 0x8002ca <Output_Acceleration+0x3>
     8f6:	08 c0       	rjmp	.+16     	; 0x908 <__stack+0x9>
     8f8:	c0 92 c7 02 	sts	0x02C7, r12	; 0x8002c7 <Output_Acceleration>
     8fc:	d0 92 c8 02 	sts	0x02C8, r13	; 0x8002c8 <Output_Acceleration+0x1>
     900:	e0 92 c9 02 	sts	0x02C9, r14	; 0x8002c9 <Output_Acceleration+0x2>
     904:	f0 92 ca 02 	sts	0x02CA, r15	; 0x8002ca <Output_Acceleration+0x3>
     908:	85 e0       	ldi	r24, 0x05	; 5
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	90 93 c6 02 	sts	0x02C6, r25	; 0x8002c6 <Status_Accel_Decel+0x1>
     910:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <Status_Accel_Decel>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     91c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     920:	37 c0       	rjmp	.+110    	; 0x990 <__stack+0x91>
     922:	c7 01       	movw	r24, r14
     924:	b6 01       	movw	r22, r12
     926:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     92a:	87 ff       	sbrs	r24, 7
     92c:	31 c0       	rjmp	.+98     	; 0x990 <__stack+0x91>
     92e:	a7 01       	movw	r20, r14
     930:	96 01       	movw	r18, r12
     932:	69 85       	ldd	r22, Y+9	; 0x09
     934:	7a 85       	ldd	r23, Y+10	; 0x0a
     936:	8b 85       	ldd	r24, Y+11	; 0x0b
     938:	9c 85       	ldd	r25, Y+12	; 0x0c
     93a:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     93e:	6b 01       	movw	r12, r22
     940:	7c 01       	movw	r14, r24
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	40 e4       	ldi	r20, 0x40	; 64
     948:	50 ec       	ldi	r21, 0xC0	; 192
     94a:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     94e:	18 16       	cp	r1, r24
     950:	6c f4       	brge	.+26     	; 0x96c <__stack+0x6d>
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	a0 e4       	ldi	r26, 0x40	; 64
     958:	b0 ec       	ldi	r27, 0xC0	; 192
     95a:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Output_Acceleration>
     95e:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Output_Acceleration+0x1>
     962:	a0 93 c9 02 	sts	0x02C9, r26	; 0x8002c9 <Output_Acceleration+0x2>
     966:	b0 93 ca 02 	sts	0x02CA, r27	; 0x8002ca <Output_Acceleration+0x3>
     96a:	08 c0       	rjmp	.+16     	; 0x97c <__stack+0x7d>
     96c:	c0 92 c7 02 	sts	0x02C7, r12	; 0x8002c7 <Output_Acceleration>
     970:	d0 92 c8 02 	sts	0x02C8, r13	; 0x8002c8 <Output_Acceleration+0x1>
     974:	e0 92 c9 02 	sts	0x02C9, r14	; 0x8002c9 <Output_Acceleration+0x2>
     978:	f0 92 ca 02 	sts	0x02CA, r15	; 0x8002ca <Output_Acceleration+0x3>
     97c:	85 e0       	ldi	r24, 0x05	; 5
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	90 93 c6 02 	sts	0x02C6, r25	; 0x8002c6 <Status_Accel_Decel+0x1>
     984:	80 93 c5 02 	sts	0x02C5, r24	; 0x8002c5 <Status_Accel_Decel>
     988:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Status_Dec_Inc+0x1>
     98c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Status_Dec_Inc>
     990:	cc 5b       	subi	r28, 0xBC	; 188
     992:	df 4f       	sbci	r29, 0xFF	; 255
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	f8 94       	cli
     998:	de bf       	out	0x3e, r29	; 62
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	cd bf       	out	0x3d, r28	; 61
     99e:	df 91       	pop	r29
     9a0:	cf 91       	pop	r28
     9a2:	ff 90       	pop	r15
     9a4:	ef 90       	pop	r14
     9a6:	df 90       	pop	r13
     9a8:	cf 90       	pop	r12
     9aa:	bf 90       	pop	r11
     9ac:	af 90       	pop	r10
     9ae:	9f 90       	pop	r9
     9b0:	8f 90       	pop	r8
     9b2:	7f 90       	pop	r7
     9b4:	6f 90       	pop	r6
     9b6:	5f 90       	pop	r5
     9b8:	4f 90       	pop	r4
     9ba:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <Check_Enable_of_SubFeatures>
     9be:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <Output_Acceleration>
     9c2:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <Output_Acceleration+0x1>
     9c6:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <Output_Acceleration+0x2>
     9ca:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <Output_Acceleration+0x3>
     9ce:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <Status_Accel_Decel+0x1>
     9d2:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <Status_Accel_Decel>
     9d6:	82 e0       	ldi	r24, 0x02	; 2
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     9de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     9e2:	cc 5b       	subi	r28, 0xBC	; 188
     9e4:	df 4f       	sbci	r29, 0xFF	; 255
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	ff 90       	pop	r15
     9f6:	ef 90       	pop	r14
     9f8:	df 90       	pop	r13
     9fa:	cf 90       	pop	r12
     9fc:	bf 90       	pop	r11
     9fe:	af 90       	pop	r10
     a00:	9f 90       	pop	r9
     a02:	8f 90       	pop	r8
     a04:	7f 90       	pop	r7
     a06:	6f 90       	pop	r6
     a08:	5f 90       	pop	r5
     a0a:	4f 90       	pop	r4
     a0c:	08 95       	ret
     a0e:	2d 8d       	ldd	r18, Y+29	; 0x1d
     a10:	3e 8d       	ldd	r19, Y+30	; 0x1e
     a12:	4f 8d       	ldd	r20, Y+31	; 0x1f
     a14:	58 a1       	ldd	r21, Y+32	; 0x20
     a16:	c7 01       	movw	r24, r14
     a18:	b6 01       	movw	r22, r12
     a1a:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     a1e:	18 16       	cp	r1, r24
     a20:	cc f0       	brlt	.+50     	; 0xa54 <__stack+0x155>
     a22:	a7 01       	movw	r20, r14
     a24:	96 01       	movw	r18, r12
     a26:	c7 01       	movw	r24, r14
     a28:	b6 01       	movw	r22, r12
     a2a:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     a2e:	9b 01       	movw	r18, r22
     a30:	ac 01       	movw	r20, r24
     a32:	69 81       	ldd	r22, Y+1	; 0x01
     a34:	7a 81       	ldd	r23, Y+2	; 0x02
     a36:	8b 81       	ldd	r24, Y+3	; 0x03
     a38:	9c 81       	ldd	r25, Y+4	; 0x04
     a3a:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     a3e:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <Output_Acceleration>
     a42:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <Output_Acceleration+0x1>
     a46:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <Output_Acceleration+0x2>
     a4a:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <Output_Acceleration+0x3>
     a4e:	82 e0       	ldi	r24, 0x02	; 2
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	96 cf       	rjmp	.-212    	; 0x980 <__stack+0x81>
     a54:	20 e0       	ldi	r18, 0x00	; 0
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	a9 01       	movw	r20, r18
     a5a:	c5 01       	movw	r24, r10
     a5c:	b4 01       	movw	r22, r8
     a5e:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     a62:	18 16       	cp	r1, r24
     a64:	0c f4       	brge	.+2      	; 0xa68 <__stack+0x169>
     a66:	9d ce       	rjmp	.-710    	; 0x7a2 <__LOCK_REGION_LENGTH__+0x3a2>
     a68:	29 89       	ldd	r18, Y+17	; 0x11
     a6a:	3a 89       	ldd	r19, Y+18	; 0x12
     a6c:	4b 89       	ldd	r20, Y+19	; 0x13
     a6e:	5c 89       	ldd	r21, Y+20	; 0x14
     a70:	c7 01       	movw	r24, r14
     a72:	b6 01       	movw	r22, r12
     a74:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     a78:	18 16       	cp	r1, r24
     a7a:	cc f0       	brlt	.+50     	; 0xaae <__stack+0x1af>
     a7c:	a7 01       	movw	r20, r14
     a7e:	96 01       	movw	r18, r12
     a80:	c7 01       	movw	r24, r14
     a82:	b6 01       	movw	r22, r12
     a84:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     a88:	9b 01       	movw	r18, r22
     a8a:	ac 01       	movw	r20, r24
     a8c:	69 81       	ldd	r22, Y+1	; 0x01
     a8e:	7a 81       	ldd	r23, Y+2	; 0x02
     a90:	8b 81       	ldd	r24, Y+3	; 0x03
     a92:	9c 81       	ldd	r25, Y+4	; 0x04
     a94:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     a98:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <Output_Acceleration>
     a9c:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <Output_Acceleration+0x1>
     aa0:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <Output_Acceleration+0x2>
     aa4:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <Output_Acceleration+0x3>
     aa8:	83 e0       	ldi	r24, 0x03	; 3
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	69 cf       	rjmp	.-302    	; 0x980 <__stack+0x81>
     aae:	20 e0       	ldi	r18, 0x00	; 0
     ab0:	30 e0       	ldi	r19, 0x00	; 0
     ab2:	a9 01       	movw	r20, r18
     ab4:	c5 01       	movw	r24, r10
     ab6:	b4 01       	movw	r22, r8
     ab8:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     abc:	18 16       	cp	r1, r24
     abe:	0c f4       	brge	.+2      	; 0xac2 <__stack+0x1c3>
     ac0:	88 ce       	rjmp	.-752    	; 0x7d2 <__LOCK_REGION_LENGTH__+0x3d2>
     ac2:	2d a1       	ldd	r18, Y+37	; 0x25
     ac4:	3e a1       	ldd	r19, Y+38	; 0x26
     ac6:	4f a1       	ldd	r20, Y+39	; 0x27
     ac8:	58 a5       	ldd	r21, Y+40	; 0x28
     aca:	c7 01       	movw	r24, r14
     acc:	b6 01       	movw	r22, r12
     ace:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     ad2:	18 16       	cp	r1, r24
     ad4:	3c f0       	brlt	.+14     	; 0xae4 <__stack+0x1e5>
     ad6:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <Status_Accel_Decel+0x1>
     ada:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <Status_Accel_Decel>
     ade:	82 e0       	ldi	r24, 0x02	; 2
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	1a cf       	rjmp	.-460    	; 0x918 <__stack+0x19>
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	a9 01       	movw	r20, r18
     aea:	c5 01       	movw	r24, r10
     aec:	b4 01       	movw	r22, r8
     aee:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     af2:	18 16       	cp	r1, r24
     af4:	0c f4       	brge	.+2      	; 0xaf8 <__stack+0x1f9>
     af6:	83 ce       	rjmp	.-762    	; 0x7fe <__LOCK_REGION_LENGTH__+0x3fe>
     af8:	2d 85       	ldd	r18, Y+13	; 0x0d
     afa:	3e 85       	ldd	r19, Y+14	; 0x0e
     afc:	4f 85       	ldd	r20, Y+15	; 0x0f
     afe:	58 89       	ldd	r21, Y+16	; 0x10
     b00:	c7 01       	movw	r24, r14
     b02:	b6 01       	movw	r22, r12
     b04:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     b08:	18 16       	cp	r1, r24
     b0a:	6c f1       	brlt	.+90     	; 0xb66 <__stack+0x267>
     b0c:	a7 01       	movw	r20, r14
     b0e:	96 01       	movw	r18, r12
     b10:	c7 01       	movw	r24, r14
     b12:	b6 01       	movw	r22, r12
     b14:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     b18:	9b 01       	movw	r18, r22
     b1a:	ac 01       	movw	r20, r24
     b1c:	69 81       	ldd	r22, Y+1	; 0x01
     b1e:	7a 81       	ldd	r23, Y+2	; 0x02
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     b28:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <Output_Acceleration>
     b2c:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <Output_Acceleration+0x1>
     b30:	80 93 c9 02 	sts	0x02C9, r24	; 0x8002c9 <Output_Acceleration+0x2>
     b34:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <Output_Acceleration+0x3>
     b38:	20 e0       	ldi	r18, 0x00	; 0
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	40 e4       	ldi	r20, 0x40	; 64
     b3e:	50 e4       	ldi	r21, 0x40	; 64
     b40:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     b44:	18 16       	cp	r1, r24
     b46:	64 f4       	brge	.+24     	; 0xb60 <__stack+0x261>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	a0 e4       	ldi	r26, 0x40	; 64
     b4e:	b0 e4       	ldi	r27, 0x40	; 64
     b50:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Output_Acceleration>
     b54:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Output_Acceleration+0x1>
     b58:	a0 93 c9 02 	sts	0x02C9, r26	; 0x8002c9 <Output_Acceleration+0x2>
     b5c:	b0 93 ca 02 	sts	0x02CA, r27	; 0x8002ca <Output_Acceleration+0x3>
     b60:	84 e0       	ldi	r24, 0x04	; 4
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0d cf       	rjmp	.-486    	; 0x980 <__stack+0x81>
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	a9 01       	movw	r20, r18
     b6c:	c5 01       	movw	r24, r10
     b6e:	b4 01       	movw	r22, r8
     b70:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     b74:	18 16       	cp	r1, r24
     b76:	0c f4       	brge	.+2      	; 0xb7a <__stack+0x27b>
     b78:	58 ce       	rjmp	.-848    	; 0x82a <__LOCK_REGION_LENGTH__+0x42a>
     b7a:	2d 89       	ldd	r18, Y+21	; 0x15
     b7c:	3e 89       	ldd	r19, Y+22	; 0x16
     b7e:	4f 89       	ldd	r20, Y+23	; 0x17
     b80:	58 8d       	ldd	r21, Y+24	; 0x18
     b82:	c7 01       	movw	r24, r14
     b84:	b6 01       	movw	r22, r12
     b86:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     b8a:	18 16       	cp	r1, r24
     b8c:	0c f4       	brge	.+2      	; 0xb90 <__stack+0x291>
     b8e:	5e c0       	rjmp	.+188    	; 0xc4c <__stack+0x34d>
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	a9 01       	movw	r20, r18
     b96:	c5 01       	movw	r24, r10
     b98:	b4 01       	movw	r22, r8
     b9a:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     b9e:	18 16       	cp	r1, r24
     ba0:	cc f4       	brge	.+50     	; 0xbd4 <__stack+0x2d5>
     ba2:	a3 01       	movw	r20, r6
     ba4:	92 01       	movw	r18, r4
     ba6:	c3 01       	movw	r24, r6
     ba8:	b2 01       	movw	r22, r4
     baa:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     bae:	4b 01       	movw	r8, r22
     bb0:	5c 01       	movw	r10, r24
     bb2:	2d 85       	ldd	r18, Y+13	; 0x0d
     bb4:	3e 85       	ldd	r19, Y+14	; 0x0e
     bb6:	4f 85       	ldd	r20, Y+15	; 0x0f
     bb8:	58 89       	ldd	r21, Y+16	; 0x10
     bba:	c7 01       	movw	r24, r14
     bbc:	b6 01       	movw	r22, r12
     bbe:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     bc2:	9b 01       	movw	r18, r22
     bc4:	ac 01       	movw	r20, r24
     bc6:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     bca:	9b 01       	movw	r18, r22
     bcc:	ac 01       	movw	r20, r24
     bce:	c5 01       	movw	r24, r10
     bd0:	b4 01       	movw	r22, r8
     bd2:	a8 cf       	rjmp	.-176    	; 0xb24 <__stack+0x225>
     bd4:	a3 01       	movw	r20, r6
     bd6:	92 01       	movw	r18, r4
     bd8:	c3 01       	movw	r24, r6
     bda:	b2 01       	movw	r22, r4
     bdc:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     be0:	4b 01       	movw	r8, r22
     be2:	5c 01       	movw	r10, r24
     be4:	2d 85       	ldd	r18, Y+13	; 0x0d
     be6:	3e 85       	ldd	r19, Y+14	; 0x0e
     be8:	4f 85       	ldd	r20, Y+15	; 0x0f
     bea:	58 89       	ldd	r21, Y+16	; 0x10
     bec:	c7 01       	movw	r24, r14
     bee:	b6 01       	movw	r22, r12
     bf0:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     bf4:	9b 01       	movw	r18, r22
     bf6:	ac 01       	movw	r20, r24
     bf8:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <__addsf3>
     bfc:	9b 01       	movw	r18, r22
     bfe:	ac 01       	movw	r20, r24
     c00:	c5 01       	movw	r24, r10
     c02:	b4 01       	movw	r22, r8
     c04:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     c08:	6b 01       	movw	r12, r22
     c0a:	7c 01       	movw	r14, r24
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	40 e4       	ldi	r20, 0x40	; 64
     c12:	50 e4       	ldi	r21, 0x40	; 64
     c14:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     c18:	18 16       	cp	r1, r24
     c1a:	4c f0       	brlt	.+18     	; 0xc2e <__stack+0x32f>
     c1c:	c0 92 c7 02 	sts	0x02C7, r12	; 0x8002c7 <Output_Acceleration>
     c20:	d0 92 c8 02 	sts	0x02C8, r13	; 0x8002c8 <Output_Acceleration+0x1>
     c24:	e0 92 c9 02 	sts	0x02C9, r14	; 0x8002c9 <Output_Acceleration+0x2>
     c28:	f0 92 ca 02 	sts	0x02CA, r15	; 0x8002ca <Output_Acceleration+0x3>
     c2c:	0c c0       	rjmp	.+24     	; 0xc46 <__stack+0x347>
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	a0 e4       	ldi	r26, 0x40	; 64
     c34:	b0 e4       	ldi	r27, 0x40	; 64
     c36:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <Output_Acceleration>
     c3a:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <Output_Acceleration+0x1>
     c3e:	a0 93 c9 02 	sts	0x02C9, r26	; 0x8002c9 <Output_Acceleration+0x2>
     c42:	b0 93 ca 02 	sts	0x02CA, r27	; 0x8002ca <Output_Acceleration+0x3>
     c46:	84 e0       	ldi	r24, 0x04	; 4
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	60 ce       	rjmp	.-832    	; 0x90c <__stack+0xd>
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	a9 01       	movw	r20, r18
     c52:	c5 01       	movw	r24, r10
     c54:	b4 01       	movw	r22, r8
     c56:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__gesf2>
     c5a:	18 16       	cp	r1, r24
     c5c:	0c f4       	brge	.+2      	; 0xc60 <__stack+0x361>
     c5e:	fb cd       	rjmp	.-1034   	; 0x856 <__LOCK_REGION_LENGTH__+0x456>
     c60:	0f ce       	rjmp	.-994    	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
     c62:	29 8d       	ldd	r18, Y+25	; 0x19
     c64:	3a 8d       	ldd	r19, Y+26	; 0x1a
     c66:	4b 8d       	ldd	r20, Y+27	; 0x1b
     c68:	5c 8d       	ldd	r21, Y+28	; 0x1c
     c6a:	c7 01       	movw	r24, r14
     c6c:	b6 01       	movw	r22, r12
     c6e:	0e 94 13 10 	call	0x2026	; 0x2026 <__cmpsf2>
     c72:	18 16       	cp	r1, r24
     c74:	0c f4       	brge	.+2      	; 0xc78 <__stack+0x379>
     c76:	3d cd       	rjmp	.-1414   	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
     c78:	26 cd       	rjmp	.-1460   	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>

00000c7a <Calc_Relative_Speed>:
     c7a:	cf 92       	push	r12
     c7c:	df 92       	push	r13
     c7e:	ef 92       	push	r14
     c80:	ff 92       	push	r15
     c82:	6b 01       	movw	r12, r22
     c84:	7c 01       	movw	r14, r24
     c86:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <skip_first_crs>
     c8a:	81 11       	cpse	r24, r1
     c8c:	04 c0       	rjmp	.+8      	; 0xc96 <Calc_Relative_Speed+0x1c>
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	80 93 cb 02 	sts	0x02CB, r24	; 0x8002cb <skip_first_crs>
     c94:	20 c0       	rjmp	.+64     	; 0xcd6 <Calc_Relative_Speed+0x5c>
     c96:	a7 01       	movw	r20, r14
     c98:	96 01       	movw	r18, r12
     c9a:	60 91 d0 02 	lds	r22, 0x02D0	; 0x8002d0 <Relative_Distance_Prev>
     c9e:	70 91 d1 02 	lds	r23, 0x02D1	; 0x8002d1 <Relative_Distance_Prev+0x1>
     ca2:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <Relative_Distance_Prev+0x2>
     ca6:	90 91 d3 02 	lds	r25, 0x02D3	; 0x8002d3 <Relative_Distance_Prev+0x3>
     caa:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     cae:	2d ec       	ldi	r18, 0xCD	; 205
     cb0:	3c ec       	ldi	r19, 0xCC	; 204
     cb2:	4c ec       	ldi	r20, 0xCC	; 204
     cb4:	5d e3       	ldi	r21, 0x3D	; 61
     cb6:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     cba:	26 e6       	ldi	r18, 0x66	; 102
     cbc:	36 e6       	ldi	r19, 0x66	; 102
     cbe:	46 e6       	ldi	r20, 0x66	; 102
     cc0:	50 e4       	ldi	r21, 0x40	; 64
     cc2:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     cc6:	60 93 cc 02 	sts	0x02CC, r22	; 0x8002cc <Relative_Speed>
     cca:	70 93 cd 02 	sts	0x02CD, r23	; 0x8002cd <Relative_Speed+0x1>
     cce:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <Relative_Speed+0x2>
     cd2:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <Relative_Speed+0x3>
     cd6:	c0 92 d0 02 	sts	0x02D0, r12	; 0x8002d0 <Relative_Distance_Prev>
     cda:	d0 92 d1 02 	sts	0x02D1, r13	; 0x8002d1 <Relative_Distance_Prev+0x1>
     cde:	e0 92 d2 02 	sts	0x02D2, r14	; 0x8002d2 <Relative_Distance_Prev+0x2>
     ce2:	f0 92 d3 02 	sts	0x02D3, r15	; 0x8002d3 <Relative_Distance_Prev+0x3>
     ce6:	ff 90       	pop	r15
     ce8:	ef 90       	pop	r14
     cea:	df 90       	pop	r13
     cec:	cf 90       	pop	r12
     cee:	08 95       	ret

00000cf0 <StartupHook>:
     cf0:	60 e4       	ldi	r22, 0x40	; 64
     cf2:	72 e4       	ldi	r23, 0x42	; 66
     cf4:	8f e0       	ldi	r24, 0x0F	; 15
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0c 94 66 0b 	jmp	0x16cc	; 0x16cc <OsEE_atmega_startTimer1>

00000cfc <clock_handler>:
     cfc:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <isr2_armed>
     d00:	81 11       	cpse	r24, r1
     d02:	15 c0       	rjmp	.+42     	; 0xd2e <clock_handler+0x32>
     d04:	61 e0       	ldi	r22, 0x01	; 1
     d06:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <led_val>
     d0a:	90 91 ea 02 	lds	r25, 0x02EA	; 0x8002ea <led_val+0x1>
     d0e:	89 2b       	or	r24, r25
     d10:	09 f0       	breq	.+2      	; 0xd14 <clock_handler+0x18>
     d12:	60 e0       	ldi	r22, 0x00	; 0
     d14:	86 2f       	mov	r24, r22
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	90 93 ea 02 	sts	0x02EA, r25	; 0x8002ea <led_val+0x1>
     d1c:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <led_val>
     d20:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <led>
     d24:	0e 94 2b 09 	call	0x1256	; 0x1256 <digitalWrite>
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	0c 94 74 0c 	jmp	0x18e8	; 0x18e8 <ActivateTask>
     d2e:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <isr2_armed>
     d32:	08 95       	ret

00000d34 <setup>:
     d34:	61 e0       	ldi	r22, 0x01	; 1
     d36:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <led>
     d3a:	0e 94 ef 08 	call	0x11de	; 0x11de <pinMode>
     d3e:	26 e0       	ldi	r18, 0x06	; 6
     d40:	40 e0       	ldi	r20, 0x00	; 0
     d42:	52 ec       	ldi	r21, 0xC2	; 194
     d44:	61 e0       	ldi	r22, 0x01	; 1
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	84 ef       	ldi	r24, 0xF4	; 244
     d4a:	93 e0       	ldi	r25, 0x03	; 3
     d4c:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <_ZN14HardwareSerial5beginEmh>

00000d50 <main>:
     d50:	0e 94 8b 08 	call	0x1116	; 0x1116 <init>
     d54:	0e 94 9a 06 	call	0xd34	; 0xd34 <setup>
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	0e 94 cd 0b 	call	0x179a	; 0x179a <StartOS>
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	08 95       	ret

00000d64 <FuncTask1>:
     d64:	cf 93       	push	r28
     d66:	df 93       	push	r29
     d68:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <task1_fired>
     d6c:	8f 5f       	subi	r24, 0xFF	; 255
     d6e:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <task1_fired>
     d72:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <Relative_Distance>
     d76:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <Relative_Distance+0x1>
     d7a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Relative_Distance+0x2>
     d7e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Relative_Distance+0x3>
     d82:	0e 94 3d 06 	call	0xc7a	; 0xc7a <Calc_Relative_Speed>
     d86:	0e 94 36 01 	call	0x26c	; 0x26c <Acc_Dec_Dtrmn_Sys>
     d8a:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <_ZZ9FuncTask1E7counter>
     d8e:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <_ZZ9FuncTask1E7counter+0x1>
     d92:	be 01       	movw	r22, r28
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0e 94 c0 10 	call	0x2180	; 0x2180 <__floatunsisf>
     d9c:	2d ec       	ldi	r18, 0xCD	; 205
     d9e:	3c ec       	ldi	r19, 0xCC	; 204
     da0:	4c ec       	ldi	r20, 0xCC	; 204
     da2:	5d e3       	ldi	r21, 0x3D	; 61
     da4:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     da8:	26 e6       	ldi	r18, 0x66	; 102
     daa:	36 e6       	ldi	r19, 0x66	; 102
     dac:	46 e6       	ldi	r20, 0x66	; 102
     dae:	50 e4       	ldi	r21, 0x40	; 64
     db0:	0e 94 18 10 	call	0x2030	; 0x2030 <__divsf3>
     db4:	9b 01       	movw	r18, r22
     db6:	ac 01       	movw	r20, r24
     db8:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <Relative_Distance>
     dbc:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <Relative_Distance+0x1>
     dc0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Relative_Distance+0x2>
     dc4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Relative_Distance+0x3>
     dc8:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <__subsf3>
     dcc:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <Relative_Distance>
     dd0:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <Relative_Distance+0x1>
     dd4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <Relative_Distance+0x2>
     dd8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <Relative_Distance+0x3>
     ddc:	21 96       	adiw	r28, 0x01	; 1
     dde:	d0 93 11 01 	sts	0x0111, r29	; 0x800111 <_ZZ9FuncTask1E7counter+0x1>
     de2:	c0 93 10 01 	sts	0x0110, r28	; 0x800110 <_ZZ9FuncTask1E7counter>
     de6:	82 e0       	ldi	r24, 0x02	; 2
     de8:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <ActivateTask>
     dec:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <task1_ended>
     df0:	8f 5f       	subi	r24, 0xFF	; 255
     df2:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <task1_ended>
     df6:	df 91       	pop	r29
     df8:	cf 91       	pop	r28
     dfa:	08 95       	ret

00000dfc <FuncTask2>:
     dfc:	cf 92       	push	r12
     dfe:	df 92       	push	r13
     e00:	ff 92       	push	r15
     e02:	0f 93       	push	r16
     e04:	1f 93       	push	r17
     e06:	cf 93       	push	r28
     e08:	df 93       	push	r29
     e0a:	cd b7       	in	r28, 0x3d	; 61
     e0c:	de b7       	in	r29, 0x3e	; 62
     e0e:	a8 97       	sbiw	r28, 0x28	; 40
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	f8 94       	cli
     e14:	de bf       	out	0x3e, r29	; 62
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	cd bf       	out	0x3d, r28	; 61
     e1a:	80 91 e7 02 	lds	r24, 0x02E7	; 0x8002e7 <task2_fired>
     e1e:	8f 5f       	subi	r24, 0xFF	; 255
     e20:	80 93 e7 02 	sts	0x02E7, r24	; 0x8002e7 <task2_fired>
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	48 ec       	ldi	r20, 0xC8	; 200
     e2a:	52 e4       	ldi	r21, 0x42	; 66
     e2c:	60 91 c7 02 	lds	r22, 0x02C7	; 0x8002c7 <Output_Acceleration>
     e30:	70 91 c8 02 	lds	r23, 0x02C8	; 0x8002c8 <Output_Acceleration+0x1>
     e34:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <Output_Acceleration+0x2>
     e38:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <Output_Acceleration+0x3>
     e3c:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     e40:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixsfsi>
     e44:	60 93 dc 02 	sts	0x02DC, r22	; 0x8002dc <_ZZ9FuncTask2E6result>
     e48:	70 93 dd 02 	sts	0x02DD, r23	; 0x8002dd <_ZZ9FuncTask2E6result+0x1>
     e4c:	7f 93       	push	r23
     e4e:	6f 93       	push	r22
     e50:	0a e8       	ldi	r16, 0x8A	; 138
     e52:	11 e0       	ldi	r17, 0x01	; 1
     e54:	1f 93       	push	r17
     e56:	0f 93       	push	r16
     e58:	1f 92       	push	r1
     e5a:	8a e0       	ldi	r24, 0x0A	; 10
     e5c:	f8 2e       	mov	r15, r24
     e5e:	ff 92       	push	r15
     e60:	6e 01       	movw	r12, r28
     e62:	8f e1       	ldi	r24, 0x1F	; 31
     e64:	c8 0e       	add	r12, r24
     e66:	d1 1c       	adc	r13, r1
     e68:	df 92       	push	r13
     e6a:	cf 92       	push	r12
     e6c:	0e 94 0c 12 	call	0x2418	; 0x2418 <snprintf>
     e70:	b6 01       	movw	r22, r12
     e72:	84 ef       	ldi	r24, 0xF4	; 244
     e74:	93 e0       	ldi	r25, 0x03	; 3
     e76:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     e7a:	6f e8       	ldi	r22, 0x8F	; 143
     e7c:	71 e0       	ldi	r23, 0x01	; 1
     e7e:	84 ef       	ldi	r24, 0xF4	; 244
     e80:	93 e0       	ldi	r25, 0x03	; 3
     e82:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     e86:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <Status_Accel_Decel>
     e8a:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <Status_Accel_Decel+0x1>
     e8e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <_ZZ9FuncTask2E7result2>
     e92:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <_ZZ9FuncTask2E7result2+0x1>
     e96:	9f 93       	push	r25
     e98:	8f 93       	push	r24
     e9a:	1f 93       	push	r17
     e9c:	0f 93       	push	r16
     e9e:	1f 92       	push	r1
     ea0:	ff 92       	push	r15
     ea2:	6e 01       	movw	r12, r28
     ea4:	95 e1       	ldi	r25, 0x15	; 21
     ea6:	c9 0e       	add	r12, r25
     ea8:	d1 1c       	adc	r13, r1
     eaa:	df 92       	push	r13
     eac:	cf 92       	push	r12
     eae:	0e 94 0c 12 	call	0x2418	; 0x2418 <snprintf>
     eb2:	b6 01       	movw	r22, r12
     eb4:	84 ef       	ldi	r24, 0xF4	; 244
     eb6:	93 e0       	ldi	r25, 0x03	; 3
     eb8:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     ebc:	6f e8       	ldi	r22, 0x8F	; 143
     ebe:	71 e0       	ldi	r23, 0x01	; 1
     ec0:	84 ef       	ldi	r24, 0xF4	; 244
     ec2:	93 e0       	ldi	r25, 0x03	; 3
     ec4:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     ec8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <Status_Dec_Inc+0x1>
     ecc:	8f 93       	push	r24
     ece:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Status_Dec_Inc>
     ed2:	8f 93       	push	r24
     ed4:	1f 93       	push	r17
     ed6:	0f 93       	push	r16
     ed8:	1f 92       	push	r1
     eda:	ff 92       	push	r15
     edc:	6e 01       	movw	r12, r28
     ede:	8b e0       	ldi	r24, 0x0B	; 11
     ee0:	c8 0e       	add	r12, r24
     ee2:	d1 1c       	adc	r13, r1
     ee4:	df 92       	push	r13
     ee6:	cf 92       	push	r12
     ee8:	0e 94 0c 12 	call	0x2418	; 0x2418 <snprintf>
     eec:	b6 01       	movw	r22, r12
     eee:	84 ef       	ldi	r24, 0xF4	; 244
     ef0:	93 e0       	ldi	r25, 0x03	; 3
     ef2:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     ef6:	6f e8       	ldi	r22, 0x8F	; 143
     ef8:	71 e0       	ldi	r23, 0x01	; 1
     efa:	84 ef       	ldi	r24, 0xF4	; 244
     efc:	93 e0       	ldi	r25, 0x03	; 3
     efe:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	48 ec       	ldi	r20, 0xC8	; 200
     f08:	52 e4       	ldi	r21, 0x42	; 66
     f0a:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <Relative_Distance>
     f0e:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <Relative_Distance+0x1>
     f12:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <Relative_Distance+0x2>
     f16:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <Relative_Distance+0x3>
     f1a:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsf3>
     f1e:	0e 94 8a 10 	call	0x2114	; 0x2114 <__fixsfsi>
     f22:	7f 93       	push	r23
     f24:	6f 93       	push	r22
     f26:	1f 93       	push	r17
     f28:	0f 93       	push	r16
     f2a:	1f 92       	push	r1
     f2c:	ff 92       	push	r15
     f2e:	8e 01       	movw	r16, r28
     f30:	0f 5f       	subi	r16, 0xFF	; 255
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	1f 93       	push	r17
     f36:	0f 93       	push	r16
     f38:	0e 94 0c 12 	call	0x2418	; 0x2418 <snprintf>
     f3c:	0f b6       	in	r0, 0x3f	; 63
     f3e:	f8 94       	cli
     f40:	de bf       	out	0x3e, r29	; 62
     f42:	0f be       	out	0x3f, r0	; 63
     f44:	cd bf       	out	0x3d, r28	; 61
     f46:	b8 01       	movw	r22, r16
     f48:	84 ef       	ldi	r24, 0xF4	; 244
     f4a:	93 e0       	ldi	r25, 0x03	; 3
     f4c:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     f50:	6d e8       	ldi	r22, 0x8D	; 141
     f52:	71 e0       	ldi	r23, 0x01	; 1
     f54:	84 ef       	ldi	r24, 0xF4	; 244
     f56:	93 e0       	ldi	r25, 0x03	; 3
     f58:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN5Print5printEPKc>
     f5c:	80 91 e5 02 	lds	r24, 0x02E5	; 0x8002e5 <task2_ended>
     f60:	8f 5f       	subi	r24, 0xFF	; 255
     f62:	80 93 e5 02 	sts	0x02E5, r24	; 0x8002e5 <task2_ended>
     f66:	a8 96       	adiw	r28, 0x28	; 40
     f68:	0f b6       	in	r0, 0x3f	; 63
     f6a:	f8 94       	cli
     f6c:	de bf       	out	0x3e, r29	; 62
     f6e:	0f be       	out	0x3f, r0	; 63
     f70:	cd bf       	out	0x3d, r28	; 61
     f72:	df 91       	pop	r29
     f74:	cf 91       	pop	r28
     f76:	1f 91       	pop	r17
     f78:	0f 91       	pop	r16
     f7a:	ff 90       	pop	r15
     f7c:	df 90       	pop	r13
     f7e:	cf 90       	pop	r12
     f80:	08 95       	ret

00000f82 <_Z12serial_printPKc>:
     f82:	f8 94       	cli
     f84:	fc 01       	movw	r30, r24
     f86:	01 90       	ld	r0, Z+
     f88:	00 20       	and	r0, r0
     f8a:	e9 f7       	brne	.-6      	; 0xf86 <_Z12serial_printPKc+0x4>
     f8c:	31 97       	sbiw	r30, 0x01	; 1
     f8e:	af 01       	movw	r20, r30
     f90:	48 1b       	sub	r20, r24
     f92:	59 0b       	sbc	r21, r25
     f94:	bc 01       	movw	r22, r24
     f96:	84 ef       	ldi	r24, 0xF4	; 244
     f98:	93 e0       	ldi	r25, 0x03	; 3
     f9a:	0e 94 24 0b 	call	0x1648	; 0x1648 <_ZN5Print5writeEPKhj>
     f9e:	88 e9       	ldi	r24, 0x98	; 152
     fa0:	99 e0       	ldi	r25, 0x09	; 9
     fa2:	89 2b       	or	r24, r25
     fa4:	11 f0       	breq	.+4      	; 0xfaa <_Z12serial_printPKc+0x28>
     fa6:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z14serialEventRunv>
     faa:	78 94       	sei
     fac:	08 95       	ret

00000fae <idle_hook>:
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
     fb2:	cf 93       	push	r28
     fb4:	df 93       	push	r29
     fb6:	00 d0       	rcall	.+0      	; 0xfb8 <idle_hook+0xa>
     fb8:	cd b7       	in	r28, 0x3d	; 61
     fba:	de b7       	in	r29, 0x3e	; 62
     fbc:	8d b7       	in	r24, 0x3d	; 61
     fbe:	9e b7       	in	r25, 0x3e	; 62
     fc0:	9a 83       	std	Y+2, r25	; 0x02
     fc2:	89 83       	std	Y+1, r24	; 0x01
     fc4:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <main_sp>
     fc8:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <main_sp+0x1>
     fcc:	89 2b       	or	r24, r25
     fce:	39 f4       	brne	.+14     	; 0xfde <idle_hook+0x30>
     fd0:	89 81       	ldd	r24, Y+1	; 0x01
     fd2:	9a 81       	ldd	r25, Y+2	; 0x02
     fd4:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <main_sp+0x1>
     fd8:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <main_sp>
     fdc:	1b c0       	rjmp	.+54     	; 0x1014 <idle_hook+0x66>
     fde:	20 91 de 02 	lds	r18, 0x02DE	; 0x8002de <main_sp>
     fe2:	30 91 df 02 	lds	r19, 0x02DF	; 0x8002df <main_sp+0x1>
     fe6:	89 81       	ldd	r24, Y+1	; 0x01
     fe8:	9a 81       	ldd	r25, Y+2	; 0x02
     fea:	28 17       	cp	r18, r24
     fec:	39 07       	cpc	r19, r25
     fee:	91 f0       	breq	.+36     	; 0x1014 <idle_hook+0x66>
     ff0:	61 e0       	ldi	r22, 0x01	; 1
     ff2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <led>
     ff6:	0e 94 2b 09 	call	0x1256	; 0x1256 <digitalWrite>
     ffa:	f8 94       	cli
     ffc:	83 ea       	ldi	r24, 0xA3	; 163
     ffe:	91 e0       	ldi	r25, 0x01	; 1
    1000:	0e 94 c1 07 	call	0xf82	; 0xf82 <_Z12serial_printPKc>
    1004:	08 e9       	ldi	r16, 0x98	; 152
    1006:	19 e0       	ldi	r17, 0x09	; 9
    1008:	01 15       	cp	r16, r1
    100a:	11 05       	cpc	r17, r1
    100c:	e9 f3       	breq	.-6      	; 0x1008 <idle_hook+0x5a>
    100e:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z14serialEventRunv>
    1012:	fa cf       	rjmp	.-12     	; 0x1008 <idle_hook+0x5a>
    1014:	f8 94       	cli
    1016:	88 e9       	ldi	r24, 0x98	; 152
    1018:	99 e0       	ldi	r25, 0x09	; 9
    101a:	89 2b       	or	r24, r25
    101c:	11 f0       	breq	.+4      	; 0x1022 <idle_hook+0x74>
    101e:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z14serialEventRunv>
    1022:	78 94       	sei
    1024:	0f 90       	pop	r0
    1026:	0f 90       	pop	r0
    1028:	df 91       	pop	r29
    102a:	cf 91       	pop	r28
    102c:	1f 91       	pop	r17
    102e:	0f 91       	pop	r16
    1030:	08 95       	ret

00001032 <FuncTask3>:
    1032:	8f eb       	ldi	r24, 0xBF	; 191
    1034:	91 e0       	ldi	r25, 0x01	; 1
    1036:	0e 94 c1 07 	call	0xf82	; 0xf82 <_Z12serial_printPKc>
    103a:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <task3_fired>
    103e:	8f 5f       	subi	r24, 0xFF	; 255
    1040:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <task3_fired>
    1044:	84 e0       	ldi	r24, 0x04	; 4
    1046:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <ActivateTask>
    104a:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <task3_ended>
    104e:	8f 5f       	subi	r24, 0xFF	; 255
    1050:	80 93 e3 02 	sts	0x02E3, r24	; 0x8002e3 <task3_ended>
    1054:	08 95       	ret

00001056 <FuncTask4>:
    1056:	87 ec       	ldi	r24, 0xC7	; 199
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	0e 94 c1 07 	call	0xf82	; 0xf82 <_Z12serial_printPKc>
    105e:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <task4_fired>
    1062:	8f 5f       	subi	r24, 0xFF	; 255
    1064:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <task4_fired>
    1068:	85 e0       	ldi	r24, 0x05	; 5
    106a:	0c 94 74 0c 	jmp	0x18e8	; 0x18e8 <ActivateTask>

0000106e <FuncTask5>:
    106e:	8f ec       	ldi	r24, 0xCF	; 207
    1070:	91 e0       	ldi	r25, 0x01	; 1
    1072:	0e 94 c1 07 	call	0xf82	; 0xf82 <_Z12serial_printPKc>
    1076:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <task5_fired>
    107a:	8f 5f       	subi	r24, 0xFF	; 255
    107c:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <task5_fired>
    1080:	08 95       	ret

00001082 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    1082:	1f 92       	push	r1
    1084:	0f 92       	push	r0
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	0f 92       	push	r0
    108a:	11 24       	eor	r1, r1
    108c:	2f 93       	push	r18
    108e:	3f 93       	push	r19
    1090:	8f 93       	push	r24
    1092:	9f 93       	push	r25
    1094:	af 93       	push	r26
    1096:	bf 93       	push	r27
    1098:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <timer0_millis>
    109c:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <timer0_millis+0x1>
    10a0:	a0 91 ee 03 	lds	r26, 0x03EE	; 0x8003ee <timer0_millis+0x2>
    10a4:	b0 91 ef 03 	lds	r27, 0x03EF	; 0x8003ef <timer0_millis+0x3>
    10a8:	30 91 eb 03 	lds	r19, 0x03EB	; 0x8003eb <timer0_fract>
    10ac:	23 e0       	ldi	r18, 0x03	; 3
    10ae:	23 0f       	add	r18, r19
    10b0:	2d 37       	cpi	r18, 0x7D	; 125
    10b2:	20 f4       	brcc	.+8      	; 0x10bc <__vector_16+0x3a>
    10b4:	01 96       	adiw	r24, 0x01	; 1
    10b6:	a1 1d       	adc	r26, r1
    10b8:	b1 1d       	adc	r27, r1
    10ba:	05 c0       	rjmp	.+10     	; 0x10c6 <__vector_16+0x44>
    10bc:	26 e8       	ldi	r18, 0x86	; 134
    10be:	23 0f       	add	r18, r19
    10c0:	02 96       	adiw	r24, 0x02	; 2
    10c2:	a1 1d       	adc	r26, r1
    10c4:	b1 1d       	adc	r27, r1
    10c6:	20 93 eb 03 	sts	0x03EB, r18	; 0x8003eb <timer0_fract>
    10ca:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <timer0_millis>
    10ce:	90 93 ed 03 	sts	0x03ED, r25	; 0x8003ed <timer0_millis+0x1>
    10d2:	a0 93 ee 03 	sts	0x03EE, r26	; 0x8003ee <timer0_millis+0x2>
    10d6:	b0 93 ef 03 	sts	0x03EF, r27	; 0x8003ef <timer0_millis+0x3>
    10da:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <timer0_overflow_count>
    10de:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <timer0_overflow_count+0x1>
    10e2:	a0 91 f2 03 	lds	r26, 0x03F2	; 0x8003f2 <timer0_overflow_count+0x2>
    10e6:	b0 91 f3 03 	lds	r27, 0x03F3	; 0x8003f3 <timer0_overflow_count+0x3>
    10ea:	01 96       	adiw	r24, 0x01	; 1
    10ec:	a1 1d       	adc	r26, r1
    10ee:	b1 1d       	adc	r27, r1
    10f0:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <timer0_overflow_count>
    10f4:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <timer0_overflow_count+0x1>
    10f8:	a0 93 f2 03 	sts	0x03F2, r26	; 0x8003f2 <timer0_overflow_count+0x2>
    10fc:	b0 93 f3 03 	sts	0x03F3, r27	; 0x8003f3 <timer0_overflow_count+0x3>
    1100:	bf 91       	pop	r27
    1102:	af 91       	pop	r26
    1104:	9f 91       	pop	r25
    1106:	8f 91       	pop	r24
    1108:	3f 91       	pop	r19
    110a:	2f 91       	pop	r18
    110c:	0f 90       	pop	r0
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	0f 90       	pop	r0
    1112:	1f 90       	pop	r1
    1114:	18 95       	reti

00001116 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    1116:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    1118:	84 b5       	in	r24, 0x24	; 36
    111a:	82 60       	ori	r24, 0x02	; 2
    111c:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    111e:	84 b5       	in	r24, 0x24	; 36
    1120:	81 60       	ori	r24, 0x01	; 1
    1122:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    1124:	85 b5       	in	r24, 0x25	; 37
    1126:	82 60       	ori	r24, 0x02	; 2
    1128:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    112a:	85 b5       	in	r24, 0x25	; 37
    112c:	81 60       	ori	r24, 0x01	; 1
    112e:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    1130:	ee e6       	ldi	r30, 0x6E	; 110
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	80 81       	ld	r24, Z
    1136:	81 60       	ori	r24, 0x01	; 1
    1138:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    113a:	e1 e8       	ldi	r30, 0x81	; 129
    113c:	f0 e0       	ldi	r31, 0x00	; 0
    113e:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    1140:	80 81       	ld	r24, Z
    1142:	82 60       	ori	r24, 0x02	; 2
    1144:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    1146:	80 81       	ld	r24, Z
    1148:	81 60       	ori	r24, 0x01	; 1
    114a:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    114c:	e0 e8       	ldi	r30, 0x80	; 128
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	80 81       	ld	r24, Z
    1152:	81 60       	ori	r24, 0x01	; 1
    1154:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    1156:	e1 eb       	ldi	r30, 0xB1	; 177
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	84 60       	ori	r24, 0x04	; 4
    115e:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    1160:	e0 eb       	ldi	r30, 0xB0	; 176
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	80 81       	ld	r24, Z
    1166:	81 60       	ori	r24, 0x01	; 1
    1168:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    116a:	ea e7       	ldi	r30, 0x7A	; 122
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	80 81       	ld	r24, Z
    1170:	84 60       	ori	r24, 0x04	; 4
    1172:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    1174:	80 81       	ld	r24, Z
    1176:	82 60       	ori	r24, 0x02	; 2
    1178:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    117a:	80 81       	ld	r24, Z
    117c:	81 60       	ori	r24, 0x01	; 1
    117e:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    1180:	80 81       	ld	r24, Z
    1182:	80 68       	ori	r24, 0x80	; 128
    1184:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    1186:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    118a:	08 95       	ret

0000118c <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    118c:	83 30       	cpi	r24, 0x03	; 3
    118e:	81 f0       	breq	.+32     	; 0x11b0 <turnOffPWM+0x24>
    1190:	28 f4       	brcc	.+10     	; 0x119c <turnOffPWM+0x10>
    1192:	81 30       	cpi	r24, 0x01	; 1
    1194:	99 f0       	breq	.+38     	; 0x11bc <turnOffPWM+0x30>
    1196:	82 30       	cpi	r24, 0x02	; 2
    1198:	a1 f0       	breq	.+40     	; 0x11c2 <turnOffPWM+0x36>
    119a:	08 95       	ret
    119c:	87 30       	cpi	r24, 0x07	; 7
    119e:	a9 f0       	breq	.+42     	; 0x11ca <turnOffPWM+0x3e>
    11a0:	88 30       	cpi	r24, 0x08	; 8
    11a2:	b9 f0       	breq	.+46     	; 0x11d2 <turnOffPWM+0x46>
    11a4:	84 30       	cpi	r24, 0x04	; 4
    11a6:	d1 f4       	brne	.+52     	; 0x11dc <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    11a8:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    11ac:	8f 7d       	andi	r24, 0xDF	; 223
    11ae:	03 c0       	rjmp	.+6      	; 0x11b6 <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    11b0:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    11b4:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    11b6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    11ba:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    11bc:	84 b5       	in	r24, 0x24	; 36
    11be:	8f 77       	andi	r24, 0x7F	; 127
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    11c2:	84 b5       	in	r24, 0x24	; 36
    11c4:	8f 7d       	andi	r24, 0xDF	; 223
    11c6:	84 bd       	out	0x24, r24	; 36
    11c8:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    11ca:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    11ce:	8f 77       	andi	r24, 0x7F	; 127
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    11d2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    11d6:	8f 7d       	andi	r24, 0xDF	; 223
    11d8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    11dc:	08 95       	ret

000011de <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    11de:	cf 93       	push	r28
    11e0:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	fc 01       	movw	r30, r24
    11e6:	e4 58       	subi	r30, 0x84	; 132
    11e8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ea:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    11ec:	fc 01       	movw	r30, r24
    11ee:	e0 57       	subi	r30, 0x70	; 112
    11f0:	ff 4f       	sbci	r31, 0xFF	; 255
    11f2:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    11f4:	88 23       	and	r24, r24
    11f6:	61 f1       	breq	.+88     	; 0x1250 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	88 0f       	add	r24, r24
    11fc:	99 1f       	adc	r25, r25
    11fe:	fc 01       	movw	r30, r24
    1200:	e2 55       	subi	r30, 0x52	; 82
    1202:	ff 4f       	sbci	r31, 0xFF	; 255
    1204:	c5 91       	lpm	r28, Z+
    1206:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    1208:	fc 01       	movw	r30, r24
    120a:	ec 55       	subi	r30, 0x5C	; 92
    120c:	ff 4f       	sbci	r31, 0xFF	; 255
    120e:	a5 91       	lpm	r26, Z+
    1210:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    1212:	61 11       	cpse	r22, r1
    1214:	09 c0       	rjmp	.+18     	; 0x1228 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    1216:	9f b7       	in	r25, 0x3f	; 63
                cli();
    1218:	f8 94       	cli
		*reg &= ~bit;
    121a:	88 81       	ld	r24, Y
    121c:	20 95       	com	r18
    121e:	82 23       	and	r24, r18
    1220:	88 83       	st	Y, r24
		*out &= ~bit;
    1222:	ec 91       	ld	r30, X
    1224:	2e 23       	and	r18, r30
    1226:	0b c0       	rjmp	.+22     	; 0x123e <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    1228:	62 30       	cpi	r22, 0x02	; 2
    122a:	61 f4       	brne	.+24     	; 0x1244 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    122c:	9f b7       	in	r25, 0x3f	; 63
                cli();
    122e:	f8 94       	cli
		*reg &= ~bit;
    1230:	38 81       	ld	r19, Y
    1232:	82 2f       	mov	r24, r18
    1234:	80 95       	com	r24
    1236:	83 23       	and	r24, r19
    1238:	88 83       	st	Y, r24
		*out |= bit;
    123a:	ec 91       	ld	r30, X
    123c:	2e 2b       	or	r18, r30
    123e:	2c 93       	st	X, r18
		SREG = oldSREG;
    1240:	9f bf       	out	0x3f, r25	; 63
    1242:	06 c0       	rjmp	.+12     	; 0x1250 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    1244:	8f b7       	in	r24, 0x3f	; 63
                cli();
    1246:	f8 94       	cli
		*reg |= bit;
    1248:	e8 81       	ld	r30, Y
    124a:	2e 2b       	or	r18, r30
    124c:	28 83       	st	Y, r18
		SREG = oldSREG;
    124e:	8f bf       	out	0x3f, r24	; 63
	}
}
    1250:	df 91       	pop	r29
    1252:	cf 91       	pop	r28
    1254:	08 95       	ret

00001256 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    1256:	1f 93       	push	r17
    1258:	cf 93       	push	r28
    125a:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    125c:	28 2f       	mov	r18, r24
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	f9 01       	movw	r30, r18
    1262:	e8 59       	subi	r30, 0x98	; 152
    1264:	ff 4f       	sbci	r31, 0xFF	; 255
    1266:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    1268:	f9 01       	movw	r30, r18
    126a:	e4 58       	subi	r30, 0x84	; 132
    126c:	ff 4f       	sbci	r31, 0xFF	; 255
    126e:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    1270:	f9 01       	movw	r30, r18
    1272:	e0 57       	subi	r30, 0x70	; 112
    1274:	ff 4f       	sbci	r31, 0xFF	; 255
    1276:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    1278:	cc 23       	and	r28, r28
    127a:	c9 f0       	breq	.+50     	; 0x12ae <digitalWrite+0x58>
    127c:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    127e:	81 11       	cpse	r24, r1
    1280:	0e 94 c6 08 	call	0x118c	; 0x118c <turnOffPWM>

	out = portOutputRegister(port);
    1284:	ec 2f       	mov	r30, r28
    1286:	f0 e0       	ldi	r31, 0x00	; 0
    1288:	ee 0f       	add	r30, r30
    128a:	ff 1f       	adc	r31, r31
    128c:	ec 55       	subi	r30, 0x5C	; 92
    128e:	ff 4f       	sbci	r31, 0xFF	; 255
    1290:	a5 91       	lpm	r26, Z+
    1292:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    1294:	8f b7       	in	r24, 0x3f	; 63
	cli();
    1296:	f8 94       	cli

	if (val == LOW) {
    1298:	11 11       	cpse	r17, r1
    129a:	05 c0       	rjmp	.+10     	; 0x12a6 <digitalWrite+0x50>
		*out &= ~bit;
    129c:	9c 91       	ld	r25, X
    129e:	ed 2f       	mov	r30, r29
    12a0:	e0 95       	com	r30
    12a2:	e9 23       	and	r30, r25
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <digitalWrite+0x54>
	} else {
		*out |= bit;
    12a6:	ec 91       	ld	r30, X
    12a8:	ed 2b       	or	r30, r29
    12aa:	ec 93       	st	X, r30
	}

	SREG = oldSREG;
    12ac:	8f bf       	out	0x3f, r24	; 63
}
    12ae:	df 91       	pop	r29
    12b0:	cf 91       	pop	r28
    12b2:	1f 91       	pop	r17
    12b4:	08 95       	ret

000012b6 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    12b6:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    12b8:	91 8d       	ldd	r25, Z+25	; 0x19
    12ba:	22 8d       	ldd	r18, Z+26	; 0x1a
    12bc:	89 2f       	mov	r24, r25
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	80 5c       	subi	r24, 0xC0	; 192
    12c2:	9f 4f       	sbci	r25, 0xFF	; 255
    12c4:	82 1b       	sub	r24, r18
    12c6:	91 09       	sbc	r25, r1
}
    12c8:	8f 73       	andi	r24, 0x3F	; 63
    12ca:	99 27       	eor	r25, r25
    12cc:	08 95       	ret

000012ce <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    12ce:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    12d0:	91 8d       	ldd	r25, Z+25	; 0x19
    12d2:	82 8d       	ldd	r24, Z+26	; 0x1a
    12d4:	98 17       	cp	r25, r24
    12d6:	31 f0       	breq	.+12     	; 0x12e4 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    12d8:	82 8d       	ldd	r24, Z+26	; 0x1a
    12da:	e8 0f       	add	r30, r24
    12dc:	f1 1d       	adc	r31, r1
    12de:	85 8d       	ldd	r24, Z+29	; 0x1d
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    12e4:	8f ef       	ldi	r24, 0xFF	; 255
    12e6:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    12e8:	08 95       	ret

000012ea <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    12ea:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    12ec:	91 8d       	ldd	r25, Z+25	; 0x19
    12ee:	82 8d       	ldd	r24, Z+26	; 0x1a
    12f0:	98 17       	cp	r25, r24
    12f2:	61 f0       	breq	.+24     	; 0x130c <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    12f4:	82 8d       	ldd	r24, Z+26	; 0x1a
    12f6:	df 01       	movw	r26, r30
    12f8:	a8 0f       	add	r26, r24
    12fa:	b1 1d       	adc	r27, r1
    12fc:	5d 96       	adiw	r26, 0x1d	; 29
    12fe:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1300:	92 8d       	ldd	r25, Z+26	; 0x1a
    1302:	9f 5f       	subi	r25, 0xFF	; 255
    1304:	9f 73       	andi	r25, 0x3F	; 63
    1306:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    130c:	8f ef       	ldi	r24, 0xFF	; 255
    130e:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    1310:	08 95       	ret

00001312 <_ZN14HardwareSerial17availableForWriteEv>:
{
#if (SERIAL_TX_BUFFER_SIZE>256)
  uint8_t oldSREG = SREG;
  cli();
#endif
  tx_buffer_index_t head = _tx_buffer_head;
    1312:	fc 01       	movw	r30, r24
    1314:	53 8d       	ldd	r21, Z+27	; 0x1b
  tx_buffer_index_t tail = _tx_buffer_tail;
    1316:	44 8d       	ldd	r20, Z+28	; 0x1c
    1318:	25 2f       	mov	r18, r21
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	84 2f       	mov	r24, r20
    131e:	90 e0       	ldi	r25, 0x00	; 0
#if (SERIAL_TX_BUFFER_SIZE>256)
  SREG = oldSREG;
#endif
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    1320:	82 1b       	sub	r24, r18
    1322:	93 0b       	sbc	r25, r19
    1324:	54 17       	cp	r21, r20
    1326:	10 f0       	brcs	.+4      	; 0x132c <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    1328:	cf 96       	adiw	r24, 0x3f	; 63
    132a:	08 95       	ret
  return tail - head - 1;
    132c:	01 97       	sbiw	r24, 0x01	; 1
}
    132e:	08 95       	ret

00001330 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1330:	8d ee       	ldi	r24, 0xED	; 237
    1332:	9a e0       	ldi	r25, 0x0A	; 10
    1334:	89 2b       	or	r24, r25
    1336:	49 f0       	breq	.+18     	; 0x134a <_Z14serialEventRunv+0x1a>
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	89 2b       	or	r24, r25
    133e:	29 f0       	breq	.+10     	; 0x134a <_Z14serialEventRunv+0x1a>
    1340:	0e 94 ed 0a 	call	0x15da	; 0x15da <_Z17Serial0_availablev>
    1344:	81 11       	cpse	r24, r1
    1346:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    134a:	08 95       	ret

0000134c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    134c:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    134e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1350:	df 01       	movw	r26, r30
    1352:	a8 0f       	add	r26, r24
    1354:	b1 1d       	adc	r27, r1
    1356:	a3 5a       	subi	r26, 0xA3	; 163
    1358:	bf 4f       	sbci	r27, 0xFF	; 255
    135a:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    135c:	84 8d       	ldd	r24, Z+28	; 0x1c
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	01 96       	adiw	r24, 0x01	; 1
    1362:	8f 73       	andi	r24, 0x3F	; 63
    1364:	99 27       	eor	r25, r25
    1366:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    1368:	a6 89       	ldd	r26, Z+22	; 0x16
    136a:	b7 89       	ldd	r27, Z+23	; 0x17
    136c:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    136e:	a0 89       	ldd	r26, Z+16	; 0x10
    1370:	b1 89       	ldd	r27, Z+17	; 0x11
    1372:	8c 91       	ld	r24, X
    1374:	80 64       	ori	r24, 0x40	; 64
    1376:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    1378:	93 8d       	ldd	r25, Z+27	; 0x1b
    137a:	84 8d       	ldd	r24, Z+28	; 0x1c
    137c:	98 13       	cpse	r25, r24
    137e:	06 c0       	rjmp	.+12     	; 0x138c <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    1380:	02 88       	ldd	r0, Z+18	; 0x12
    1382:	f3 89       	ldd	r31, Z+19	; 0x13
    1384:	e0 2d       	mov	r30, r0
    1386:	80 81       	ld	r24, Z
    1388:	8f 7d       	andi	r24, 0xDF	; 223
    138a:	80 83       	st	Z, r24
    138c:	08 95       	ret

0000138e <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    138e:	cf 93       	push	r28
    1390:	df 93       	push	r29
    1392:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    1394:	88 8d       	ldd	r24, Y+24	; 0x18
    1396:	88 23       	and	r24, r24
    1398:	c9 f0       	breq	.+50     	; 0x13cc <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    139a:	ea 89       	ldd	r30, Y+18	; 0x12
    139c:	fb 89       	ldd	r31, Y+19	; 0x13
    139e:	80 81       	ld	r24, Z
    13a0:	85 fd       	sbrc	r24, 5
    13a2:	05 c0       	rjmp	.+10     	; 0x13ae <_ZN14HardwareSerial5flushEv+0x20>
    13a4:	a8 89       	ldd	r26, Y+16	; 0x10
    13a6:	b9 89       	ldd	r27, Y+17	; 0x11
    13a8:	8c 91       	ld	r24, X
    13aa:	86 fd       	sbrc	r24, 6
    13ac:	0f c0       	rjmp	.+30     	; 0x13cc <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    13ae:	0f b6       	in	r0, 0x3f	; 63
    13b0:	07 fc       	sbrc	r0, 7
    13b2:	f5 cf       	rjmp	.-22     	; 0x139e <_ZN14HardwareSerial5flushEv+0x10>
    13b4:	80 81       	ld	r24, Z
    13b6:	85 ff       	sbrs	r24, 5
    13b8:	f2 cf       	rjmp	.-28     	; 0x139e <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    13ba:	a8 89       	ldd	r26, Y+16	; 0x10
    13bc:	b9 89       	ldd	r27, Y+17	; 0x11
    13be:	8c 91       	ld	r24, X
    13c0:	85 ff       	sbrs	r24, 5
    13c2:	ed cf       	rjmp	.-38     	; 0x139e <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    13c4:	ce 01       	movw	r24, r28
    13c6:	0e 94 a6 09 	call	0x134c	; 0x134c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    13ca:	e7 cf       	rjmp	.-50     	; 0x139a <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    13cc:	df 91       	pop	r29
    13ce:	cf 91       	pop	r28
    13d0:	08 95       	ret

000013d2 <_ZN14HardwareSerial5writeEh>:

size_t HardwareSerial::write(uint8_t c)
{
    13d2:	ef 92       	push	r14
    13d4:	ff 92       	push	r15
    13d6:	0f 93       	push	r16
    13d8:	1f 93       	push	r17
    13da:	cf 93       	push	r28
    13dc:	df 93       	push	r29
    13de:	ec 01       	movw	r28, r24
  _written = true;
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    13e4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    13e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    13e8:	98 13       	cpse	r25, r24
    13ea:	05 c0       	rjmp	.+10     	; 0x13f6 <_ZN14HardwareSerial5writeEh+0x24>
    13ec:	e8 89       	ldd	r30, Y+16	; 0x10
    13ee:	f9 89       	ldd	r31, Y+17	; 0x11
    13f0:	80 81       	ld	r24, Z
    13f2:	85 fd       	sbrc	r24, 5
    13f4:	24 c0       	rjmp	.+72     	; 0x143e <_ZN14HardwareSerial5writeEh+0x6c>
    13f6:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    13f8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    13fa:	10 e0       	ldi	r17, 0x00	; 0
    13fc:	0f 5f       	subi	r16, 0xFF	; 255
    13fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1400:	0f 73       	andi	r16, 0x3F	; 63
    1402:	11 27       	eor	r17, r17
    1404:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    1406:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1408:	e8 12       	cpse	r14, r24
    140a:	0c c0       	rjmp	.+24     	; 0x1424 <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    140c:	0f b6       	in	r0, 0x3f	; 63
    140e:	07 fc       	sbrc	r0, 7
    1410:	fa cf       	rjmp	.-12     	; 0x1406 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    1412:	e8 89       	ldd	r30, Y+16	; 0x10
    1414:	f9 89       	ldd	r31, Y+17	; 0x11
    1416:	80 81       	ld	r24, Z
    1418:	85 ff       	sbrs	r24, 5
    141a:	f5 cf       	rjmp	.-22     	; 0x1406 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    141c:	ce 01       	movw	r24, r28
    141e:	0e 94 a6 09 	call	0x134c	; 0x134c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1422:	f1 cf       	rjmp	.-30     	; 0x1406 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    1424:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1426:	fe 01       	movw	r30, r28
    1428:	e8 0f       	add	r30, r24
    142a:	f1 1d       	adc	r31, r1
    142c:	e3 5a       	subi	r30, 0xA3	; 163
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    1432:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    1434:	ea 89       	ldd	r30, Y+18	; 0x12
    1436:	fb 89       	ldd	r31, Y+19	; 0x13
    1438:	80 81       	ld	r24, Z
    143a:	80 62       	ori	r24, 0x20	; 32
    143c:	07 c0       	rjmp	.+14     	; 0x144c <_ZN14HardwareSerial5writeEh+0x7a>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    143e:	ee 89       	ldd	r30, Y+22	; 0x16
    1440:	ff 89       	ldd	r31, Y+23	; 0x17
    1442:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    1444:	e8 89       	ldd	r30, Y+16	; 0x10
    1446:	f9 89       	ldd	r31, Y+17	; 0x11
    1448:	80 81       	ld	r24, Z
    144a:	80 64       	ori	r24, 0x40	; 64
    144c:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    144e:	81 e0       	ldi	r24, 0x01	; 1
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	df 91       	pop	r29
    1454:	cf 91       	pop	r28
    1456:	1f 91       	pop	r17
    1458:	0f 91       	pop	r16
    145a:	ff 90       	pop	r15
    145c:	ef 90       	pop	r14
    145e:	08 95       	ret

00001460 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    1460:	cf 92       	push	r12
    1462:	df 92       	push	r13
    1464:	ef 92       	push	r14
    1466:	ff 92       	push	r15
    1468:	1f 93       	push	r17
    146a:	cf 93       	push	r28
    146c:	df 93       	push	r29
    146e:	ec 01       	movw	r28, r24
    1470:	6a 01       	movw	r12, r20
    1472:	7b 01       	movw	r14, r22
    1474:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    1476:	e8 89       	ldd	r30, Y+16	; 0x10
    1478:	f9 89       	ldd	r31, Y+17	; 0x11
    147a:	82 e0       	ldi	r24, 0x02	; 2
    147c:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    147e:	41 15       	cp	r20, r1
    1480:	51 4e       	sbci	r21, 0xE1	; 225
    1482:	61 05       	cpc	r22, r1
    1484:	71 05       	cpc	r23, r1
    1486:	b1 f0       	breq	.+44     	; 0x14b4 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    1488:	60 e0       	ldi	r22, 0x00	; 0
    148a:	79 e0       	ldi	r23, 0x09	; 9
    148c:	8d e3       	ldi	r24, 0x3D	; 61
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	a7 01       	movw	r20, r14
    1492:	96 01       	movw	r18, r12
    1494:	0e 94 e4 11 	call	0x23c8	; 0x23c8 <__udivmodsi4>
    1498:	da 01       	movw	r26, r20
    149a:	c9 01       	movw	r24, r18
    149c:	01 97       	sbiw	r24, 0x01	; 1
    149e:	a1 09       	sbc	r26, r1
    14a0:	b1 09       	sbc	r27, r1
    14a2:	b6 95       	lsr	r27
    14a4:	a7 95       	ror	r26
    14a6:	97 95       	ror	r25
    14a8:	87 95       	ror	r24
    14aa:	ac 01       	movw	r20, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    14ac:	41 15       	cp	r20, r1
    14ae:	80 e1       	ldi	r24, 0x10	; 16
    14b0:	58 07       	cpc	r21, r24
    14b2:	a8 f0       	brcs	.+42     	; 0x14de <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    14b4:	e8 89       	ldd	r30, Y+16	; 0x10
    14b6:	f9 89       	ldd	r31, Y+17	; 0x11
    14b8:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    14ba:	60 e8       	ldi	r22, 0x80	; 128
    14bc:	74 e8       	ldi	r23, 0x84	; 132
    14be:	8e e1       	ldi	r24, 0x1E	; 30
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	a7 01       	movw	r20, r14
    14c4:	96 01       	movw	r18, r12
    14c6:	0e 94 e4 11 	call	0x23c8	; 0x23c8 <__udivmodsi4>
    14ca:	ba 01       	movw	r22, r20
    14cc:	a9 01       	movw	r20, r18
    14ce:	41 50       	subi	r20, 0x01	; 1
    14d0:	51 09       	sbc	r21, r1
    14d2:	61 09       	sbc	r22, r1
    14d4:	71 09       	sbc	r23, r1
    14d6:	76 95       	lsr	r23
    14d8:	67 95       	ror	r22
    14da:	57 95       	ror	r21
    14dc:	47 95       	ror	r20
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    14de:	ec 85       	ldd	r30, Y+12	; 0x0c
    14e0:	fd 85       	ldd	r31, Y+13	; 0x0d
    14e2:	50 83       	st	Z, r21
  *_ubrrl = baud_setting;
    14e4:	ee 85       	ldd	r30, Y+14	; 0x0e
    14e6:	ff 85       	ldd	r31, Y+15	; 0x0f
    14e8:	40 83       	st	Z, r20

  _written = false;
    14ea:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    14ec:	ec 89       	ldd	r30, Y+20	; 0x14
    14ee:	fd 89       	ldd	r31, Y+21	; 0x15
    14f0:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    14f2:	ea 89       	ldd	r30, Y+18	; 0x12
    14f4:	fb 89       	ldd	r31, Y+19	; 0x13
    14f6:	80 81       	ld	r24, Z
    14f8:	80 61       	ori	r24, 0x10	; 16
    14fa:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    14fc:	ea 89       	ldd	r30, Y+18	; 0x12
    14fe:	fb 89       	ldd	r31, Y+19	; 0x13
    1500:	80 81       	ld	r24, Z
    1502:	88 60       	ori	r24, 0x08	; 8
    1504:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    1506:	ea 89       	ldd	r30, Y+18	; 0x12
    1508:	fb 89       	ldd	r31, Y+19	; 0x13
    150a:	80 81       	ld	r24, Z
    150c:	80 68       	ori	r24, 0x80	; 128
    150e:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    1510:	ea 89       	ldd	r30, Y+18	; 0x12
    1512:	fb 89       	ldd	r31, Y+19	; 0x13
    1514:	80 81       	ld	r24, Z
    1516:	8f 7d       	andi	r24, 0xDF	; 223
    1518:	80 83       	st	Z, r24
}
    151a:	df 91       	pop	r29
    151c:	cf 91       	pop	r28
    151e:	1f 91       	pop	r17
    1520:	ff 90       	pop	r15
    1522:	ef 90       	pop	r14
    1524:	df 90       	pop	r13
    1526:	cf 90       	pop	r12
    1528:	08 95       	ret

0000152a <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    152a:	1f 92       	push	r1
    152c:	0f 92       	push	r0
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	0f 92       	push	r0
    1532:	11 24       	eor	r1, r1
    1534:	2f 93       	push	r18
    1536:	8f 93       	push	r24
    1538:	9f 93       	push	r25
    153a:	ef 93       	push	r30
    153c:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    153e:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <Serial+0x10>
    1542:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <Serial+0x11>
    1546:	80 81       	ld	r24, Z
    1548:	e0 91 0a 04 	lds	r30, 0x040A	; 0x80040a <Serial+0x16>
    154c:	f0 91 0b 04 	lds	r31, 0x040B	; 0x80040b <Serial+0x17>
    1550:	82 fd       	sbrc	r24, 2
    1552:	12 c0       	rjmp	.+36     	; 0x1578 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    1554:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    1556:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <Serial+0x19>
    155a:	8f 5f       	subi	r24, 0xFF	; 255
    155c:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    155e:	20 91 0e 04 	lds	r18, 0x040E	; 0x80040e <Serial+0x1a>
    1562:	82 17       	cp	r24, r18
    1564:	51 f0       	breq	.+20     	; 0x157a <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    1566:	e0 91 0d 04 	lds	r30, 0x040D	; 0x80040d <Serial+0x19>
    156a:	f0 e0       	ldi	r31, 0x00	; 0
    156c:	ec 50       	subi	r30, 0x0C	; 12
    156e:	fc 4f       	sbci	r31, 0xFC	; 252
    1570:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    1572:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <Serial+0x19>
    1576:	01 c0       	rjmp	.+2      	; 0x157a <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    1578:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    157a:	ff 91       	pop	r31
    157c:	ef 91       	pop	r30
    157e:	9f 91       	pop	r25
    1580:	8f 91       	pop	r24
    1582:	2f 91       	pop	r18
    1584:	0f 90       	pop	r0
    1586:	0f be       	out	0x3f, r0	; 63
    1588:	0f 90       	pop	r0
    158a:	1f 90       	pop	r1
    158c:	18 95       	reti

0000158e <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    158e:	1f 92       	push	r1
    1590:	0f 92       	push	r0
    1592:	0f b6       	in	r0, 0x3f	; 63
    1594:	0f 92       	push	r0
    1596:	11 24       	eor	r1, r1
    1598:	2f 93       	push	r18
    159a:	3f 93       	push	r19
    159c:	4f 93       	push	r20
    159e:	5f 93       	push	r21
    15a0:	6f 93       	push	r22
    15a2:	7f 93       	push	r23
    15a4:	8f 93       	push	r24
    15a6:	9f 93       	push	r25
    15a8:	af 93       	push	r26
    15aa:	bf 93       	push	r27
    15ac:	ef 93       	push	r30
    15ae:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    15b0:	84 ef       	ldi	r24, 0xF4	; 244
    15b2:	93 e0       	ldi	r25, 0x03	; 3
    15b4:	0e 94 a6 09 	call	0x134c	; 0x134c <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    15b8:	ff 91       	pop	r31
    15ba:	ef 91       	pop	r30
    15bc:	bf 91       	pop	r27
    15be:	af 91       	pop	r26
    15c0:	9f 91       	pop	r25
    15c2:	8f 91       	pop	r24
    15c4:	7f 91       	pop	r23
    15c6:	6f 91       	pop	r22
    15c8:	5f 91       	pop	r21
    15ca:	4f 91       	pop	r20
    15cc:	3f 91       	pop	r19
    15ce:	2f 91       	pop	r18
    15d0:	0f 90       	pop	r0
    15d2:	0f be       	out	0x3f, r0	; 63
    15d4:	0f 90       	pop	r0
    15d6:	1f 90       	pop	r1
    15d8:	18 95       	reti

000015da <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    15da:	84 ef       	ldi	r24, 0xF4	; 244
    15dc:	93 e0       	ldi	r25, 0x03	; 3
    15de:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN14HardwareSerial9availableEv>
    15e2:	21 e0       	ldi	r18, 0x01	; 1
    15e4:	89 2b       	or	r24, r25
    15e6:	09 f4       	brne	.+2      	; 0x15ea <_Z17Serial0_availablev+0x10>
    15e8:	20 e0       	ldi	r18, 0x00	; 0
}
    15ea:	82 2f       	mov	r24, r18
    15ec:	08 95       	ret

000015ee <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    15ee:	e4 ef       	ldi	r30, 0xF4	; 244
    15f0:	f3 e0       	ldi	r31, 0x03	; 3
    15f2:	13 82       	std	Z+3, r1	; 0x03
    15f4:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    15f6:	88 ee       	ldi	r24, 0xE8	; 232
    15f8:	93 e0       	ldi	r25, 0x03	; 3
    15fa:	a0 e0       	ldi	r26, 0x00	; 0
    15fc:	b0 e0       	ldi	r27, 0x00	; 0
    15fe:	84 83       	std	Z+4, r24	; 0x04
    1600:	95 83       	std	Z+5, r25	; 0x05
    1602:	a6 83       	std	Z+6, r26	; 0x06
    1604:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    1606:	8d e6       	ldi	r24, 0x6D	; 109
    1608:	92 e0       	ldi	r25, 0x02	; 2
    160a:	91 83       	std	Z+1, r25	; 0x01
    160c:	80 83       	st	Z, r24
    160e:	85 ec       	ldi	r24, 0xC5	; 197
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	95 87       	std	Z+13, r25	; 0x0d
    1614:	84 87       	std	Z+12, r24	; 0x0c
    1616:	84 ec       	ldi	r24, 0xC4	; 196
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	97 87       	std	Z+15, r25	; 0x0f
    161c:	86 87       	std	Z+14, r24	; 0x0e
    161e:	80 ec       	ldi	r24, 0xC0	; 192
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	91 8b       	std	Z+17, r25	; 0x11
    1624:	80 8b       	std	Z+16, r24	; 0x10
    1626:	81 ec       	ldi	r24, 0xC1	; 193
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	93 8b       	std	Z+19, r25	; 0x13
    162c:	82 8b       	std	Z+18, r24	; 0x12
    162e:	82 ec       	ldi	r24, 0xC2	; 194
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	95 8b       	std	Z+21, r25	; 0x15
    1634:	84 8b       	std	Z+20, r24	; 0x14
    1636:	86 ec       	ldi	r24, 0xC6	; 198
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	97 8b       	std	Z+23, r25	; 0x17
    163c:	86 8b       	std	Z+22, r24	; 0x16
    163e:	11 8e       	std	Z+25, r1	; 0x19
    1640:	12 8e       	std	Z+26, r1	; 0x1a
    1642:	13 8e       	std	Z+27, r1	; 0x1b
    1644:	14 8e       	std	Z+28, r1	; 0x1c
    1646:	08 95       	ret

00001648 <_ZN5Print5writeEPKhj>:
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    1648:	cf 92       	push	r12
    164a:	df 92       	push	r13
    164c:	ef 92       	push	r14
    164e:	ff 92       	push	r15
    1650:	0f 93       	push	r16
    1652:	1f 93       	push	r17
    1654:	cf 93       	push	r28
    1656:	df 93       	push	r29
    1658:	6c 01       	movw	r12, r24
    165a:	7a 01       	movw	r14, r20
    165c:	8b 01       	movw	r16, r22
    165e:	c0 e0       	ldi	r28, 0x00	; 0
    1660:	d0 e0       	ldi	r29, 0x00	; 0
    1662:	ce 15       	cp	r28, r14
    1664:	df 05       	cpc	r29, r15
    1666:	89 f0       	breq	.+34     	; 0x168a <_ZN5Print5writeEPKhj+0x42>
    1668:	d8 01       	movw	r26, r16
    166a:	6d 91       	ld	r22, X+
    166c:	8d 01       	movw	r16, r26
    166e:	d6 01       	movw	r26, r12
    1670:	ed 91       	ld	r30, X+
    1672:	fc 91       	ld	r31, X
    1674:	01 90       	ld	r0, Z+
    1676:	f0 81       	ld	r31, Z
    1678:	e0 2d       	mov	r30, r0
    167a:	c6 01       	movw	r24, r12
    167c:	09 95       	icall
    167e:	89 2b       	or	r24, r25
    1680:	11 f4       	brne	.+4      	; 0x1686 <_ZN5Print5writeEPKhj+0x3e>
    1682:	7e 01       	movw	r14, r28
    1684:	02 c0       	rjmp	.+4      	; 0x168a <_ZN5Print5writeEPKhj+0x42>
    1686:	21 96       	adiw	r28, 0x01	; 1
    1688:	ec cf       	rjmp	.-40     	; 0x1662 <_ZN5Print5writeEPKhj+0x1a>
    168a:	c7 01       	movw	r24, r14
    168c:	df 91       	pop	r29
    168e:	cf 91       	pop	r28
    1690:	1f 91       	pop	r17
    1692:	0f 91       	pop	r16
    1694:	ff 90       	pop	r15
    1696:	ef 90       	pop	r14
    1698:	df 90       	pop	r13
    169a:	cf 90       	pop	r12
    169c:	08 95       	ret

0000169e <_ZN5Print5writeEPKc>:
    169e:	61 15       	cp	r22, r1
    16a0:	71 05       	cpc	r23, r1
    16a2:	79 f0       	breq	.+30     	; 0x16c2 <_ZN5Print5writeEPKc+0x24>
    16a4:	fb 01       	movw	r30, r22
    16a6:	01 90       	ld	r0, Z+
    16a8:	00 20       	and	r0, r0
    16aa:	e9 f7       	brne	.-6      	; 0x16a6 <_ZN5Print5writeEPKc+0x8>
    16ac:	31 97       	sbiw	r30, 0x01	; 1
    16ae:	af 01       	movw	r20, r30
    16b0:	46 1b       	sub	r20, r22
    16b2:	57 0b       	sbc	r21, r23
    16b4:	dc 01       	movw	r26, r24
    16b6:	ed 91       	ld	r30, X+
    16b8:	fc 91       	ld	r31, X
    16ba:	02 80       	ldd	r0, Z+2	; 0x02
    16bc:	f3 81       	ldd	r31, Z+3	; 0x03
    16be:	e0 2d       	mov	r30, r0
    16c0:	09 94       	ijmp
    16c2:	80 e0       	ldi	r24, 0x00	; 0
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	08 95       	ret

000016c8 <_ZN5Print5printEPKc>:
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    16c8:	0c 94 4f 0b 	jmp	0x169e	; 0x169e <_ZN5Print5writeEPKc>

000016cc <OsEE_atmega_startTimer1>:
    16cc:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    16d0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    16d4:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    16d8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16dc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16e0:	61 15       	cp	r22, r1
    16e2:	20 e1       	ldi	r18, 0x10	; 16
    16e4:	72 07       	cpc	r23, r18
    16e6:	81 05       	cpc	r24, r1
    16e8:	91 05       	cpc	r25, r1
    16ea:	48 f4       	brcc	.+18     	; 0x16fe <OsEE_atmega_startTimer1+0x32>
    16ec:	e4 e0       	ldi	r30, 0x04	; 4
    16ee:	66 0f       	add	r22, r22
    16f0:	77 1f       	adc	r23, r23
    16f2:	ea 95       	dec	r30
    16f4:	e1 f7       	brne	.-8      	; 0x16ee <OsEE_atmega_startTimer1+0x22>
    16f6:	61 50       	subi	r22, 0x01	; 1
    16f8:	71 09       	sbc	r23, r1
    16fa:	81 e0       	ldi	r24, 0x01	; 1
    16fc:	42 c0       	rjmp	.+132    	; 0x1782 <OsEE_atmega_startTimer1+0xb6>
    16fe:	61 15       	cp	r22, r1
    1700:	20 e8       	ldi	r18, 0x80	; 128
    1702:	72 07       	cpc	r23, r18
    1704:	81 05       	cpc	r24, r1
    1706:	91 05       	cpc	r25, r1
    1708:	30 f4       	brcc	.+12     	; 0x1716 <OsEE_atmega_startTimer1+0x4a>
    170a:	66 0f       	add	r22, r22
    170c:	77 1f       	adc	r23, r23
    170e:	61 50       	subi	r22, 0x01	; 1
    1710:	71 09       	sbc	r23, r1
    1712:	82 e0       	ldi	r24, 0x02	; 2
    1714:	36 c0       	rjmp	.+108    	; 0x1782 <OsEE_atmega_startTimer1+0xb6>
    1716:	6c 3f       	cpi	r22, 0xFC	; 252
    1718:	2f ef       	ldi	r18, 0xFF	; 255
    171a:	72 07       	cpc	r23, r18
    171c:	23 e0       	ldi	r18, 0x03	; 3
    171e:	82 07       	cpc	r24, r18
    1720:	91 05       	cpc	r25, r1
    1722:	70 f4       	brcc	.+28     	; 0x1740 <OsEE_atmega_startTimer1+0x74>
    1724:	dc 01       	movw	r26, r24
    1726:	cb 01       	movw	r24, r22
    1728:	42 e0       	ldi	r20, 0x02	; 2
    172a:	b6 95       	lsr	r27
    172c:	a7 95       	ror	r26
    172e:	97 95       	ror	r25
    1730:	87 95       	ror	r24
    1732:	4a 95       	dec	r20
    1734:	d1 f7       	brne	.-12     	; 0x172a <OsEE_atmega_startTimer1+0x5e>
    1736:	bc 01       	movw	r22, r24
    1738:	61 50       	subi	r22, 0x01	; 1
    173a:	71 09       	sbc	r23, r1
    173c:	83 e0       	ldi	r24, 0x03	; 3
    173e:	21 c0       	rjmp	.+66     	; 0x1782 <OsEE_atmega_startTimer1+0xb6>
    1740:	61 15       	cp	r22, r1
    1742:	71 05       	cpc	r23, r1
    1744:	20 e1       	ldi	r18, 0x10	; 16
    1746:	82 07       	cpc	r24, r18
    1748:	91 05       	cpc	r25, r1
    174a:	70 f4       	brcc	.+28     	; 0x1768 <OsEE_atmega_startTimer1+0x9c>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	34 e0       	ldi	r19, 0x04	; 4
    1752:	b6 95       	lsr	r27
    1754:	a7 95       	ror	r26
    1756:	97 95       	ror	r25
    1758:	87 95       	ror	r24
    175a:	3a 95       	dec	r19
    175c:	d1 f7       	brne	.-12     	; 0x1752 <OsEE_atmega_startTimer1+0x86>
    175e:	bc 01       	movw	r22, r24
    1760:	61 50       	subi	r22, 0x01	; 1
    1762:	71 09       	sbc	r23, r1
    1764:	84 e0       	ldi	r24, 0x04	; 4
    1766:	0d c0       	rjmp	.+26     	; 0x1782 <OsEE_atmega_startTimer1+0xb6>
    1768:	dc 01       	movw	r26, r24
    176a:	cb 01       	movw	r24, r22
    176c:	26 e0       	ldi	r18, 0x06	; 6
    176e:	b6 95       	lsr	r27
    1770:	a7 95       	ror	r26
    1772:	97 95       	ror	r25
    1774:	87 95       	ror	r24
    1776:	2a 95       	dec	r18
    1778:	d1 f7       	brne	.-12     	; 0x176e <OsEE_atmega_startTimer1+0xa2>
    177a:	bc 01       	movw	r22, r24
    177c:	61 50       	subi	r22, 0x01	; 1
    177e:	71 09       	sbc	r23, r1
    1780:	85 e0       	ldi	r24, 0x05	; 5
    1782:	92 e0       	ldi	r25, 0x02	; 2
    1784:	96 bb       	out	0x16, r25	; 22
    1786:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    178a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    178e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1792:	88 60       	ori	r24, 0x08	; 8
    1794:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1798:	08 95       	ret

0000179a <StartOS>:
    179a:	4f 92       	push	r4
    179c:	5f 92       	push	r5
    179e:	6f 92       	push	r6
    17a0:	7f 92       	push	r7
    17a2:	8f 92       	push	r8
    17a4:	9f 92       	push	r9
    17a6:	af 92       	push	r10
    17a8:	bf 92       	push	r11
    17aa:	cf 92       	push	r12
    17ac:	df 92       	push	r13
    17ae:	ef 92       	push	r14
    17b0:	ff 92       	push	r15
    17b2:	0f 93       	push	r16
    17b4:	1f 93       	push	r17
    17b6:	cf 93       	push	r28
    17b8:	df 93       	push	r29
    17ba:	00 d0       	rcall	.+0      	; 0x17bc <StartOS+0x22>
    17bc:	cd b7       	in	r28, 0x3d	; 61
    17be:	de b7       	in	r29, 0x3e	; 62
    17c0:	00 91 dd 01 	lds	r16, 0x01DD	; 0x8001dd <osEE_cdb_var>
    17c4:	10 91 de 01 	lds	r17, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    17c8:	9f b7       	in	r25, 0x3f	; 63
    17ca:	f8 94       	cli
    17cc:	d8 01       	movw	r26, r16
    17ce:	18 96       	adiw	r26, 0x08	; 8
    17d0:	2d 91       	ld	r18, X+
    17d2:	3c 91       	ld	r19, X
    17d4:	19 97       	sbiw	r26, 0x09	; 9
    17d6:	23 2b       	or	r18, r19
    17d8:	09 f0       	breq	.+2      	; 0x17dc <StartOS+0x42>
    17da:	6d c0       	rjmp	.+218    	; 0x18b6 <StartOS+0x11c>
    17dc:	f8 2e       	mov	r15, r24
    17de:	8c e7       	ldi	r24, 0x7C	; 124
    17e0:	9f e0       	ldi	r25, 0x0F	; 15
    17e2:	9a 83       	std	Y+2, r25	; 0x02
    17e4:	89 83       	std	Y+1, r24	; 0x01
    17e6:	c0 90 e1 01 	lds	r12, 0x01E1	; 0x8001e1 <osEE_cdb_var+0x4>
    17ea:	d0 90 e2 01 	lds	r13, 0x01E2	; 0x8001e2 <osEE_cdb_var+0x5>
    17ee:	81 e0       	ldi	r24, 0x01	; 1
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	19 96       	adiw	r26, 0x09	; 9
    17f4:	9c 93       	st	X, r25
    17f6:	8e 93       	st	-X, r24
    17f8:	18 97       	sbiw	r26, 0x08	; 8
    17fa:	1a 96       	adiw	r26, 0x0a	; 10
    17fc:	fc 92       	st	X, r15
    17fe:	0e 94 78 06 	call	0xcf0	; 0xcf0 <StartupHook>
    1802:	40 90 e3 01 	lds	r4, 0x01E3	; 0x8001e3 <osEE_cdb_var+0x6>
    1806:	50 90 e4 01 	lds	r5, 0x01E4	; 0x8001e4 <osEE_cdb_var+0x7>
    180a:	48 01       	movw	r8, r16
    180c:	b2 e0       	ldi	r27, 0x02	; 2
    180e:	8b 0e       	add	r8, r27
    1810:	91 1c       	adc	r9, r1
    1812:	f2 01       	movw	r30, r4
    1814:	84 e0       	ldi	r24, 0x04	; 4
    1816:	f8 9e       	mul	r15, r24
    1818:	e0 0d       	add	r30, r0
    181a:	f1 1d       	adc	r31, r1
    181c:	11 24       	eor	r1, r1
    181e:	a2 80       	ldd	r10, Z+2	; 0x02
    1820:	b3 80       	ldd	r11, Z+3	; 0x03
    1822:	e1 2c       	mov	r14, r1
    1824:	f1 2c       	mov	r15, r1
    1826:	2f 01       	movw	r4, r30
    1828:	66 24       	eor	r6, r6
    182a:	63 94       	inc	r6
    182c:	71 2c       	mov	r7, r1
    182e:	ea 14       	cp	r14, r10
    1830:	fb 04       	cpc	r15, r11
    1832:	31 f1       	breq	.+76     	; 0x1880 <StartOS+0xe6>
    1834:	d2 01       	movw	r26, r4
    1836:	ed 91       	ld	r30, X+
    1838:	fc 91       	ld	r31, X
    183a:	c7 01       	movw	r24, r14
    183c:	88 0f       	add	r24, r24
    183e:	99 1f       	adc	r25, r25
    1840:	e8 0f       	add	r30, r24
    1842:	f9 1f       	adc	r31, r25
    1844:	40 81       	ld	r20, Z
    1846:	51 81       	ldd	r21, Z+1	; 0x01
    1848:	da 01       	movw	r26, r20
    184a:	14 96       	adiw	r26, 0x04	; 4
    184c:	ed 91       	ld	r30, X+
    184e:	fc 91       	ld	r31, X
    1850:	15 97       	sbiw	r26, 0x05	; 5
    1852:	80 81       	ld	r24, Z
    1854:	8f 5f       	subi	r24, 0xFF	; 255
    1856:	80 83       	st	Z, r24
    1858:	73 82       	std	Z+3, r7	; 0x03
    185a:	62 82       	std	Z+2, r6	; 0x02
    185c:	f8 01       	movw	r30, r16
    185e:	64 81       	ldd	r22, Z+4	; 0x04
    1860:	75 81       	ldd	r23, Z+5	; 0x05
    1862:	db 01       	movw	r26, r22
    1864:	8d 91       	ld	r24, X+
    1866:	9c 91       	ld	r25, X
    1868:	11 97       	sbiw	r26, 0x01	; 1
    186a:	95 83       	std	Z+5, r25	; 0x05
    186c:	84 83       	std	Z+4, r24	; 0x04
    186e:	1d 92       	st	X+, r1
    1870:	1c 92       	st	X, r1
    1872:	c4 01       	movw	r24, r8
    1874:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <osEE_scheduler_rq_insert>
    1878:	bf ef       	ldi	r27, 0xFF	; 255
    187a:	eb 1a       	sub	r14, r27
    187c:	fb 0a       	sbc	r15, r27
    187e:	d7 cf       	rjmp	.-82     	; 0x182e <StartOS+0x94>
    1880:	f8 01       	movw	r30, r16
    1882:	80 85       	ldd	r24, Z+8	; 0x08
    1884:	91 85       	ldd	r25, Z+9	; 0x09
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	21 f4       	brne	.+8      	; 0x1892 <StartOS+0xf8>
    188a:	82 e0       	ldi	r24, 0x02	; 2
    188c:	90 e0       	ldi	r25, 0x00	; 0
    188e:	91 87       	std	Z+9, r25	; 0x09
    1890:	80 87       	std	Z+8, r24	; 0x08
    1892:	d8 01       	movw	r26, r16
    1894:	18 96       	adiw	r26, 0x08	; 8
    1896:	8d 91       	ld	r24, X+
    1898:	9c 91       	ld	r25, X
    189a:	19 97       	sbiw	r26, 0x09	; 9
    189c:	02 97       	sbiw	r24, 0x02	; 2
    189e:	79 f4       	brne	.+30     	; 0x18be <StartOS+0x124>
    18a0:	f6 01       	movw	r30, r12
    18a2:	62 81       	ldd	r22, Z+2	; 0x02
    18a4:	73 81       	ldd	r23, Z+3	; 0x03
    18a6:	ab 01       	movw	r20, r22
    18a8:	c6 01       	movw	r24, r12
    18aa:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>
    18ae:	c6 01       	movw	r24, r12
    18b0:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <osEE_task_end>
    18b4:	04 c0       	rjmp	.+8      	; 0x18be <StartOS+0x124>
    18b6:	9f bf       	out	0x3f, r25	; 63
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	02 c0       	rjmp	.+4      	; 0x18c2 <StartOS+0x128>
    18be:	80 e0       	ldi	r24, 0x00	; 0
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0f 90       	pop	r0
    18c4:	0f 90       	pop	r0
    18c6:	df 91       	pop	r29
    18c8:	cf 91       	pop	r28
    18ca:	1f 91       	pop	r17
    18cc:	0f 91       	pop	r16
    18ce:	ff 90       	pop	r15
    18d0:	ef 90       	pop	r14
    18d2:	df 90       	pop	r13
    18d4:	cf 90       	pop	r12
    18d6:	bf 90       	pop	r11
    18d8:	af 90       	pop	r10
    18da:	9f 90       	pop	r9
    18dc:	8f 90       	pop	r8
    18de:	7f 90       	pop	r7
    18e0:	6f 90       	pop	r6
    18e2:	5f 90       	pop	r5
    18e4:	4f 90       	pop	r4
    18e6:	08 95       	ret

000018e8 <ActivateTask>:
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	20 91 db 01 	lds	r18, 0x01DB	; 0x8001db <osEE_kdb_var+0x4>
    18f8:	30 91 dc 01 	lds	r19, 0x01DC	; 0x8001dc <osEE_kdb_var+0x5>
    18fc:	82 17       	cp	r24, r18
    18fe:	93 07       	cpc	r25, r19
    1900:	f0 f4       	brcc	.+60     	; 0x193e <ActivateTask+0x56>
    1902:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <osEE_kdb_var+0x2>
    1906:	f0 91 da 01 	lds	r31, 0x01DA	; 0x8001da <osEE_kdb_var+0x3>
    190a:	88 0f       	add	r24, r24
    190c:	99 1f       	adc	r25, r25
    190e:	e8 0f       	add	r30, r24
    1910:	f9 1f       	adc	r31, r25
    1912:	00 81       	ld	r16, Z
    1914:	11 81       	ldd	r17, Z+1	; 0x01
    1916:	f8 01       	movw	r30, r16
    1918:	87 81       	ldd	r24, Z+7	; 0x07
    191a:	90 85       	ldd	r25, Z+8	; 0x08
    191c:	02 97       	sbiw	r24, 0x02	; 2
    191e:	78 f4       	brcc	.+30     	; 0x193e <ActivateTask+0x56>
    1920:	ff b6       	in	r15, 0x3f	; 63
    1922:	f8 94       	cli
    1924:	c8 01       	movw	r24, r16
    1926:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <osEE_task_activated>
    192a:	ec 01       	movw	r28, r24
    192c:	89 2b       	or	r24, r25
    192e:	29 f4       	brne	.+10     	; 0x193a <ActivateTask+0x52>
    1930:	b8 01       	movw	r22, r16
    1932:	87 ed       	ldi	r24, 0xD7	; 215
    1934:	91 e0       	ldi	r25, 0x01	; 1
    1936:	0e 94 07 0e 	call	0x1c0e	; 0x1c0e <osEE_scheduler_task_activated>
    193a:	ff be       	out	0x3f, r15	; 63
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <ActivateTask+0x5a>
    193e:	c3 e0       	ldi	r28, 0x03	; 3
    1940:	d0 e0       	ldi	r29, 0x00	; 0
    1942:	ce 01       	movw	r24, r28
    1944:	df 91       	pop	r29
    1946:	cf 91       	pop	r28
    1948:	1f 91       	pop	r17
    194a:	0f 91       	pop	r16
    194c:	ff 90       	pop	r15
    194e:	08 95       	ret

00001950 <osEE_scheduler_task_wrapper_restore>:
    1950:	dc 01       	movw	r26, r24
    1952:	14 96       	adiw	r26, 0x04	; 4
    1954:	ed 91       	ld	r30, X+
    1956:	fc 91       	ld	r31, X
    1958:	15 97       	sbiw	r26, 0x05	; 5
    195a:	84 e0       	ldi	r24, 0x04	; 4
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	93 83       	std	Z+3, r25	; 0x03
    1960:	82 83       	std	Z+2, r24	; 0x02
    1962:	08 95       	ret

00001964 <osEE_scheduler_task_wrapper_run>:
    1964:	ec 01       	movw	r28, r24
    1966:	ec 81       	ldd	r30, Y+4	; 0x04
    1968:	fd 81       	ldd	r31, Y+5	; 0x05
    196a:	81 81       	ldd	r24, Z+1	; 0x01
    196c:	24 e0       	ldi	r18, 0x04	; 4
    196e:	30 e0       	ldi	r19, 0x00	; 0
    1970:	33 83       	std	Z+3, r19	; 0x03
    1972:	22 83       	std	Z+2, r18	; 0x02
    1974:	8f 3f       	cpi	r24, 0xFF	; 255
    1976:	09 f0       	breq	.+2      	; 0x197a <osEE_scheduler_task_wrapper_run+0x16>
    1978:	78 94       	sei
    197a:	e9 85       	ldd	r30, Y+9	; 0x09
    197c:	fa 85       	ldd	r31, Y+10	; 0x0a
    197e:	09 95       	icall
    1980:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <osEE_cdb_var>
    1984:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    1988:	10 8a       	std	Z+16, r1	; 0x10
    198a:	87 85       	ldd	r24, Z+15	; 0x0f
    198c:	88 23       	and	r24, r24
    198e:	19 f0       	breq	.+6      	; 0x1996 <osEE_scheduler_task_wrapper_run+0x32>
    1990:	17 86       	std	Z+15, r1	; 0x0f
    1992:	85 85       	ldd	r24, Z+13	; 0x0d
    1994:	8f bf       	out	0x3f, r24	; 63
    1996:	81 89       	ldd	r24, Z+17	; 0x11
    1998:	88 23       	and	r24, r24
    199a:	11 f0       	breq	.+4      	; 0x19a0 <osEE_scheduler_task_wrapper_run+0x3c>
    199c:	11 8a       	std	Z+17, r1	; 0x11
    199e:	78 94       	sei
    19a0:	8f b7       	in	r24, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	64 e6       	ldi	r22, 0x64	; 100
    19a6:	7f e0       	ldi	r23, 0x0F	; 15
    19a8:	8a 81       	ldd	r24, Y+2	; 0x02
    19aa:	9b 81       	ldd	r25, Y+3	; 0x03
    19ac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <osEE_hal_terminate_ctx>

000019b0 <osEE_idle_hook_wrapper>:
    19b0:	0f 93       	push	r16
    19b2:	1f 93       	push	r17
    19b4:	cf 93       	push	r28
    19b6:	df 93       	push	r29
    19b8:	cf b7       	in	r28, 0x3f	; 63
    19ba:	f8 94       	cli
    19bc:	87 ed       	ldi	r24, 0xD7	; 215
    19be:	91 e0       	ldi	r25, 0x01	; 1
    19c0:	0e 94 cd 0e 	call	0x1d9a	; 0x1d9a <osEE_scheduler_task_preemption_point>
    19c4:	cf bf       	out	0x3f, r28	; 63
    19c6:	00 91 dd 01 	lds	r16, 0x01DD	; 0x8001dd <osEE_cdb_var>
    19ca:	10 91 de 01 	lds	r17, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    19ce:	c0 91 df 01 	lds	r28, 0x01DF	; 0x8001df <osEE_cdb_var+0x2>
    19d2:	d0 91 e0 01 	lds	r29, 0x01E0	; 0x8001e0 <osEE_cdb_var+0x3>
    19d6:	f8 01       	movw	r30, r16
    19d8:	80 85       	ldd	r24, Z+8	; 0x08
    19da:	91 85       	ldd	r25, Z+9	; 0x09
    19dc:	02 97       	sbiw	r24, 0x02	; 2
    19de:	29 f4       	brne	.+10     	; 0x19ea <osEE_idle_hook_wrapper+0x3a>
    19e0:	20 97       	sbiw	r28, 0x00	; 0
    19e2:	c9 f3       	breq	.-14     	; 0x19d6 <osEE_idle_hook_wrapper+0x26>
    19e4:	fe 01       	movw	r30, r28
    19e6:	09 95       	icall
    19e8:	f6 cf       	rjmp	.-20     	; 0x19d6 <osEE_idle_hook_wrapper+0x26>
    19ea:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <osEE_cdb_var+0x4>
    19ee:	90 91 e2 01 	lds	r25, 0x01E2	; 0x8001e2 <osEE_cdb_var+0x5>
    19f2:	df 91       	pop	r29
    19f4:	cf 91       	pop	r28
    19f6:	1f 91       	pop	r17
    19f8:	0f 91       	pop	r16
    19fa:	0c 94 49 0f 	jmp	0x1e92	; 0x1e92 <osEE_idle_task_terminate>

000019fe <osEE_scheduler_core_rq_preempt_stk>:
    19fe:	0f 93       	push	r16
    1a00:	1f 93       	push	r17
    1a02:	cf 93       	push	r28
    1a04:	df 93       	push	r29
    1a06:	ec 01       	movw	r28, r24
    1a08:	a8 81       	ld	r26, Y
    1a0a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a0c:	eb 01       	movw	r28, r22
    1a0e:	e8 81       	ld	r30, Y
    1a10:	f9 81       	ldd	r31, Y+1	; 0x01
    1a12:	16 96       	adiw	r26, 0x06	; 6
    1a14:	cd 91       	ld	r28, X+
    1a16:	dc 91       	ld	r29, X
    1a18:	17 97       	sbiw	r26, 0x07	; 7
    1a1a:	20 97       	sbiw	r28, 0x00	; 0
    1a1c:	b1 f0       	breq	.+44     	; 0x1a4a <osEE_scheduler_core_rq_preempt_stk+0x4c>
    1a1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a20:	9b 81       	ldd	r25, Y+3	; 0x03
    1a22:	30 97       	sbiw	r30, 0x00	; 0
    1a24:	e1 f1       	breq	.+120    	; 0x1a9e <osEE_scheduler_core_rq_preempt_stk+0xa0>
    1a26:	ec 01       	movw	r28, r24
    1a28:	0c 81       	ldd	r16, Y+4	; 0x04
    1a2a:	1d 81       	ldd	r17, Y+5	; 0x05
    1a2c:	22 81       	ldd	r18, Z+2	; 0x02
    1a2e:	33 81       	ldd	r19, Z+3	; 0x03
    1a30:	e9 01       	movw	r28, r18
    1a32:	4c 81       	ldd	r20, Y+4	; 0x04
    1a34:	5d 81       	ldd	r21, Y+5	; 0x05
    1a36:	e8 01       	movw	r28, r16
    1a38:	39 81       	ldd	r19, Y+1	; 0x01
    1a3a:	ea 01       	movw	r28, r20
    1a3c:	29 81       	ldd	r18, Y+1	; 0x01
    1a3e:	32 17       	cp	r19, r18
    1a40:	70 f5       	brcc	.+92     	; 0x1a9e <osEE_scheduler_core_rq_preempt_stk+0xa0>
    1a42:	22 e0       	ldi	r18, 0x02	; 2
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	e8 01       	movw	r28, r16
    1a48:	0b c0       	rjmp	.+22     	; 0x1a60 <osEE_scheduler_core_rq_preempt_stk+0x62>
    1a4a:	30 97       	sbiw	r30, 0x00	; 0
    1a4c:	41 f1       	breq	.+80     	; 0x1a9e <osEE_scheduler_core_rq_preempt_stk+0xa0>
    1a4e:	ec 01       	movw	r28, r24
    1a50:	8c 81       	ldd	r24, Y+4	; 0x04
    1a52:	9d 81       	ldd	r25, Y+5	; 0x05
    1a54:	ec 01       	movw	r28, r24
    1a56:	4c 81       	ldd	r20, Y+4	; 0x04
    1a58:	5d 81       	ldd	r21, Y+5	; 0x05
    1a5a:	22 e0       	ldi	r18, 0x02	; 2
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	ea 01       	movw	r28, r20
    1a60:	3b 83       	std	Y+3, r19	; 0x03
    1a62:	2a 83       	std	Y+2, r18	; 0x02
    1a64:	20 81       	ld	r18, Z
    1a66:	31 81       	ldd	r19, Z+1	; 0x01
    1a68:	eb 01       	movw	r28, r22
    1a6a:	39 83       	std	Y+1, r19	; 0x01
    1a6c:	28 83       	st	Y, r18
    1a6e:	c2 81       	ldd	r28, Z+2	; 0x02
    1a70:	d3 81       	ldd	r29, Z+3	; 0x03
    1a72:	4c 81       	ldd	r20, Y+4	; 0x04
    1a74:	5d 81       	ldd	r21, Y+5	; 0x05
    1a76:	16 96       	adiw	r26, 0x06	; 6
    1a78:	2d 91       	ld	r18, X+
    1a7a:	3c 91       	ld	r19, X
    1a7c:	17 97       	sbiw	r26, 0x07	; 7
    1a7e:	31 83       	std	Z+1, r19	; 0x01
    1a80:	20 83       	st	Z, r18
    1a82:	17 96       	adiw	r26, 0x07	; 7
    1a84:	fc 93       	st	X, r31
    1a86:	ee 93       	st	-X, r30
    1a88:	16 97       	sbiw	r26, 0x06	; 6
    1a8a:	cd 93       	st	X+, r28
    1a8c:	dc 93       	st	X, r29
    1a8e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a90:	fa 01       	movw	r30, r20
    1a92:	31 81       	ldd	r19, Z+1	; 0x01
    1a94:	32 17       	cp	r19, r18
    1a96:	28 f4       	brcc	.+10     	; 0x1aa2 <osEE_scheduler_core_rq_preempt_stk+0xa4>
    1a98:	fa 01       	movw	r30, r20
    1a9a:	21 83       	std	Z+1, r18	; 0x01
    1a9c:	02 c0       	rjmp	.+4      	; 0x1aa2 <osEE_scheduler_core_rq_preempt_stk+0xa4>
    1a9e:	80 e0       	ldi	r24, 0x00	; 0
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	df 91       	pop	r29
    1aa4:	cf 91       	pop	r28
    1aa6:	1f 91       	pop	r17
    1aa8:	0f 91       	pop	r16
    1aaa:	08 95       	ret

00001aac <osEE_sn_priority_insert>:
    1aac:	0f 93       	push	r16
    1aae:	1f 93       	push	r17
    1ab0:	cf 93       	push	r28
    1ab2:	df 93       	push	r29
    1ab4:	db 01       	movw	r26, r22
    1ab6:	12 96       	adiw	r26, 0x02	; 2
    1ab8:	ed 91       	ld	r30, X+
    1aba:	fc 91       	ld	r31, X
    1abc:	13 97       	sbiw	r26, 0x03	; 3
    1abe:	a4 81       	ldd	r26, Z+4	; 0x04
    1ac0:	b5 81       	ldd	r27, Z+5	; 0x05
    1ac2:	41 15       	cp	r20, r1
    1ac4:	51 05       	cpc	r21, r1
    1ac6:	11 f0       	breq	.+4      	; 0x1acc <osEE_sn_priority_insert+0x20>
    1ac8:	23 85       	ldd	r18, Z+11	; 0x0b
    1aca:	02 c0       	rjmp	.+4      	; 0x1ad0 <osEE_sn_priority_insert+0x24>
    1acc:	11 96       	adiw	r26, 0x01	; 1
    1ace:	2c 91       	ld	r18, X
    1ad0:	ec 01       	movw	r28, r24
    1ad2:	e8 81       	ld	r30, Y
    1ad4:	f9 81       	ldd	r31, Y+1	; 0x01
    1ad6:	a0 e0       	ldi	r26, 0x00	; 0
    1ad8:	b0 e0       	ldi	r27, 0x00	; 0
    1ada:	30 97       	sbiw	r30, 0x00	; 0
    1adc:	91 f0       	breq	.+36     	; 0x1b02 <osEE_sn_priority_insert+0x56>
    1ade:	c2 81       	ldd	r28, Z+2	; 0x02
    1ae0:	d3 81       	ldd	r29, Z+3	; 0x03
    1ae2:	0c 81       	ldd	r16, Y+4	; 0x04
    1ae4:	1d 81       	ldd	r17, Y+5	; 0x05
    1ae6:	41 15       	cp	r20, r1
    1ae8:	51 05       	cpc	r21, r1
    1aea:	11 f0       	breq	.+4      	; 0x1af0 <osEE_sn_priority_insert+0x44>
    1aec:	3b 85       	ldd	r19, Y+11	; 0x0b
    1aee:	02 c0       	rjmp	.+4      	; 0x1af4 <osEE_sn_priority_insert+0x48>
    1af0:	e8 01       	movw	r28, r16
    1af2:	39 81       	ldd	r19, Y+1	; 0x01
    1af4:	32 17       	cp	r19, r18
    1af6:	28 f0       	brcs	.+10     	; 0x1b02 <osEE_sn_priority_insert+0x56>
    1af8:	df 01       	movw	r26, r30
    1afa:	01 90       	ld	r0, Z+
    1afc:	f0 81       	ld	r31, Z
    1afe:	e0 2d       	mov	r30, r0
    1b00:	ec cf       	rjmp	.-40     	; 0x1ada <osEE_sn_priority_insert+0x2e>
    1b02:	10 97       	sbiw	r26, 0x00	; 0
    1b04:	29 f0       	breq	.+10     	; 0x1b10 <osEE_sn_priority_insert+0x64>
    1b06:	6d 93       	st	X+, r22
    1b08:	7c 93       	st	X, r23
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	05 c0       	rjmp	.+10     	; 0x1b1a <osEE_sn_priority_insert+0x6e>
    1b10:	dc 01       	movw	r26, r24
    1b12:	6d 93       	st	X+, r22
    1b14:	7c 93       	st	X, r23
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	eb 01       	movw	r28, r22
    1b1c:	f9 83       	std	Y+1, r31	; 0x01
    1b1e:	e8 83       	st	Y, r30
    1b20:	df 91       	pop	r29
    1b22:	cf 91       	pop	r28
    1b24:	1f 91       	pop	r17
    1b26:	0f 91       	pop	r16
    1b28:	08 95       	ret

00001b2a <osEE_scheduler_rq_insert>:
    1b2a:	fb 01       	movw	r30, r22
    1b2c:	53 83       	std	Z+3, r21	; 0x03
    1b2e:	42 83       	std	Z+2, r20	; 0x02
    1b30:	41 e0       	ldi	r20, 0x01	; 1
    1b32:	50 e0       	ldi	r21, 0x00	; 0
    1b34:	0c 94 56 0d 	jmp	0x1aac	; 0x1aac <osEE_sn_priority_insert>

00001b38 <osEE_scheduler_core_pop_running>:
    1b38:	ef 92       	push	r14
    1b3a:	ff 92       	push	r15
    1b3c:	0f 93       	push	r16
    1b3e:	1f 93       	push	r17
    1b40:	cf 93       	push	r28
    1b42:	df 93       	push	r29
    1b44:	8c 01       	movw	r16, r24
    1b46:	fc 01       	movw	r30, r24
    1b48:	c0 81       	ld	r28, Z
    1b4a:	d1 81       	ldd	r29, Z+1	; 0x01
    1b4c:	ee 80       	ldd	r14, Y+6	; 0x06
    1b4e:	ff 80       	ldd	r15, Y+7	; 0x07
    1b50:	f7 01       	movw	r30, r14
    1b52:	80 81       	ld	r24, Z
    1b54:	91 81       	ldd	r25, Z+1	; 0x01
    1b56:	9f 83       	std	Y+7, r25	; 0x07
    1b58:	8e 83       	std	Y+6, r24	; 0x06
    1b5a:	c8 01       	movw	r24, r16
    1b5c:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <osEE_scheduler_core_rq_preempt_stk>
    1b60:	ee 81       	ldd	r30, Y+6	; 0x06
    1b62:	ff 81       	ldd	r31, Y+7	; 0x07
    1b64:	89 2b       	or	r24, r25
    1b66:	51 f4       	brne	.+20     	; 0x1b7c <osEE_scheduler_core_pop_running+0x44>
    1b68:	30 97       	sbiw	r30, 0x00	; 0
    1b6a:	19 f0       	breq	.+6      	; 0x1b72 <osEE_scheduler_core_pop_running+0x3a>
    1b6c:	82 81       	ldd	r24, Z+2	; 0x02
    1b6e:	93 81       	ldd	r25, Z+3	; 0x03
    1b70:	03 c0       	rjmp	.+6      	; 0x1b78 <osEE_scheduler_core_pop_running+0x40>
    1b72:	f8 01       	movw	r30, r16
    1b74:	84 81       	ldd	r24, Z+4	; 0x04
    1b76:	95 81       	ldd	r25, Z+5	; 0x05
    1b78:	99 83       	std	Y+1, r25	; 0x01
    1b7a:	88 83       	st	Y, r24
    1b7c:	c7 01       	movw	r24, r14
    1b7e:	df 91       	pop	r29
    1b80:	cf 91       	pop	r28
    1b82:	1f 91       	pop	r17
    1b84:	0f 91       	pop	r16
    1b86:	ff 90       	pop	r15
    1b88:	ef 90       	pop	r14
    1b8a:	08 95       	ret

00001b8c <osEE_task_activated>:
    1b8c:	dc 01       	movw	r26, r24
    1b8e:	14 96       	adiw	r26, 0x04	; 4
    1b90:	ed 91       	ld	r30, X+
    1b92:	fc 91       	ld	r31, X
    1b94:	15 97       	sbiw	r26, 0x05	; 5
    1b96:	90 81       	ld	r25, Z
    1b98:	1d 96       	adiw	r26, 0x0d	; 13
    1b9a:	8c 91       	ld	r24, X
    1b9c:	98 17       	cp	r25, r24
    1b9e:	28 f4       	brcc	.+10     	; 0x1baa <osEE_task_activated+0x1e>
    1ba0:	9f 5f       	subi	r25, 0xFF	; 255
    1ba2:	90 83       	st	Z, r25
    1ba4:	80 e0       	ldi	r24, 0x00	; 0
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	08 95       	ret
    1baa:	84 e0       	ldi	r24, 0x04	; 4
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	08 95       	ret

00001bb0 <osEE_task_end>:
    1bb0:	dc 01       	movw	r26, r24
    1bb2:	14 96       	adiw	r26, 0x04	; 4
    1bb4:	ed 91       	ld	r30, X+
    1bb6:	fc 91       	ld	r31, X
    1bb8:	15 97       	sbiw	r26, 0x05	; 5
    1bba:	1b 96       	adiw	r26, 0x0b	; 11
    1bbc:	8c 91       	ld	r24, X
    1bbe:	81 83       	std	Z+1, r24	; 0x01
    1bc0:	80 81       	ld	r24, Z
    1bc2:	81 50       	subi	r24, 0x01	; 1
    1bc4:	80 83       	st	Z, r24
    1bc6:	81 11       	cpse	r24, r1
    1bc8:	03 c0       	rjmp	.+6      	; 0x1bd0 <osEE_task_end+0x20>
    1bca:	13 82       	std	Z+3, r1	; 0x03
    1bcc:	12 82       	std	Z+2, r1	; 0x02
    1bce:	08 95       	ret
    1bd0:	81 e0       	ldi	r24, 0x01	; 1
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	93 83       	std	Z+3, r25	; 0x03
    1bd6:	82 83       	std	Z+2, r24	; 0x02
    1bd8:	08 95       	ret

00001bda <osEE_activate_isr2>:
    1bda:	20 91 d9 01 	lds	r18, 0x01D9	; 0x8001d9 <osEE_kdb_var+0x2>
    1bde:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <osEE_kdb_var+0x3>
    1be2:	e2 2f       	mov	r30, r18
    1be4:	f9 2f       	mov	r31, r25
    1be6:	e8 0f       	add	r30, r24
    1be8:	f1 1d       	adc	r31, r1
    1bea:	e8 0f       	add	r30, r24
    1bec:	f1 1d       	adc	r31, r1
    1bee:	60 81       	ld	r22, Z
    1bf0:	71 81       	ldd	r23, Z+1	; 0x01
    1bf2:	db 01       	movw	r26, r22
    1bf4:	14 96       	adiw	r26, 0x04	; 4
    1bf6:	ed 91       	ld	r30, X+
    1bf8:	fc 91       	ld	r31, X
    1bfa:	15 97       	sbiw	r26, 0x05	; 5
    1bfc:	80 81       	ld	r24, Z
    1bfe:	8f 5f       	subi	r24, 0xFF	; 255
    1c00:	80 83       	st	Z, r24
    1c02:	40 e0       	ldi	r20, 0x00	; 0
    1c04:	50 e0       	ldi	r21, 0x00	; 0
    1c06:	87 ed       	ldi	r24, 0xD7	; 215
    1c08:	91 e0       	ldi	r25, 0x01	; 1
    1c0a:	0c 94 e8 0e 	jmp	0x1dd0	; 0x1dd0 <osEE_scheduler_task_set_running>

00001c0e <osEE_scheduler_task_activated>:
    1c0e:	cf 93       	push	r28
    1c10:	df 93       	push	r29
    1c12:	db 01       	movw	r26, r22
    1c14:	14 96       	adiw	r26, 0x04	; 4
    1c16:	cd 91       	ld	r28, X+
    1c18:	dc 91       	ld	r29, X
    1c1a:	15 97       	sbiw	r26, 0x05	; 5
    1c1c:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <osEE_cdb_var>
    1c20:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    1c24:	80 81       	ld	r24, Z
    1c26:	91 81       	ldd	r25, Z+1	; 0x01
    1c28:	dc 01       	movw	r26, r24
    1c2a:	14 96       	adiw	r26, 0x04	; 4
    1c2c:	2d 91       	ld	r18, X+
    1c2e:	3c 91       	ld	r19, X
    1c30:	15 97       	sbiw	r26, 0x05	; 5
    1c32:	d9 01       	movw	r26, r18
    1c34:	11 96       	adiw	r26, 0x01	; 1
    1c36:	5c 91       	ld	r21, X
    1c38:	49 81       	ldd	r20, Y+1	; 0x01
    1c3a:	a4 81       	ldd	r26, Z+4	; 0x04
    1c3c:	b5 81       	ldd	r27, Z+5	; 0x05
    1c3e:	54 17       	cp	r21, r20
    1c40:	18 f5       	brcc	.+70     	; 0x1c88 <osEE_scheduler_task_activated+0x7a>
    1c42:	4d 91       	ld	r20, X+
    1c44:	5c 91       	ld	r21, X
    1c46:	11 97       	sbiw	r26, 0x01	; 1
    1c48:	55 83       	std	Z+5, r21	; 0x05
    1c4a:	44 83       	std	Z+4, r20	; 0x04
    1c4c:	42 e0       	ldi	r20, 0x02	; 2
    1c4e:	50 e0       	ldi	r21, 0x00	; 0
    1c50:	e9 01       	movw	r28, r18
    1c52:	5b 83       	std	Y+3, r21	; 0x03
    1c54:	4a 83       	std	Y+2, r20	; 0x02
    1c56:	13 96       	adiw	r26, 0x03	; 3
    1c58:	7c 93       	st	X, r23
    1c5a:	6e 93       	st	-X, r22
    1c5c:	12 97       	sbiw	r26, 0x02	; 2
    1c5e:	26 81       	ldd	r18, Z+6	; 0x06
    1c60:	37 81       	ldd	r19, Z+7	; 0x07
    1c62:	11 96       	adiw	r26, 0x01	; 1
    1c64:	3c 93       	st	X, r19
    1c66:	2e 93       	st	-X, r18
    1c68:	b7 83       	std	Z+7, r27	; 0x07
    1c6a:	a6 83       	std	Z+6, r26	; 0x06
    1c6c:	71 83       	std	Z+1, r23	; 0x01
    1c6e:	60 83       	st	Z, r22
    1c70:	db 01       	movw	r26, r22
    1c72:	14 96       	adiw	r26, 0x04	; 4
    1c74:	ed 91       	ld	r30, X+
    1c76:	fc 91       	ld	r31, X
    1c78:	15 97       	sbiw	r26, 0x05	; 5
    1c7a:	17 82       	std	Z+7, r1	; 0x07
    1c7c:	16 82       	std	Z+6, r1	; 0x06
    1c7e:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <osEE_change_context_from_running>
    1c82:	81 e0       	ldi	r24, 0x01	; 1
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	1a c0       	rjmp	.+52     	; 0x1cbc <osEE_scheduler_task_activated+0xae>
    1c88:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8c:	89 2b       	or	r24, r25
    1c8e:	31 f4       	brne	.+12     	; 0x1c9c <osEE_scheduler_task_activated+0x8e>
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	9b 83       	std	Y+3, r25	; 0x03
    1c96:	8a 83       	std	Y+2, r24	; 0x02
    1c98:	1f 82       	std	Y+7, r1	; 0x07
    1c9a:	1e 82       	std	Y+6, r1	; 0x06
    1c9c:	8d 91       	ld	r24, X+
    1c9e:	9c 91       	ld	r25, X
    1ca0:	11 97       	sbiw	r26, 0x01	; 1
    1ca2:	95 83       	std	Z+5, r25	; 0x05
    1ca4:	84 83       	std	Z+4, r24	; 0x04
    1ca6:	11 96       	adiw	r26, 0x01	; 1
    1ca8:	1c 92       	st	X, r1
    1caa:	1e 92       	st	-X, r1
    1cac:	ab 01       	movw	r20, r22
    1cae:	bd 01       	movw	r22, r26
    1cb0:	cf 01       	movw	r24, r30
    1cb2:	02 96       	adiw	r24, 0x02	; 2
    1cb4:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <osEE_scheduler_rq_insert>
    1cb8:	80 e0       	ldi	r24, 0x00	; 0
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	df 91       	pop	r29
    1cbe:	cf 91       	pop	r28
    1cc0:	08 95       	ret

00001cc2 <osEE_scheduler_task_terminated>:
    1cc2:	af 92       	push	r10
    1cc4:	bf 92       	push	r11
    1cc6:	cf 92       	push	r12
    1cc8:	df 92       	push	r13
    1cca:	ef 92       	push	r14
    1ccc:	ff 92       	push	r15
    1cce:	0f 93       	push	r16
    1cd0:	1f 93       	push	r17
    1cd2:	cf 93       	push	r28
    1cd4:	df 93       	push	r29
    1cd6:	c0 91 dd 01 	lds	r28, 0x01DD	; 0x8001dd <osEE_cdb_var>
    1cda:	d0 91 de 01 	lds	r29, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    1cde:	fe 01       	movw	r30, r28
    1ce0:	e1 90       	ld	r14, Z+
    1ce2:	f1 90       	ld	r15, Z+
    1ce4:	6f 01       	movw	r12, r30
    1ce6:	f7 01       	movw	r30, r14
    1ce8:	04 81       	ldd	r16, Z+4	; 0x04
    1cea:	15 81       	ldd	r17, Z+5	; 0x05
    1cec:	fb 01       	movw	r30, r22
    1cee:	f1 82       	std	Z+1, r15	; 0x01
    1cf0:	e0 82       	st	Z, r14
    1cf2:	f8 01       	movw	r30, r16
    1cf4:	82 81       	ldd	r24, Z+2	; 0x02
    1cf6:	93 81       	ldd	r25, Z+3	; 0x03
    1cf8:	04 97       	sbiw	r24, 0x04	; 4
    1cfa:	d9 f4       	brne	.+54     	; 0x1d32 <osEE_scheduler_task_terminated+0x70>
    1cfc:	b6 01       	movw	r22, r12
    1cfe:	8d ed       	ldi	r24, 0xDD	; 221
    1d00:	91 e0       	ldi	r25, 0x01	; 1
    1d02:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <osEE_scheduler_core_pop_running>
    1d06:	5c 01       	movw	r10, r24
    1d08:	c8 80       	ld	r12, Y
    1d0a:	d9 80       	ldd	r13, Y+1	; 0x01
    1d0c:	ec 14       	cp	r14, r12
    1d0e:	fd 04       	cpc	r15, r13
    1d10:	21 f0       	breq	.+8      	; 0x1d1a <osEE_scheduler_task_terminated+0x58>
    1d12:	c7 01       	movw	r24, r14
    1d14:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <osEE_task_end>
    1d18:	04 c0       	rjmp	.+8      	; 0x1d22 <osEE_scheduler_task_terminated+0x60>
    1d1a:	f8 01       	movw	r30, r16
    1d1c:	90 81       	ld	r25, Z
    1d1e:	91 50       	subi	r25, 0x01	; 1
    1d20:	90 83       	st	Z, r25
    1d22:	8c 81       	ldd	r24, Y+4	; 0x04
    1d24:	9d 81       	ldd	r25, Y+5	; 0x05
    1d26:	f5 01       	movw	r30, r10
    1d28:	91 83       	std	Z+1, r25	; 0x01
    1d2a:	80 83       	st	Z, r24
    1d2c:	bd 82       	std	Y+5, r11	; 0x05
    1d2e:	ac 82       	std	Y+4, r10	; 0x04
    1d30:	28 c0       	rjmp	.+80     	; 0x1d82 <osEE_scheduler_task_terminated+0xc0>
    1d32:	6e 81       	ldd	r22, Y+6	; 0x06
    1d34:	7f 81       	ldd	r23, Y+7	; 0x07
    1d36:	fb 01       	movw	r30, r22
    1d38:	80 81       	ld	r24, Z
    1d3a:	91 81       	ldd	r25, Z+1	; 0x01
    1d3c:	9f 83       	std	Y+7, r25	; 0x07
    1d3e:	8e 83       	std	Y+6, r24	; 0x06
    1d40:	f7 01       	movw	r30, r14
    1d42:	83 85       	ldd	r24, Z+11	; 0x0b
    1d44:	f8 01       	movw	r30, r16
    1d46:	81 83       	std	Z+1, r24	; 0x01
    1d48:	81 e0       	ldi	r24, 0x01	; 1
    1d4a:	90 e0       	ldi	r25, 0x00	; 0
    1d4c:	93 83       	std	Z+3, r25	; 0x03
    1d4e:	82 83       	std	Z+2, r24	; 0x02
    1d50:	80 81       	ld	r24, Z
    1d52:	81 30       	cpi	r24, 0x01	; 1
    1d54:	11 f4       	brne	.+4      	; 0x1d5a <osEE_scheduler_task_terminated+0x98>
    1d56:	17 82       	std	Z+7, r1	; 0x07
    1d58:	16 82       	std	Z+6, r1	; 0x06
    1d5a:	a7 01       	movw	r20, r14
    1d5c:	c6 01       	movw	r24, r12
    1d5e:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <osEE_scheduler_rq_insert>
    1d62:	b6 01       	movw	r22, r12
    1d64:	8d ed       	ldi	r24, 0xDD	; 221
    1d66:	91 e0       	ldi	r25, 0x01	; 1
    1d68:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <osEE_scheduler_core_rq_preempt_stk>
    1d6c:	89 2b       	or	r24, r25
    1d6e:	39 f4       	brne	.+14     	; 0x1d7e <osEE_scheduler_task_terminated+0xbc>
    1d70:	ee 81       	ldd	r30, Y+6	; 0x06
    1d72:	ff 81       	ldd	r31, Y+7	; 0x07
    1d74:	c2 80       	ldd	r12, Z+2	; 0x02
    1d76:	d3 80       	ldd	r13, Z+3	; 0x03
    1d78:	d9 82       	std	Y+1, r13	; 0x01
    1d7a:	c8 82       	st	Y, r12
    1d7c:	02 c0       	rjmp	.+4      	; 0x1d82 <osEE_scheduler_task_terminated+0xc0>
    1d7e:	c8 80       	ld	r12, Y
    1d80:	d9 80       	ldd	r13, Y+1	; 0x01
    1d82:	c6 01       	movw	r24, r12
    1d84:	df 91       	pop	r29
    1d86:	cf 91       	pop	r28
    1d88:	1f 91       	pop	r17
    1d8a:	0f 91       	pop	r16
    1d8c:	ff 90       	pop	r15
    1d8e:	ef 90       	pop	r14
    1d90:	df 90       	pop	r13
    1d92:	cf 90       	pop	r12
    1d94:	bf 90       	pop	r11
    1d96:	af 90       	pop	r10
    1d98:	08 95       	ret

00001d9a <osEE_scheduler_task_preemption_point>:
    1d9a:	cf 93       	push	r28
    1d9c:	df 93       	push	r29
    1d9e:	c0 91 dd 01 	lds	r28, 0x01DD	; 0x8001dd <osEE_cdb_var>
    1da2:	d0 91 de 01 	lds	r29, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    1da6:	be 01       	movw	r22, r28
    1da8:	6e 5f       	subi	r22, 0xFE	; 254
    1daa:	7f 4f       	sbci	r23, 0xFF	; 255
    1dac:	8d ed       	ldi	r24, 0xDD	; 221
    1dae:	91 e0       	ldi	r25, 0x01	; 1
    1db0:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <osEE_scheduler_core_rq_preempt_stk>
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	39 f0       	breq	.+14     	; 0x1dc6 <osEE_scheduler_task_preemption_point+0x2c>
    1db8:	68 81       	ld	r22, Y
    1dba:	79 81       	ldd	r23, Y+1	; 0x01
    1dbc:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <osEE_change_context_from_running>
    1dc0:	81 e0       	ldi	r24, 0x01	; 1
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	02 c0       	rjmp	.+4      	; 0x1dca <osEE_scheduler_task_preemption_point+0x30>
    1dc6:	80 e0       	ldi	r24, 0x00	; 0
    1dc8:	90 e0       	ldi	r25, 0x00	; 0
    1dca:	df 91       	pop	r29
    1dcc:	cf 91       	pop	r28
    1dce:	08 95       	ret

00001dd0 <osEE_scheduler_task_set_running>:
    1dd0:	cf 93       	push	r28
    1dd2:	df 93       	push	r29
    1dd4:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <osEE_cdb_var>
    1dd8:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <osEE_cdb_var+0x1>
    1ddc:	80 81       	ld	r24, Z
    1dde:	91 81       	ldd	r25, Z+1	; 0x01
    1de0:	26 81       	ldd	r18, Z+6	; 0x06
    1de2:	37 81       	ldd	r19, Z+7	; 0x07
    1de4:	ec 01       	movw	r28, r24
    1de6:	ac 81       	ldd	r26, Y+4	; 0x04
    1de8:	bd 81       	ldd	r27, Y+5	; 0x05
    1dea:	12 96       	adiw	r26, 0x02	; 2
    1dec:	cd 91       	ld	r28, X+
    1dee:	dc 91       	ld	r29, X
    1df0:	13 97       	sbiw	r26, 0x03	; 3
    1df2:	24 97       	sbiw	r28, 0x04	; 4
    1df4:	31 f4       	brne	.+12     	; 0x1e02 <osEE_scheduler_task_set_running+0x32>
    1df6:	c2 e0       	ldi	r28, 0x02	; 2
    1df8:	d0 e0       	ldi	r29, 0x00	; 0
    1dfa:	13 96       	adiw	r26, 0x03	; 3
    1dfc:	dc 93       	st	X, r29
    1dfe:	ce 93       	st	-X, r28
    1e00:	12 97       	sbiw	r26, 0x02	; 2
    1e02:	71 83       	std	Z+1, r23	; 0x01
    1e04:	60 83       	st	Z, r22
    1e06:	41 15       	cp	r20, r1
    1e08:	51 05       	cpc	r21, r1
    1e0a:	69 f4       	brne	.+26     	; 0x1e26 <osEE_scheduler_task_set_running+0x56>
    1e0c:	a4 81       	ldd	r26, Z+4	; 0x04
    1e0e:	b5 81       	ldd	r27, Z+5	; 0x05
    1e10:	4d 91       	ld	r20, X+
    1e12:	5c 91       	ld	r21, X
    1e14:	11 97       	sbiw	r26, 0x01	; 1
    1e16:	55 83       	std	Z+5, r21	; 0x05
    1e18:	44 83       	std	Z+4, r20	; 0x04
    1e1a:	11 96       	adiw	r26, 0x01	; 1
    1e1c:	1c 92       	st	X, r1
    1e1e:	1e 92       	st	-X, r1
    1e20:	b7 83       	std	Z+7, r27	; 0x07
    1e22:	a6 83       	std	Z+6, r26	; 0x06
    1e24:	02 c0       	rjmp	.+4      	; 0x1e2a <osEE_scheduler_task_set_running+0x5a>
    1e26:	57 83       	std	Z+7, r21	; 0x07
    1e28:	46 83       	std	Z+6, r20	; 0x06
    1e2a:	06 80       	ldd	r0, Z+6	; 0x06
    1e2c:	f7 81       	ldd	r31, Z+7	; 0x07
    1e2e:	e0 2d       	mov	r30, r0
    1e30:	73 83       	std	Z+3, r23	; 0x03
    1e32:	62 83       	std	Z+2, r22	; 0x02
    1e34:	31 83       	std	Z+1, r19	; 0x01
    1e36:	20 83       	st	Z, r18
    1e38:	df 91       	pop	r29
    1e3a:	cf 91       	pop	r28
    1e3c:	0c 94 20 0f 	jmp	0x1e40	; 0x1e40 <osEE_change_context_from_running>

00001e40 <osEE_change_context_from_running>:
    1e40:	fb 01       	movw	r30, r22
    1e42:	a4 81       	ldd	r26, Z+4	; 0x04
    1e44:	b5 81       	ldd	r27, Z+5	; 0x05
    1e46:	12 96       	adiw	r26, 0x02	; 2
    1e48:	2d 91       	ld	r18, X+
    1e4a:	3c 91       	ld	r19, X
    1e4c:	13 97       	sbiw	r26, 0x03	; 3
    1e4e:	dc 01       	movw	r26, r24
    1e50:	12 96       	adiw	r26, 0x02	; 2
    1e52:	4d 91       	ld	r20, X+
    1e54:	5c 91       	ld	r21, X
    1e56:	13 97       	sbiw	r26, 0x03	; 3
    1e58:	62 81       	ldd	r22, Z+2	; 0x02
    1e5a:	73 81       	ldd	r23, Z+3	; 0x03
    1e5c:	cf 01       	movw	r24, r30
    1e5e:	22 30       	cpi	r18, 0x02	; 2
    1e60:	31 05       	cpc	r19, r1
    1e62:	11 f4       	brne	.+4      	; 0x1e68 <osEE_change_context_from_running+0x28>
    1e64:	0c 94 88 00 	jmp	0x110	; 0x110 <osEE_hal_save_ctx_and_restore_ctx>
    1e68:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>

00001e6c <osEE_change_context_from_task_end>:
    1e6c:	cb 01       	movw	r24, r22
    1e6e:	db 01       	movw	r26, r22
    1e70:	14 96       	adiw	r26, 0x04	; 4
    1e72:	ed 91       	ld	r30, X+
    1e74:	fc 91       	ld	r31, X
    1e76:	15 97       	sbiw	r26, 0x05	; 5
    1e78:	22 81       	ldd	r18, Z+2	; 0x02
    1e7a:	33 81       	ldd	r19, Z+3	; 0x03
    1e7c:	12 96       	adiw	r26, 0x02	; 2
    1e7e:	6d 91       	ld	r22, X+
    1e80:	7c 91       	ld	r23, X
    1e82:	13 97       	sbiw	r26, 0x03	; 3
    1e84:	22 30       	cpi	r18, 0x02	; 2
    1e86:	31 05       	cpc	r19, r1
    1e88:	11 f4       	brne	.+4      	; 0x1e8e <osEE_change_context_from_task_end+0x22>
    1e8a:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    1e8e:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

00001e92 <osEE_idle_task_terminate>:
    1e92:	dc 01       	movw	r26, r24
    1e94:	12 96       	adiw	r26, 0x02	; 2
    1e96:	6d 91       	ld	r22, X+
    1e98:	7c 91       	ld	r23, X
    1e9a:	13 97       	sbiw	r26, 0x03	; 3
    1e9c:	ed 91       	ld	r30, X+
    1e9e:	fc 91       	ld	r31, X
    1ea0:	40 81       	ld	r20, Z
    1ea2:	51 81       	ldd	r21, Z+1	; 0x01
    1ea4:	db 01       	movw	r26, r22
    1ea6:	ed 91       	ld	r30, X+
    1ea8:	fc 91       	ld	r31, X
    1eaa:	22 89       	ldd	r18, Z+18	; 0x12
    1eac:	33 89       	ldd	r19, Z+19	; 0x13
    1eae:	21 15       	cp	r18, r1
    1eb0:	31 05       	cpc	r19, r1
    1eb2:	29 f4       	brne	.+10     	; 0x1ebe <osEE_idle_task_terminate+0x2c>
    1eb4:	db 01       	movw	r26, r22
    1eb6:	ed 93       	st	X+, r30
    1eb8:	fc 93       	st	X, r31
    1eba:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    1ebe:	24 17       	cp	r18, r20
    1ec0:	35 07       	cpc	r19, r21
    1ec2:	c1 f3       	breq	.-16     	; 0x1eb4 <osEE_idle_task_terminate+0x22>
    1ec4:	f9 01       	movw	r30, r18
    1ec6:	f1 cf       	rjmp	.-30     	; 0x1eaa <osEE_idle_task_terminate+0x18>

00001ec8 <osEE_scheduler_task_end>:
    1ec8:	cf 93       	push	r28
    1eca:	df 93       	push	r29
    1ecc:	00 d0       	rcall	.+0      	; 0x1ece <osEE_scheduler_task_end+0x6>
    1ece:	cd b7       	in	r28, 0x3d	; 61
    1ed0:	de b7       	in	r29, 0x3e	; 62
    1ed2:	be 01       	movw	r22, r28
    1ed4:	6f 5f       	subi	r22, 0xFF	; 255
    1ed6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed8:	87 ed       	ldi	r24, 0xD7	; 215
    1eda:	91 e0       	ldi	r25, 0x01	; 1
    1edc:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <osEE_scheduler_task_terminated>
    1ee0:	bc 01       	movw	r22, r24
    1ee2:	89 81       	ldd	r24, Y+1	; 0x01
    1ee4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ee6:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <osEE_change_context_from_task_end>
    1eea:	0f 90       	pop	r0
    1eec:	0f 90       	pop	r0
    1eee:	df 91       	pop	r29
    1ef0:	cf 91       	pop	r28
    1ef2:	08 95       	ret

00001ef4 <__vector_default>:
    1ef4:	f8 94       	cli
    1ef6:	ff cf       	rjmp	.-2      	; 0x1ef6 <__vector_default+0x2>

00001ef8 <osEE_atmega_intvect>:
    1ef8:	e4 ef       	ldi	r30, 0xF4	; 244
    1efa:	08 95       	ret

00001efc <__vector_11>:
    1efc:	8f 93       	push	r24
    1efe:	9f 93       	push	r25
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	0e 94 86 0f 	call	0x1f0c	; 0x1f0c <osEE_avr8_isr2_stub>
    1f06:	9f 91       	pop	r25
    1f08:	8f 91       	pop	r24
    1f0a:	18 95       	reti

00001f0c <osEE_avr8_isr2_stub>:
    1f0c:	1f 92       	push	r1
    1f0e:	0f 92       	push	r0
    1f10:	0f b6       	in	r0, 0x3f	; 63
    1f12:	0f 92       	push	r0
    1f14:	11 24       	eor	r1, r1
    1f16:	2f 93       	push	r18
    1f18:	3f 93       	push	r19
    1f1a:	4f 93       	push	r20
    1f1c:	5f 93       	push	r21
    1f1e:	6f 93       	push	r22
    1f20:	7f 93       	push	r23
    1f22:	af 93       	push	r26
    1f24:	bf 93       	push	r27
    1f26:	ef 93       	push	r30
    1f28:	ff 93       	push	r31
    1f2a:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <osEE_activate_isr2>
    1f2e:	ff 91       	pop	r31
    1f30:	ef 91       	pop	r30
    1f32:	bf 91       	pop	r27
    1f34:	af 91       	pop	r26
    1f36:	7f 91       	pop	r23
    1f38:	6f 91       	pop	r22
    1f3a:	5f 91       	pop	r21
    1f3c:	4f 91       	pop	r20
    1f3e:	3f 91       	pop	r19
    1f40:	2f 91       	pop	r18
    1f42:	0f 90       	pop	r0
    1f44:	0f be       	out	0x3f, r0	; 63
    1f46:	0f 90       	pop	r0
    1f48:	1f 90       	pop	r1
    1f4a:	08 95       	ret

00001f4c <__subsf3>:
    1f4c:	50 58       	subi	r21, 0x80	; 128

00001f4e <__addsf3>:
    1f4e:	bb 27       	eor	r27, r27
    1f50:	aa 27       	eor	r26, r26
    1f52:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__addsf3x>
    1f56:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__fp_round>
    1f5a:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscA>
    1f5e:	38 f0       	brcs	.+14     	; 0x1f6e <__addsf3+0x20>
    1f60:	0e 94 31 11 	call	0x2262	; 0x2262 <__fp_pscB>
    1f64:	20 f0       	brcs	.+8      	; 0x1f6e <__addsf3+0x20>
    1f66:	39 f4       	brne	.+14     	; 0x1f76 <__addsf3+0x28>
    1f68:	9f 3f       	cpi	r25, 0xFF	; 255
    1f6a:	19 f4       	brne	.+6      	; 0x1f72 <__addsf3+0x24>
    1f6c:	26 f4       	brtc	.+8      	; 0x1f76 <__addsf3+0x28>
    1f6e:	0c 94 27 11 	jmp	0x224e	; 0x224e <__fp_nan>
    1f72:	0e f4       	brtc	.+2      	; 0x1f76 <__addsf3+0x28>
    1f74:	e0 95       	com	r30
    1f76:	e7 fb       	bst	r30, 7
    1f78:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__fp_inf>

00001f7c <__addsf3x>:
    1f7c:	e9 2f       	mov	r30, r25
    1f7e:	0e 94 49 11 	call	0x2292	; 0x2292 <__fp_split3>
    1f82:	58 f3       	brcs	.-42     	; 0x1f5a <__addsf3+0xc>
    1f84:	ba 17       	cp	r27, r26
    1f86:	62 07       	cpc	r22, r18
    1f88:	73 07       	cpc	r23, r19
    1f8a:	84 07       	cpc	r24, r20
    1f8c:	95 07       	cpc	r25, r21
    1f8e:	20 f0       	brcs	.+8      	; 0x1f98 <__addsf3x+0x1c>
    1f90:	79 f4       	brne	.+30     	; 0x1fb0 <__addsf3x+0x34>
    1f92:	a6 f5       	brtc	.+104    	; 0x1ffc <__addsf3x+0x80>
    1f94:	0c 94 6b 11 	jmp	0x22d6	; 0x22d6 <__fp_zero>
    1f98:	0e f4       	brtc	.+2      	; 0x1f9c <__addsf3x+0x20>
    1f9a:	e0 95       	com	r30
    1f9c:	0b 2e       	mov	r0, r27
    1f9e:	ba 2f       	mov	r27, r26
    1fa0:	a0 2d       	mov	r26, r0
    1fa2:	0b 01       	movw	r0, r22
    1fa4:	b9 01       	movw	r22, r18
    1fa6:	90 01       	movw	r18, r0
    1fa8:	0c 01       	movw	r0, r24
    1faa:	ca 01       	movw	r24, r20
    1fac:	a0 01       	movw	r20, r0
    1fae:	11 24       	eor	r1, r1
    1fb0:	ff 27       	eor	r31, r31
    1fb2:	59 1b       	sub	r21, r25
    1fb4:	99 f0       	breq	.+38     	; 0x1fdc <__addsf3x+0x60>
    1fb6:	59 3f       	cpi	r21, 0xF9	; 249
    1fb8:	50 f4       	brcc	.+20     	; 0x1fce <__addsf3x+0x52>
    1fba:	50 3e       	cpi	r21, 0xE0	; 224
    1fbc:	68 f1       	brcs	.+90     	; 0x2018 <__addsf3x+0x9c>
    1fbe:	1a 16       	cp	r1, r26
    1fc0:	f0 40       	sbci	r31, 0x00	; 0
    1fc2:	a2 2f       	mov	r26, r18
    1fc4:	23 2f       	mov	r18, r19
    1fc6:	34 2f       	mov	r19, r20
    1fc8:	44 27       	eor	r20, r20
    1fca:	58 5f       	subi	r21, 0xF8	; 248
    1fcc:	f3 cf       	rjmp	.-26     	; 0x1fb4 <__addsf3x+0x38>
    1fce:	46 95       	lsr	r20
    1fd0:	37 95       	ror	r19
    1fd2:	27 95       	ror	r18
    1fd4:	a7 95       	ror	r26
    1fd6:	f0 40       	sbci	r31, 0x00	; 0
    1fd8:	53 95       	inc	r21
    1fda:	c9 f7       	brne	.-14     	; 0x1fce <__addsf3x+0x52>
    1fdc:	7e f4       	brtc	.+30     	; 0x1ffc <__addsf3x+0x80>
    1fde:	1f 16       	cp	r1, r31
    1fe0:	ba 0b       	sbc	r27, r26
    1fe2:	62 0b       	sbc	r22, r18
    1fe4:	73 0b       	sbc	r23, r19
    1fe6:	84 0b       	sbc	r24, r20
    1fe8:	ba f0       	brmi	.+46     	; 0x2018 <__addsf3x+0x9c>
    1fea:	91 50       	subi	r25, 0x01	; 1
    1fec:	a1 f0       	breq	.+40     	; 0x2016 <__addsf3x+0x9a>
    1fee:	ff 0f       	add	r31, r31
    1ff0:	bb 1f       	adc	r27, r27
    1ff2:	66 1f       	adc	r22, r22
    1ff4:	77 1f       	adc	r23, r23
    1ff6:	88 1f       	adc	r24, r24
    1ff8:	c2 f7       	brpl	.-16     	; 0x1fea <__addsf3x+0x6e>
    1ffa:	0e c0       	rjmp	.+28     	; 0x2018 <__addsf3x+0x9c>
    1ffc:	ba 0f       	add	r27, r26
    1ffe:	62 1f       	adc	r22, r18
    2000:	73 1f       	adc	r23, r19
    2002:	84 1f       	adc	r24, r20
    2004:	48 f4       	brcc	.+18     	; 0x2018 <__addsf3x+0x9c>
    2006:	87 95       	ror	r24
    2008:	77 95       	ror	r23
    200a:	67 95       	ror	r22
    200c:	b7 95       	ror	r27
    200e:	f7 95       	ror	r31
    2010:	9e 3f       	cpi	r25, 0xFE	; 254
    2012:	08 f0       	brcs	.+2      	; 0x2016 <__addsf3x+0x9a>
    2014:	b0 cf       	rjmp	.-160    	; 0x1f76 <__addsf3+0x28>
    2016:	93 95       	inc	r25
    2018:	88 0f       	add	r24, r24
    201a:	08 f0       	brcs	.+2      	; 0x201e <__addsf3x+0xa2>
    201c:	99 27       	eor	r25, r25
    201e:	ee 0f       	add	r30, r30
    2020:	97 95       	ror	r25
    2022:	87 95       	ror	r24
    2024:	08 95       	ret

00002026 <__cmpsf2>:
    2026:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__fp_cmp>
    202a:	08 f4       	brcc	.+2      	; 0x202e <__cmpsf2+0x8>
    202c:	81 e0       	ldi	r24, 0x01	; 1
    202e:	08 95       	ret

00002030 <__divsf3>:
    2030:	0e 94 2c 10 	call	0x2058	; 0x2058 <__divsf3x>
    2034:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__fp_round>
    2038:	0e 94 31 11 	call	0x2262	; 0x2262 <__fp_pscB>
    203c:	58 f0       	brcs	.+22     	; 0x2054 <__divsf3+0x24>
    203e:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscA>
    2042:	40 f0       	brcs	.+16     	; 0x2054 <__divsf3+0x24>
    2044:	29 f4       	brne	.+10     	; 0x2050 <__divsf3+0x20>
    2046:	5f 3f       	cpi	r21, 0xFF	; 255
    2048:	29 f0       	breq	.+10     	; 0x2054 <__divsf3+0x24>
    204a:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__fp_inf>
    204e:	51 11       	cpse	r21, r1
    2050:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__fp_szero>
    2054:	0c 94 27 11 	jmp	0x224e	; 0x224e <__fp_nan>

00002058 <__divsf3x>:
    2058:	0e 94 49 11 	call	0x2292	; 0x2292 <__fp_split3>
    205c:	68 f3       	brcs	.-38     	; 0x2038 <__divsf3+0x8>

0000205e <__divsf3_pse>:
    205e:	99 23       	and	r25, r25
    2060:	b1 f3       	breq	.-20     	; 0x204e <__divsf3+0x1e>
    2062:	55 23       	and	r21, r21
    2064:	91 f3       	breq	.-28     	; 0x204a <__divsf3+0x1a>
    2066:	95 1b       	sub	r25, r21
    2068:	55 0b       	sbc	r21, r21
    206a:	bb 27       	eor	r27, r27
    206c:	aa 27       	eor	r26, r26
    206e:	62 17       	cp	r22, r18
    2070:	73 07       	cpc	r23, r19
    2072:	84 07       	cpc	r24, r20
    2074:	38 f0       	brcs	.+14     	; 0x2084 <__divsf3_pse+0x26>
    2076:	9f 5f       	subi	r25, 0xFF	; 255
    2078:	5f 4f       	sbci	r21, 0xFF	; 255
    207a:	22 0f       	add	r18, r18
    207c:	33 1f       	adc	r19, r19
    207e:	44 1f       	adc	r20, r20
    2080:	aa 1f       	adc	r26, r26
    2082:	a9 f3       	breq	.-22     	; 0x206e <__divsf3_pse+0x10>
    2084:	35 d0       	rcall	.+106    	; 0x20f0 <__divsf3_pse+0x92>
    2086:	0e 2e       	mov	r0, r30
    2088:	3a f0       	brmi	.+14     	; 0x2098 <__divsf3_pse+0x3a>
    208a:	e0 e8       	ldi	r30, 0x80	; 128
    208c:	32 d0       	rcall	.+100    	; 0x20f2 <__divsf3_pse+0x94>
    208e:	91 50       	subi	r25, 0x01	; 1
    2090:	50 40       	sbci	r21, 0x00	; 0
    2092:	e6 95       	lsr	r30
    2094:	00 1c       	adc	r0, r0
    2096:	ca f7       	brpl	.-14     	; 0x208a <__divsf3_pse+0x2c>
    2098:	2b d0       	rcall	.+86     	; 0x20f0 <__divsf3_pse+0x92>
    209a:	fe 2f       	mov	r31, r30
    209c:	29 d0       	rcall	.+82     	; 0x20f0 <__divsf3_pse+0x92>
    209e:	66 0f       	add	r22, r22
    20a0:	77 1f       	adc	r23, r23
    20a2:	88 1f       	adc	r24, r24
    20a4:	bb 1f       	adc	r27, r27
    20a6:	26 17       	cp	r18, r22
    20a8:	37 07       	cpc	r19, r23
    20aa:	48 07       	cpc	r20, r24
    20ac:	ab 07       	cpc	r26, r27
    20ae:	b0 e8       	ldi	r27, 0x80	; 128
    20b0:	09 f0       	breq	.+2      	; 0x20b4 <__divsf3_pse+0x56>
    20b2:	bb 0b       	sbc	r27, r27
    20b4:	80 2d       	mov	r24, r0
    20b6:	bf 01       	movw	r22, r30
    20b8:	ff 27       	eor	r31, r31
    20ba:	93 58       	subi	r25, 0x83	; 131
    20bc:	5f 4f       	sbci	r21, 0xFF	; 255
    20be:	3a f0       	brmi	.+14     	; 0x20ce <__divsf3_pse+0x70>
    20c0:	9e 3f       	cpi	r25, 0xFE	; 254
    20c2:	51 05       	cpc	r21, r1
    20c4:	78 f0       	brcs	.+30     	; 0x20e4 <__divsf3_pse+0x86>
    20c6:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__fp_inf>
    20ca:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__fp_szero>
    20ce:	5f 3f       	cpi	r21, 0xFF	; 255
    20d0:	e4 f3       	brlt	.-8      	; 0x20ca <__divsf3_pse+0x6c>
    20d2:	98 3e       	cpi	r25, 0xE8	; 232
    20d4:	d4 f3       	brlt	.-12     	; 0x20ca <__divsf3_pse+0x6c>
    20d6:	86 95       	lsr	r24
    20d8:	77 95       	ror	r23
    20da:	67 95       	ror	r22
    20dc:	b7 95       	ror	r27
    20de:	f7 95       	ror	r31
    20e0:	9f 5f       	subi	r25, 0xFF	; 255
    20e2:	c9 f7       	brne	.-14     	; 0x20d6 <__divsf3_pse+0x78>
    20e4:	88 0f       	add	r24, r24
    20e6:	91 1d       	adc	r25, r1
    20e8:	96 95       	lsr	r25
    20ea:	87 95       	ror	r24
    20ec:	97 f9       	bld	r25, 7
    20ee:	08 95       	ret
    20f0:	e1 e0       	ldi	r30, 0x01	; 1
    20f2:	66 0f       	add	r22, r22
    20f4:	77 1f       	adc	r23, r23
    20f6:	88 1f       	adc	r24, r24
    20f8:	bb 1f       	adc	r27, r27
    20fa:	62 17       	cp	r22, r18
    20fc:	73 07       	cpc	r23, r19
    20fe:	84 07       	cpc	r24, r20
    2100:	ba 07       	cpc	r27, r26
    2102:	20 f0       	brcs	.+8      	; 0x210c <__divsf3_pse+0xae>
    2104:	62 1b       	sub	r22, r18
    2106:	73 0b       	sbc	r23, r19
    2108:	84 0b       	sbc	r24, r20
    210a:	ba 0b       	sbc	r27, r26
    210c:	ee 1f       	adc	r30, r30
    210e:	88 f7       	brcc	.-30     	; 0x20f2 <__divsf3_pse+0x94>
    2110:	e0 95       	com	r30
    2112:	08 95       	ret

00002114 <__fixsfsi>:
    2114:	0e 94 91 10 	call	0x2122	; 0x2122 <__fixunssfsi>
    2118:	68 94       	set
    211a:	b1 11       	cpse	r27, r1
    211c:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__fp_szero>
    2120:	08 95       	ret

00002122 <__fixunssfsi>:
    2122:	0e 94 51 11 	call	0x22a2	; 0x22a2 <__fp_splitA>
    2126:	88 f0       	brcs	.+34     	; 0x214a <__fixunssfsi+0x28>
    2128:	9f 57       	subi	r25, 0x7F	; 127
    212a:	98 f0       	brcs	.+38     	; 0x2152 <__fixunssfsi+0x30>
    212c:	b9 2f       	mov	r27, r25
    212e:	99 27       	eor	r25, r25
    2130:	b7 51       	subi	r27, 0x17	; 23
    2132:	b0 f0       	brcs	.+44     	; 0x2160 <__fixunssfsi+0x3e>
    2134:	e1 f0       	breq	.+56     	; 0x216e <__fixunssfsi+0x4c>
    2136:	66 0f       	add	r22, r22
    2138:	77 1f       	adc	r23, r23
    213a:	88 1f       	adc	r24, r24
    213c:	99 1f       	adc	r25, r25
    213e:	1a f0       	brmi	.+6      	; 0x2146 <__fixunssfsi+0x24>
    2140:	ba 95       	dec	r27
    2142:	c9 f7       	brne	.-14     	; 0x2136 <__fixunssfsi+0x14>
    2144:	14 c0       	rjmp	.+40     	; 0x216e <__fixunssfsi+0x4c>
    2146:	b1 30       	cpi	r27, 0x01	; 1
    2148:	91 f0       	breq	.+36     	; 0x216e <__fixunssfsi+0x4c>
    214a:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__fp_zero>
    214e:	b1 e0       	ldi	r27, 0x01	; 1
    2150:	08 95       	ret
    2152:	0c 94 6b 11 	jmp	0x22d6	; 0x22d6 <__fp_zero>
    2156:	67 2f       	mov	r22, r23
    2158:	78 2f       	mov	r23, r24
    215a:	88 27       	eor	r24, r24
    215c:	b8 5f       	subi	r27, 0xF8	; 248
    215e:	39 f0       	breq	.+14     	; 0x216e <__fixunssfsi+0x4c>
    2160:	b9 3f       	cpi	r27, 0xF9	; 249
    2162:	cc f3       	brlt	.-14     	; 0x2156 <__fixunssfsi+0x34>
    2164:	86 95       	lsr	r24
    2166:	77 95       	ror	r23
    2168:	67 95       	ror	r22
    216a:	b3 95       	inc	r27
    216c:	d9 f7       	brne	.-10     	; 0x2164 <__fixunssfsi+0x42>
    216e:	3e f4       	brtc	.+14     	; 0x217e <__fixunssfsi+0x5c>
    2170:	90 95       	com	r25
    2172:	80 95       	com	r24
    2174:	70 95       	com	r23
    2176:	61 95       	neg	r22
    2178:	7f 4f       	sbci	r23, 0xFF	; 255
    217a:	8f 4f       	sbci	r24, 0xFF	; 255
    217c:	9f 4f       	sbci	r25, 0xFF	; 255
    217e:	08 95       	ret

00002180 <__floatunsisf>:
    2180:	e8 94       	clt
    2182:	09 c0       	rjmp	.+18     	; 0x2196 <__floatsisf+0x12>

00002184 <__floatsisf>:
    2184:	97 fb       	bst	r25, 7
    2186:	3e f4       	brtc	.+14     	; 0x2196 <__floatsisf+0x12>
    2188:	90 95       	com	r25
    218a:	80 95       	com	r24
    218c:	70 95       	com	r23
    218e:	61 95       	neg	r22
    2190:	7f 4f       	sbci	r23, 0xFF	; 255
    2192:	8f 4f       	sbci	r24, 0xFF	; 255
    2194:	9f 4f       	sbci	r25, 0xFF	; 255
    2196:	99 23       	and	r25, r25
    2198:	a9 f0       	breq	.+42     	; 0x21c4 <__floatsisf+0x40>
    219a:	f9 2f       	mov	r31, r25
    219c:	96 e9       	ldi	r25, 0x96	; 150
    219e:	bb 27       	eor	r27, r27
    21a0:	93 95       	inc	r25
    21a2:	f6 95       	lsr	r31
    21a4:	87 95       	ror	r24
    21a6:	77 95       	ror	r23
    21a8:	67 95       	ror	r22
    21aa:	b7 95       	ror	r27
    21ac:	f1 11       	cpse	r31, r1
    21ae:	f8 cf       	rjmp	.-16     	; 0x21a0 <__floatsisf+0x1c>
    21b0:	fa f4       	brpl	.+62     	; 0x21f0 <__floatsisf+0x6c>
    21b2:	bb 0f       	add	r27, r27
    21b4:	11 f4       	brne	.+4      	; 0x21ba <__floatsisf+0x36>
    21b6:	60 ff       	sbrs	r22, 0
    21b8:	1b c0       	rjmp	.+54     	; 0x21f0 <__floatsisf+0x6c>
    21ba:	6f 5f       	subi	r22, 0xFF	; 255
    21bc:	7f 4f       	sbci	r23, 0xFF	; 255
    21be:	8f 4f       	sbci	r24, 0xFF	; 255
    21c0:	9f 4f       	sbci	r25, 0xFF	; 255
    21c2:	16 c0       	rjmp	.+44     	; 0x21f0 <__floatsisf+0x6c>
    21c4:	88 23       	and	r24, r24
    21c6:	11 f0       	breq	.+4      	; 0x21cc <__floatsisf+0x48>
    21c8:	96 e9       	ldi	r25, 0x96	; 150
    21ca:	11 c0       	rjmp	.+34     	; 0x21ee <__floatsisf+0x6a>
    21cc:	77 23       	and	r23, r23
    21ce:	21 f0       	breq	.+8      	; 0x21d8 <__floatsisf+0x54>
    21d0:	9e e8       	ldi	r25, 0x8E	; 142
    21d2:	87 2f       	mov	r24, r23
    21d4:	76 2f       	mov	r23, r22
    21d6:	05 c0       	rjmp	.+10     	; 0x21e2 <__floatsisf+0x5e>
    21d8:	66 23       	and	r22, r22
    21da:	71 f0       	breq	.+28     	; 0x21f8 <__floatsisf+0x74>
    21dc:	96 e8       	ldi	r25, 0x86	; 134
    21de:	86 2f       	mov	r24, r22
    21e0:	70 e0       	ldi	r23, 0x00	; 0
    21e2:	60 e0       	ldi	r22, 0x00	; 0
    21e4:	2a f0       	brmi	.+10     	; 0x21f0 <__floatsisf+0x6c>
    21e6:	9a 95       	dec	r25
    21e8:	66 0f       	add	r22, r22
    21ea:	77 1f       	adc	r23, r23
    21ec:	88 1f       	adc	r24, r24
    21ee:	da f7       	brpl	.-10     	; 0x21e6 <__floatsisf+0x62>
    21f0:	88 0f       	add	r24, r24
    21f2:	96 95       	lsr	r25
    21f4:	87 95       	ror	r24
    21f6:	97 f9       	bld	r25, 7
    21f8:	08 95       	ret

000021fa <__fp_cmp>:
    21fa:	99 0f       	add	r25, r25
    21fc:	00 08       	sbc	r0, r0
    21fe:	55 0f       	add	r21, r21
    2200:	aa 0b       	sbc	r26, r26
    2202:	e0 e8       	ldi	r30, 0x80	; 128
    2204:	fe ef       	ldi	r31, 0xFE	; 254
    2206:	16 16       	cp	r1, r22
    2208:	17 06       	cpc	r1, r23
    220a:	e8 07       	cpc	r30, r24
    220c:	f9 07       	cpc	r31, r25
    220e:	c0 f0       	brcs	.+48     	; 0x2240 <__fp_cmp+0x46>
    2210:	12 16       	cp	r1, r18
    2212:	13 06       	cpc	r1, r19
    2214:	e4 07       	cpc	r30, r20
    2216:	f5 07       	cpc	r31, r21
    2218:	98 f0       	brcs	.+38     	; 0x2240 <__fp_cmp+0x46>
    221a:	62 1b       	sub	r22, r18
    221c:	73 0b       	sbc	r23, r19
    221e:	84 0b       	sbc	r24, r20
    2220:	95 0b       	sbc	r25, r21
    2222:	39 f4       	brne	.+14     	; 0x2232 <__fp_cmp+0x38>
    2224:	0a 26       	eor	r0, r26
    2226:	61 f0       	breq	.+24     	; 0x2240 <__fp_cmp+0x46>
    2228:	23 2b       	or	r18, r19
    222a:	24 2b       	or	r18, r20
    222c:	25 2b       	or	r18, r21
    222e:	21 f4       	brne	.+8      	; 0x2238 <__fp_cmp+0x3e>
    2230:	08 95       	ret
    2232:	0a 26       	eor	r0, r26
    2234:	09 f4       	brne	.+2      	; 0x2238 <__fp_cmp+0x3e>
    2236:	a1 40       	sbci	r26, 0x01	; 1
    2238:	a6 95       	lsr	r26
    223a:	8f ef       	ldi	r24, 0xFF	; 255
    223c:	81 1d       	adc	r24, r1
    223e:	81 1d       	adc	r24, r1
    2240:	08 95       	ret

00002242 <__fp_inf>:
    2242:	97 f9       	bld	r25, 7
    2244:	9f 67       	ori	r25, 0x7F	; 127
    2246:	80 e8       	ldi	r24, 0x80	; 128
    2248:	70 e0       	ldi	r23, 0x00	; 0
    224a:	60 e0       	ldi	r22, 0x00	; 0
    224c:	08 95       	ret

0000224e <__fp_nan>:
    224e:	9f ef       	ldi	r25, 0xFF	; 255
    2250:	80 ec       	ldi	r24, 0xC0	; 192
    2252:	08 95       	ret

00002254 <__fp_pscA>:
    2254:	00 24       	eor	r0, r0
    2256:	0a 94       	dec	r0
    2258:	16 16       	cp	r1, r22
    225a:	17 06       	cpc	r1, r23
    225c:	18 06       	cpc	r1, r24
    225e:	09 06       	cpc	r0, r25
    2260:	08 95       	ret

00002262 <__fp_pscB>:
    2262:	00 24       	eor	r0, r0
    2264:	0a 94       	dec	r0
    2266:	12 16       	cp	r1, r18
    2268:	13 06       	cpc	r1, r19
    226a:	14 06       	cpc	r1, r20
    226c:	05 06       	cpc	r0, r21
    226e:	08 95       	ret

00002270 <__fp_round>:
    2270:	09 2e       	mov	r0, r25
    2272:	03 94       	inc	r0
    2274:	00 0c       	add	r0, r0
    2276:	11 f4       	brne	.+4      	; 0x227c <__fp_round+0xc>
    2278:	88 23       	and	r24, r24
    227a:	52 f0       	brmi	.+20     	; 0x2290 <__fp_round+0x20>
    227c:	bb 0f       	add	r27, r27
    227e:	40 f4       	brcc	.+16     	; 0x2290 <__fp_round+0x20>
    2280:	bf 2b       	or	r27, r31
    2282:	11 f4       	brne	.+4      	; 0x2288 <__fp_round+0x18>
    2284:	60 ff       	sbrs	r22, 0
    2286:	04 c0       	rjmp	.+8      	; 0x2290 <__fp_round+0x20>
    2288:	6f 5f       	subi	r22, 0xFF	; 255
    228a:	7f 4f       	sbci	r23, 0xFF	; 255
    228c:	8f 4f       	sbci	r24, 0xFF	; 255
    228e:	9f 4f       	sbci	r25, 0xFF	; 255
    2290:	08 95       	ret

00002292 <__fp_split3>:
    2292:	57 fd       	sbrc	r21, 7
    2294:	90 58       	subi	r25, 0x80	; 128
    2296:	44 0f       	add	r20, r20
    2298:	55 1f       	adc	r21, r21
    229a:	59 f0       	breq	.+22     	; 0x22b2 <__fp_splitA+0x10>
    229c:	5f 3f       	cpi	r21, 0xFF	; 255
    229e:	71 f0       	breq	.+28     	; 0x22bc <__fp_splitA+0x1a>
    22a0:	47 95       	ror	r20

000022a2 <__fp_splitA>:
    22a2:	88 0f       	add	r24, r24
    22a4:	97 fb       	bst	r25, 7
    22a6:	99 1f       	adc	r25, r25
    22a8:	61 f0       	breq	.+24     	; 0x22c2 <__fp_splitA+0x20>
    22aa:	9f 3f       	cpi	r25, 0xFF	; 255
    22ac:	79 f0       	breq	.+30     	; 0x22cc <__fp_splitA+0x2a>
    22ae:	87 95       	ror	r24
    22b0:	08 95       	ret
    22b2:	12 16       	cp	r1, r18
    22b4:	13 06       	cpc	r1, r19
    22b6:	14 06       	cpc	r1, r20
    22b8:	55 1f       	adc	r21, r21
    22ba:	f2 cf       	rjmp	.-28     	; 0x22a0 <__fp_split3+0xe>
    22bc:	46 95       	lsr	r20
    22be:	f1 df       	rcall	.-30     	; 0x22a2 <__fp_splitA>
    22c0:	08 c0       	rjmp	.+16     	; 0x22d2 <__fp_splitA+0x30>
    22c2:	16 16       	cp	r1, r22
    22c4:	17 06       	cpc	r1, r23
    22c6:	18 06       	cpc	r1, r24
    22c8:	99 1f       	adc	r25, r25
    22ca:	f1 cf       	rjmp	.-30     	; 0x22ae <__fp_splitA+0xc>
    22cc:	86 95       	lsr	r24
    22ce:	71 05       	cpc	r23, r1
    22d0:	61 05       	cpc	r22, r1
    22d2:	08 94       	sec
    22d4:	08 95       	ret

000022d6 <__fp_zero>:
    22d6:	e8 94       	clt

000022d8 <__fp_szero>:
    22d8:	bb 27       	eor	r27, r27
    22da:	66 27       	eor	r22, r22
    22dc:	77 27       	eor	r23, r23
    22de:	cb 01       	movw	r24, r22
    22e0:	97 f9       	bld	r25, 7
    22e2:	08 95       	ret

000022e4 <__gesf2>:
    22e4:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__fp_cmp>
    22e8:	08 f4       	brcc	.+2      	; 0x22ec <__gesf2+0x8>
    22ea:	8f ef       	ldi	r24, 0xFF	; 255
    22ec:	08 95       	ret

000022ee <__mulsf3>:
    22ee:	0e 94 8a 11 	call	0x2314	; 0x2314 <__mulsf3x>
    22f2:	0c 94 38 11 	jmp	0x2270	; 0x2270 <__fp_round>
    22f6:	0e 94 2a 11 	call	0x2254	; 0x2254 <__fp_pscA>
    22fa:	38 f0       	brcs	.+14     	; 0x230a <__mulsf3+0x1c>
    22fc:	0e 94 31 11 	call	0x2262	; 0x2262 <__fp_pscB>
    2300:	20 f0       	brcs	.+8      	; 0x230a <__mulsf3+0x1c>
    2302:	95 23       	and	r25, r21
    2304:	11 f0       	breq	.+4      	; 0x230a <__mulsf3+0x1c>
    2306:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__fp_inf>
    230a:	0c 94 27 11 	jmp	0x224e	; 0x224e <__fp_nan>
    230e:	11 24       	eor	r1, r1
    2310:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__fp_szero>

00002314 <__mulsf3x>:
    2314:	0e 94 49 11 	call	0x2292	; 0x2292 <__fp_split3>
    2318:	70 f3       	brcs	.-36     	; 0x22f6 <__mulsf3+0x8>

0000231a <__mulsf3_pse>:
    231a:	95 9f       	mul	r25, r21
    231c:	c1 f3       	breq	.-16     	; 0x230e <__mulsf3+0x20>
    231e:	95 0f       	add	r25, r21
    2320:	50 e0       	ldi	r21, 0x00	; 0
    2322:	55 1f       	adc	r21, r21
    2324:	62 9f       	mul	r22, r18
    2326:	f0 01       	movw	r30, r0
    2328:	72 9f       	mul	r23, r18
    232a:	bb 27       	eor	r27, r27
    232c:	f0 0d       	add	r31, r0
    232e:	b1 1d       	adc	r27, r1
    2330:	63 9f       	mul	r22, r19
    2332:	aa 27       	eor	r26, r26
    2334:	f0 0d       	add	r31, r0
    2336:	b1 1d       	adc	r27, r1
    2338:	aa 1f       	adc	r26, r26
    233a:	64 9f       	mul	r22, r20
    233c:	66 27       	eor	r22, r22
    233e:	b0 0d       	add	r27, r0
    2340:	a1 1d       	adc	r26, r1
    2342:	66 1f       	adc	r22, r22
    2344:	82 9f       	mul	r24, r18
    2346:	22 27       	eor	r18, r18
    2348:	b0 0d       	add	r27, r0
    234a:	a1 1d       	adc	r26, r1
    234c:	62 1f       	adc	r22, r18
    234e:	73 9f       	mul	r23, r19
    2350:	b0 0d       	add	r27, r0
    2352:	a1 1d       	adc	r26, r1
    2354:	62 1f       	adc	r22, r18
    2356:	83 9f       	mul	r24, r19
    2358:	a0 0d       	add	r26, r0
    235a:	61 1d       	adc	r22, r1
    235c:	22 1f       	adc	r18, r18
    235e:	74 9f       	mul	r23, r20
    2360:	33 27       	eor	r19, r19
    2362:	a0 0d       	add	r26, r0
    2364:	61 1d       	adc	r22, r1
    2366:	23 1f       	adc	r18, r19
    2368:	84 9f       	mul	r24, r20
    236a:	60 0d       	add	r22, r0
    236c:	21 1d       	adc	r18, r1
    236e:	82 2f       	mov	r24, r18
    2370:	76 2f       	mov	r23, r22
    2372:	6a 2f       	mov	r22, r26
    2374:	11 24       	eor	r1, r1
    2376:	9f 57       	subi	r25, 0x7F	; 127
    2378:	50 40       	sbci	r21, 0x00	; 0
    237a:	9a f0       	brmi	.+38     	; 0x23a2 <__mulsf3_pse+0x88>
    237c:	f1 f0       	breq	.+60     	; 0x23ba <__mulsf3_pse+0xa0>
    237e:	88 23       	and	r24, r24
    2380:	4a f0       	brmi	.+18     	; 0x2394 <__mulsf3_pse+0x7a>
    2382:	ee 0f       	add	r30, r30
    2384:	ff 1f       	adc	r31, r31
    2386:	bb 1f       	adc	r27, r27
    2388:	66 1f       	adc	r22, r22
    238a:	77 1f       	adc	r23, r23
    238c:	88 1f       	adc	r24, r24
    238e:	91 50       	subi	r25, 0x01	; 1
    2390:	50 40       	sbci	r21, 0x00	; 0
    2392:	a9 f7       	brne	.-22     	; 0x237e <__mulsf3_pse+0x64>
    2394:	9e 3f       	cpi	r25, 0xFE	; 254
    2396:	51 05       	cpc	r21, r1
    2398:	80 f0       	brcs	.+32     	; 0x23ba <__mulsf3_pse+0xa0>
    239a:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__fp_inf>
    239e:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__fp_szero>
    23a2:	5f 3f       	cpi	r21, 0xFF	; 255
    23a4:	e4 f3       	brlt	.-8      	; 0x239e <__mulsf3_pse+0x84>
    23a6:	98 3e       	cpi	r25, 0xE8	; 232
    23a8:	d4 f3       	brlt	.-12     	; 0x239e <__mulsf3_pse+0x84>
    23aa:	86 95       	lsr	r24
    23ac:	77 95       	ror	r23
    23ae:	67 95       	ror	r22
    23b0:	b7 95       	ror	r27
    23b2:	f7 95       	ror	r31
    23b4:	e7 95       	ror	r30
    23b6:	9f 5f       	subi	r25, 0xFF	; 255
    23b8:	c1 f7       	brne	.-16     	; 0x23aa <__mulsf3_pse+0x90>
    23ba:	fe 2b       	or	r31, r30
    23bc:	88 0f       	add	r24, r24
    23be:	91 1d       	adc	r25, r1
    23c0:	96 95       	lsr	r25
    23c2:	87 95       	ror	r24
    23c4:	97 f9       	bld	r25, 7
    23c6:	08 95       	ret

000023c8 <__udivmodsi4>:
    23c8:	a1 e2       	ldi	r26, 0x21	; 33
    23ca:	1a 2e       	mov	r1, r26
    23cc:	aa 1b       	sub	r26, r26
    23ce:	bb 1b       	sub	r27, r27
    23d0:	fd 01       	movw	r30, r26
    23d2:	0d c0       	rjmp	.+26     	; 0x23ee <__udivmodsi4_ep>

000023d4 <__udivmodsi4_loop>:
    23d4:	aa 1f       	adc	r26, r26
    23d6:	bb 1f       	adc	r27, r27
    23d8:	ee 1f       	adc	r30, r30
    23da:	ff 1f       	adc	r31, r31
    23dc:	a2 17       	cp	r26, r18
    23de:	b3 07       	cpc	r27, r19
    23e0:	e4 07       	cpc	r30, r20
    23e2:	f5 07       	cpc	r31, r21
    23e4:	20 f0       	brcs	.+8      	; 0x23ee <__udivmodsi4_ep>
    23e6:	a2 1b       	sub	r26, r18
    23e8:	b3 0b       	sbc	r27, r19
    23ea:	e4 0b       	sbc	r30, r20
    23ec:	f5 0b       	sbc	r31, r21

000023ee <__udivmodsi4_ep>:
    23ee:	66 1f       	adc	r22, r22
    23f0:	77 1f       	adc	r23, r23
    23f2:	88 1f       	adc	r24, r24
    23f4:	99 1f       	adc	r25, r25
    23f6:	1a 94       	dec	r1
    23f8:	69 f7       	brne	.-38     	; 0x23d4 <__udivmodsi4_loop>
    23fa:	60 95       	com	r22
    23fc:	70 95       	com	r23
    23fe:	80 95       	com	r24
    2400:	90 95       	com	r25
    2402:	9b 01       	movw	r18, r22
    2404:	ac 01       	movw	r20, r24
    2406:	bd 01       	movw	r22, r26
    2408:	cf 01       	movw	r24, r30
    240a:	08 95       	ret

0000240c <__tablejump2__>:
    240c:	ee 0f       	add	r30, r30
    240e:	ff 1f       	adc	r31, r31
    2410:	05 90       	lpm	r0, Z+
    2412:	f4 91       	lpm	r31, Z
    2414:	e0 2d       	mov	r30, r0
    2416:	09 94       	ijmp

00002418 <snprintf>:
    2418:	ae e0       	ldi	r26, 0x0E	; 14
    241a:	b0 e0       	ldi	r27, 0x00	; 0
    241c:	e2 e1       	ldi	r30, 0x12	; 18
    241e:	f2 e1       	ldi	r31, 0x12	; 18
    2420:	0c 94 c8 14 	jmp	0x2990	; 0x2990 <__prologue_saves__+0x1c>
    2424:	0d 89       	ldd	r16, Y+21	; 0x15
    2426:	1e 89       	ldd	r17, Y+22	; 0x16
    2428:	8f 89       	ldd	r24, Y+23	; 0x17
    242a:	98 8d       	ldd	r25, Y+24	; 0x18
    242c:	26 e0       	ldi	r18, 0x06	; 6
    242e:	2c 83       	std	Y+4, r18	; 0x04
    2430:	1a 83       	std	Y+2, r17	; 0x02
    2432:	09 83       	std	Y+1, r16	; 0x01
    2434:	97 ff       	sbrs	r25, 7
    2436:	02 c0       	rjmp	.+4      	; 0x243c <snprintf+0x24>
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	90 e8       	ldi	r25, 0x80	; 128
    243c:	01 97       	sbiw	r24, 0x01	; 1
    243e:	9e 83       	std	Y+6, r25	; 0x06
    2440:	8d 83       	std	Y+5, r24	; 0x05
    2442:	ae 01       	movw	r20, r28
    2444:	45 5e       	subi	r20, 0xE5	; 229
    2446:	5f 4f       	sbci	r21, 0xFF	; 255
    2448:	69 8d       	ldd	r22, Y+25	; 0x19
    244a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    244c:	ce 01       	movw	r24, r28
    244e:	01 96       	adiw	r24, 0x01	; 1
    2450:	0e 94 3c 12 	call	0x2478	; 0x2478 <vfprintf>
    2454:	4d 81       	ldd	r20, Y+5	; 0x05
    2456:	5e 81       	ldd	r21, Y+6	; 0x06
    2458:	57 fd       	sbrc	r21, 7
    245a:	0a c0       	rjmp	.+20     	; 0x2470 <snprintf+0x58>
    245c:	2f 81       	ldd	r18, Y+7	; 0x07
    245e:	38 85       	ldd	r19, Y+8	; 0x08
    2460:	42 17       	cp	r20, r18
    2462:	53 07       	cpc	r21, r19
    2464:	0c f4       	brge	.+2      	; 0x2468 <snprintf+0x50>
    2466:	9a 01       	movw	r18, r20
    2468:	f8 01       	movw	r30, r16
    246a:	e2 0f       	add	r30, r18
    246c:	f3 1f       	adc	r31, r19
    246e:	10 82       	st	Z, r1
    2470:	2e 96       	adiw	r28, 0x0e	; 14
    2472:	e4 e0       	ldi	r30, 0x04	; 4
    2474:	0c 94 e4 14 	jmp	0x29c8	; 0x29c8 <__epilogue_restores__+0x1c>

00002478 <vfprintf>:
    2478:	ac e0       	ldi	r26, 0x0C	; 12
    247a:	b0 e0       	ldi	r27, 0x00	; 0
    247c:	e2 e4       	ldi	r30, 0x42	; 66
    247e:	f2 e1       	ldi	r31, 0x12	; 18
    2480:	0c 94 ba 14 	jmp	0x2974	; 0x2974 <__prologue_saves__>
    2484:	7c 01       	movw	r14, r24
    2486:	6b 01       	movw	r12, r22
    2488:	8a 01       	movw	r16, r20
    248a:	fc 01       	movw	r30, r24
    248c:	17 82       	std	Z+7, r1	; 0x07
    248e:	16 82       	std	Z+6, r1	; 0x06
    2490:	83 81       	ldd	r24, Z+3	; 0x03
    2492:	81 ff       	sbrs	r24, 1
    2494:	bd c1       	rjmp	.+890    	; 0x2810 <vfprintf+0x398>
    2496:	ce 01       	movw	r24, r28
    2498:	01 96       	adiw	r24, 0x01	; 1
    249a:	4c 01       	movw	r8, r24
    249c:	f7 01       	movw	r30, r14
    249e:	93 81       	ldd	r25, Z+3	; 0x03
    24a0:	f6 01       	movw	r30, r12
    24a2:	93 fd       	sbrc	r25, 3
    24a4:	85 91       	lpm	r24, Z+
    24a6:	93 ff       	sbrs	r25, 3
    24a8:	81 91       	ld	r24, Z+
    24aa:	6f 01       	movw	r12, r30
    24ac:	88 23       	and	r24, r24
    24ae:	09 f4       	brne	.+2      	; 0x24b2 <vfprintf+0x3a>
    24b0:	ab c1       	rjmp	.+854    	; 0x2808 <vfprintf+0x390>
    24b2:	85 32       	cpi	r24, 0x25	; 37
    24b4:	39 f4       	brne	.+14     	; 0x24c4 <vfprintf+0x4c>
    24b6:	93 fd       	sbrc	r25, 3
    24b8:	85 91       	lpm	r24, Z+
    24ba:	93 ff       	sbrs	r25, 3
    24bc:	81 91       	ld	r24, Z+
    24be:	6f 01       	movw	r12, r30
    24c0:	85 32       	cpi	r24, 0x25	; 37
    24c2:	29 f4       	brne	.+10     	; 0x24ce <vfprintf+0x56>
    24c4:	b7 01       	movw	r22, r14
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    24cc:	e7 cf       	rjmp	.-50     	; 0x249c <vfprintf+0x24>
    24ce:	51 2c       	mov	r5, r1
    24d0:	31 2c       	mov	r3, r1
    24d2:	20 e0       	ldi	r18, 0x00	; 0
    24d4:	20 32       	cpi	r18, 0x20	; 32
    24d6:	a0 f4       	brcc	.+40     	; 0x2500 <vfprintf+0x88>
    24d8:	8b 32       	cpi	r24, 0x2B	; 43
    24da:	69 f0       	breq	.+26     	; 0x24f6 <vfprintf+0x7e>
    24dc:	30 f4       	brcc	.+12     	; 0x24ea <vfprintf+0x72>
    24de:	80 32       	cpi	r24, 0x20	; 32
    24e0:	59 f0       	breq	.+22     	; 0x24f8 <vfprintf+0x80>
    24e2:	83 32       	cpi	r24, 0x23	; 35
    24e4:	69 f4       	brne	.+26     	; 0x2500 <vfprintf+0x88>
    24e6:	20 61       	ori	r18, 0x10	; 16
    24e8:	2c c0       	rjmp	.+88     	; 0x2542 <vfprintf+0xca>
    24ea:	8d 32       	cpi	r24, 0x2D	; 45
    24ec:	39 f0       	breq	.+14     	; 0x24fc <vfprintf+0x84>
    24ee:	80 33       	cpi	r24, 0x30	; 48
    24f0:	39 f4       	brne	.+14     	; 0x2500 <vfprintf+0x88>
    24f2:	21 60       	ori	r18, 0x01	; 1
    24f4:	26 c0       	rjmp	.+76     	; 0x2542 <vfprintf+0xca>
    24f6:	22 60       	ori	r18, 0x02	; 2
    24f8:	24 60       	ori	r18, 0x04	; 4
    24fa:	23 c0       	rjmp	.+70     	; 0x2542 <vfprintf+0xca>
    24fc:	28 60       	ori	r18, 0x08	; 8
    24fe:	21 c0       	rjmp	.+66     	; 0x2542 <vfprintf+0xca>
    2500:	27 fd       	sbrc	r18, 7
    2502:	27 c0       	rjmp	.+78     	; 0x2552 <vfprintf+0xda>
    2504:	30 ed       	ldi	r19, 0xD0	; 208
    2506:	38 0f       	add	r19, r24
    2508:	3a 30       	cpi	r19, 0x0A	; 10
    250a:	78 f4       	brcc	.+30     	; 0x252a <vfprintf+0xb2>
    250c:	26 ff       	sbrs	r18, 6
    250e:	06 c0       	rjmp	.+12     	; 0x251c <vfprintf+0xa4>
    2510:	fa e0       	ldi	r31, 0x0A	; 10
    2512:	5f 9e       	mul	r5, r31
    2514:	30 0d       	add	r19, r0
    2516:	11 24       	eor	r1, r1
    2518:	53 2e       	mov	r5, r19
    251a:	13 c0       	rjmp	.+38     	; 0x2542 <vfprintf+0xca>
    251c:	8a e0       	ldi	r24, 0x0A	; 10
    251e:	38 9e       	mul	r3, r24
    2520:	30 0d       	add	r19, r0
    2522:	11 24       	eor	r1, r1
    2524:	33 2e       	mov	r3, r19
    2526:	20 62       	ori	r18, 0x20	; 32
    2528:	0c c0       	rjmp	.+24     	; 0x2542 <vfprintf+0xca>
    252a:	8e 32       	cpi	r24, 0x2E	; 46
    252c:	21 f4       	brne	.+8      	; 0x2536 <vfprintf+0xbe>
    252e:	26 fd       	sbrc	r18, 6
    2530:	6b c1       	rjmp	.+726    	; 0x2808 <vfprintf+0x390>
    2532:	20 64       	ori	r18, 0x40	; 64
    2534:	06 c0       	rjmp	.+12     	; 0x2542 <vfprintf+0xca>
    2536:	8c 36       	cpi	r24, 0x6C	; 108
    2538:	11 f4       	brne	.+4      	; 0x253e <vfprintf+0xc6>
    253a:	20 68       	ori	r18, 0x80	; 128
    253c:	02 c0       	rjmp	.+4      	; 0x2542 <vfprintf+0xca>
    253e:	88 36       	cpi	r24, 0x68	; 104
    2540:	41 f4       	brne	.+16     	; 0x2552 <vfprintf+0xda>
    2542:	f6 01       	movw	r30, r12
    2544:	93 fd       	sbrc	r25, 3
    2546:	85 91       	lpm	r24, Z+
    2548:	93 ff       	sbrs	r25, 3
    254a:	81 91       	ld	r24, Z+
    254c:	6f 01       	movw	r12, r30
    254e:	81 11       	cpse	r24, r1
    2550:	c1 cf       	rjmp	.-126    	; 0x24d4 <vfprintf+0x5c>
    2552:	98 2f       	mov	r25, r24
    2554:	9f 7d       	andi	r25, 0xDF	; 223
    2556:	95 54       	subi	r25, 0x45	; 69
    2558:	93 30       	cpi	r25, 0x03	; 3
    255a:	28 f4       	brcc	.+10     	; 0x2566 <vfprintf+0xee>
    255c:	0c 5f       	subi	r16, 0xFC	; 252
    255e:	1f 4f       	sbci	r17, 0xFF	; 255
    2560:	ff e3       	ldi	r31, 0x3F	; 63
    2562:	f9 83       	std	Y+1, r31	; 0x01
    2564:	0d c0       	rjmp	.+26     	; 0x2580 <vfprintf+0x108>
    2566:	83 36       	cpi	r24, 0x63	; 99
    2568:	31 f0       	breq	.+12     	; 0x2576 <vfprintf+0xfe>
    256a:	83 37       	cpi	r24, 0x73	; 115
    256c:	71 f0       	breq	.+28     	; 0x258a <vfprintf+0x112>
    256e:	83 35       	cpi	r24, 0x53	; 83
    2570:	09 f0       	breq	.+2      	; 0x2574 <vfprintf+0xfc>
    2572:	5b c0       	rjmp	.+182    	; 0x262a <vfprintf+0x1b2>
    2574:	22 c0       	rjmp	.+68     	; 0x25ba <vfprintf+0x142>
    2576:	f8 01       	movw	r30, r16
    2578:	80 81       	ld	r24, Z
    257a:	89 83       	std	Y+1, r24	; 0x01
    257c:	0e 5f       	subi	r16, 0xFE	; 254
    257e:	1f 4f       	sbci	r17, 0xFF	; 255
    2580:	44 24       	eor	r4, r4
    2582:	43 94       	inc	r4
    2584:	51 2c       	mov	r5, r1
    2586:	54 01       	movw	r10, r8
    2588:	15 c0       	rjmp	.+42     	; 0x25b4 <vfprintf+0x13c>
    258a:	38 01       	movw	r6, r16
    258c:	f2 e0       	ldi	r31, 0x02	; 2
    258e:	6f 0e       	add	r6, r31
    2590:	71 1c       	adc	r7, r1
    2592:	f8 01       	movw	r30, r16
    2594:	a0 80       	ld	r10, Z
    2596:	b1 80       	ldd	r11, Z+1	; 0x01
    2598:	26 ff       	sbrs	r18, 6
    259a:	03 c0       	rjmp	.+6      	; 0x25a2 <vfprintf+0x12a>
    259c:	65 2d       	mov	r22, r5
    259e:	70 e0       	ldi	r23, 0x00	; 0
    25a0:	02 c0       	rjmp	.+4      	; 0x25a6 <vfprintf+0x12e>
    25a2:	6f ef       	ldi	r22, 0xFF	; 255
    25a4:	7f ef       	ldi	r23, 0xFF	; 255
    25a6:	c5 01       	movw	r24, r10
    25a8:	2c 87       	std	Y+12, r18	; 0x0c
    25aa:	0e 94 19 14 	call	0x2832	; 0x2832 <strnlen>
    25ae:	2c 01       	movw	r4, r24
    25b0:	83 01       	movw	r16, r6
    25b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    25b4:	2f 77       	andi	r18, 0x7F	; 127
    25b6:	22 2e       	mov	r2, r18
    25b8:	17 c0       	rjmp	.+46     	; 0x25e8 <vfprintf+0x170>
    25ba:	38 01       	movw	r6, r16
    25bc:	f2 e0       	ldi	r31, 0x02	; 2
    25be:	6f 0e       	add	r6, r31
    25c0:	71 1c       	adc	r7, r1
    25c2:	f8 01       	movw	r30, r16
    25c4:	a0 80       	ld	r10, Z
    25c6:	b1 80       	ldd	r11, Z+1	; 0x01
    25c8:	26 ff       	sbrs	r18, 6
    25ca:	03 c0       	rjmp	.+6      	; 0x25d2 <vfprintf+0x15a>
    25cc:	65 2d       	mov	r22, r5
    25ce:	70 e0       	ldi	r23, 0x00	; 0
    25d0:	02 c0       	rjmp	.+4      	; 0x25d6 <vfprintf+0x15e>
    25d2:	6f ef       	ldi	r22, 0xFF	; 255
    25d4:	7f ef       	ldi	r23, 0xFF	; 255
    25d6:	c5 01       	movw	r24, r10
    25d8:	2c 87       	std	Y+12, r18	; 0x0c
    25da:	0e 94 0e 14 	call	0x281c	; 0x281c <strnlen_P>
    25de:	2c 01       	movw	r4, r24
    25e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    25e2:	20 68       	ori	r18, 0x80	; 128
    25e4:	22 2e       	mov	r2, r18
    25e6:	83 01       	movw	r16, r6
    25e8:	23 fc       	sbrc	r2, 3
    25ea:	1b c0       	rjmp	.+54     	; 0x2622 <vfprintf+0x1aa>
    25ec:	83 2d       	mov	r24, r3
    25ee:	90 e0       	ldi	r25, 0x00	; 0
    25f0:	48 16       	cp	r4, r24
    25f2:	59 06       	cpc	r5, r25
    25f4:	b0 f4       	brcc	.+44     	; 0x2622 <vfprintf+0x1aa>
    25f6:	b7 01       	movw	r22, r14
    25f8:	80 e2       	ldi	r24, 0x20	; 32
    25fa:	90 e0       	ldi	r25, 0x00	; 0
    25fc:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    2600:	3a 94       	dec	r3
    2602:	f4 cf       	rjmp	.-24     	; 0x25ec <vfprintf+0x174>
    2604:	f5 01       	movw	r30, r10
    2606:	27 fc       	sbrc	r2, 7
    2608:	85 91       	lpm	r24, Z+
    260a:	27 fe       	sbrs	r2, 7
    260c:	81 91       	ld	r24, Z+
    260e:	5f 01       	movw	r10, r30
    2610:	b7 01       	movw	r22, r14
    2612:	90 e0       	ldi	r25, 0x00	; 0
    2614:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    2618:	31 10       	cpse	r3, r1
    261a:	3a 94       	dec	r3
    261c:	f1 e0       	ldi	r31, 0x01	; 1
    261e:	4f 1a       	sub	r4, r31
    2620:	51 08       	sbc	r5, r1
    2622:	41 14       	cp	r4, r1
    2624:	51 04       	cpc	r5, r1
    2626:	71 f7       	brne	.-36     	; 0x2604 <vfprintf+0x18c>
    2628:	e5 c0       	rjmp	.+458    	; 0x27f4 <vfprintf+0x37c>
    262a:	84 36       	cpi	r24, 0x64	; 100
    262c:	11 f0       	breq	.+4      	; 0x2632 <vfprintf+0x1ba>
    262e:	89 36       	cpi	r24, 0x69	; 105
    2630:	39 f5       	brne	.+78     	; 0x2680 <vfprintf+0x208>
    2632:	f8 01       	movw	r30, r16
    2634:	27 ff       	sbrs	r18, 7
    2636:	07 c0       	rjmp	.+14     	; 0x2646 <vfprintf+0x1ce>
    2638:	60 81       	ld	r22, Z
    263a:	71 81       	ldd	r23, Z+1	; 0x01
    263c:	82 81       	ldd	r24, Z+2	; 0x02
    263e:	93 81       	ldd	r25, Z+3	; 0x03
    2640:	0c 5f       	subi	r16, 0xFC	; 252
    2642:	1f 4f       	sbci	r17, 0xFF	; 255
    2644:	08 c0       	rjmp	.+16     	; 0x2656 <vfprintf+0x1de>
    2646:	60 81       	ld	r22, Z
    2648:	71 81       	ldd	r23, Z+1	; 0x01
    264a:	07 2e       	mov	r0, r23
    264c:	00 0c       	add	r0, r0
    264e:	88 0b       	sbc	r24, r24
    2650:	99 0b       	sbc	r25, r25
    2652:	0e 5f       	subi	r16, 0xFE	; 254
    2654:	1f 4f       	sbci	r17, 0xFF	; 255
    2656:	2f 76       	andi	r18, 0x6F	; 111
    2658:	72 2e       	mov	r7, r18
    265a:	97 ff       	sbrs	r25, 7
    265c:	09 c0       	rjmp	.+18     	; 0x2670 <vfprintf+0x1f8>
    265e:	90 95       	com	r25
    2660:	80 95       	com	r24
    2662:	70 95       	com	r23
    2664:	61 95       	neg	r22
    2666:	7f 4f       	sbci	r23, 0xFF	; 255
    2668:	8f 4f       	sbci	r24, 0xFF	; 255
    266a:	9f 4f       	sbci	r25, 0xFF	; 255
    266c:	20 68       	ori	r18, 0x80	; 128
    266e:	72 2e       	mov	r7, r18
    2670:	2a e0       	ldi	r18, 0x0A	; 10
    2672:	30 e0       	ldi	r19, 0x00	; 0
    2674:	a4 01       	movw	r20, r8
    2676:	0e 94 5c 14 	call	0x28b8	; 0x28b8 <__ultoa_invert>
    267a:	a8 2e       	mov	r10, r24
    267c:	a8 18       	sub	r10, r8
    267e:	44 c0       	rjmp	.+136    	; 0x2708 <vfprintf+0x290>
    2680:	85 37       	cpi	r24, 0x75	; 117
    2682:	29 f4       	brne	.+10     	; 0x268e <vfprintf+0x216>
    2684:	2f 7e       	andi	r18, 0xEF	; 239
    2686:	b2 2e       	mov	r11, r18
    2688:	2a e0       	ldi	r18, 0x0A	; 10
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	25 c0       	rjmp	.+74     	; 0x26d8 <vfprintf+0x260>
    268e:	f2 2f       	mov	r31, r18
    2690:	f9 7f       	andi	r31, 0xF9	; 249
    2692:	bf 2e       	mov	r11, r31
    2694:	8f 36       	cpi	r24, 0x6F	; 111
    2696:	c1 f0       	breq	.+48     	; 0x26c8 <vfprintf+0x250>
    2698:	18 f4       	brcc	.+6      	; 0x26a0 <vfprintf+0x228>
    269a:	88 35       	cpi	r24, 0x58	; 88
    269c:	79 f0       	breq	.+30     	; 0x26bc <vfprintf+0x244>
    269e:	b4 c0       	rjmp	.+360    	; 0x2808 <vfprintf+0x390>
    26a0:	80 37       	cpi	r24, 0x70	; 112
    26a2:	19 f0       	breq	.+6      	; 0x26aa <vfprintf+0x232>
    26a4:	88 37       	cpi	r24, 0x78	; 120
    26a6:	21 f0       	breq	.+8      	; 0x26b0 <vfprintf+0x238>
    26a8:	af c0       	rjmp	.+350    	; 0x2808 <vfprintf+0x390>
    26aa:	2f 2f       	mov	r18, r31
    26ac:	20 61       	ori	r18, 0x10	; 16
    26ae:	b2 2e       	mov	r11, r18
    26b0:	b4 fe       	sbrs	r11, 4
    26b2:	0d c0       	rjmp	.+26     	; 0x26ce <vfprintf+0x256>
    26b4:	8b 2d       	mov	r24, r11
    26b6:	84 60       	ori	r24, 0x04	; 4
    26b8:	b8 2e       	mov	r11, r24
    26ba:	09 c0       	rjmp	.+18     	; 0x26ce <vfprintf+0x256>
    26bc:	24 ff       	sbrs	r18, 4
    26be:	0a c0       	rjmp	.+20     	; 0x26d4 <vfprintf+0x25c>
    26c0:	9f 2f       	mov	r25, r31
    26c2:	96 60       	ori	r25, 0x06	; 6
    26c4:	b9 2e       	mov	r11, r25
    26c6:	06 c0       	rjmp	.+12     	; 0x26d4 <vfprintf+0x25c>
    26c8:	28 e0       	ldi	r18, 0x08	; 8
    26ca:	30 e0       	ldi	r19, 0x00	; 0
    26cc:	05 c0       	rjmp	.+10     	; 0x26d8 <vfprintf+0x260>
    26ce:	20 e1       	ldi	r18, 0x10	; 16
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	02 c0       	rjmp	.+4      	; 0x26d8 <vfprintf+0x260>
    26d4:	20 e1       	ldi	r18, 0x10	; 16
    26d6:	32 e0       	ldi	r19, 0x02	; 2
    26d8:	f8 01       	movw	r30, r16
    26da:	b7 fe       	sbrs	r11, 7
    26dc:	07 c0       	rjmp	.+14     	; 0x26ec <vfprintf+0x274>
    26de:	60 81       	ld	r22, Z
    26e0:	71 81       	ldd	r23, Z+1	; 0x01
    26e2:	82 81       	ldd	r24, Z+2	; 0x02
    26e4:	93 81       	ldd	r25, Z+3	; 0x03
    26e6:	0c 5f       	subi	r16, 0xFC	; 252
    26e8:	1f 4f       	sbci	r17, 0xFF	; 255
    26ea:	06 c0       	rjmp	.+12     	; 0x26f8 <vfprintf+0x280>
    26ec:	60 81       	ld	r22, Z
    26ee:	71 81       	ldd	r23, Z+1	; 0x01
    26f0:	80 e0       	ldi	r24, 0x00	; 0
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	0e 5f       	subi	r16, 0xFE	; 254
    26f6:	1f 4f       	sbci	r17, 0xFF	; 255
    26f8:	a4 01       	movw	r20, r8
    26fa:	0e 94 5c 14 	call	0x28b8	; 0x28b8 <__ultoa_invert>
    26fe:	a8 2e       	mov	r10, r24
    2700:	a8 18       	sub	r10, r8
    2702:	fb 2d       	mov	r31, r11
    2704:	ff 77       	andi	r31, 0x7F	; 127
    2706:	7f 2e       	mov	r7, r31
    2708:	76 fe       	sbrs	r7, 6
    270a:	0b c0       	rjmp	.+22     	; 0x2722 <vfprintf+0x2aa>
    270c:	37 2d       	mov	r19, r7
    270e:	3e 7f       	andi	r19, 0xFE	; 254
    2710:	a5 14       	cp	r10, r5
    2712:	50 f4       	brcc	.+20     	; 0x2728 <vfprintf+0x2b0>
    2714:	74 fe       	sbrs	r7, 4
    2716:	0a c0       	rjmp	.+20     	; 0x272c <vfprintf+0x2b4>
    2718:	72 fc       	sbrc	r7, 2
    271a:	08 c0       	rjmp	.+16     	; 0x272c <vfprintf+0x2b4>
    271c:	37 2d       	mov	r19, r7
    271e:	3e 7e       	andi	r19, 0xEE	; 238
    2720:	05 c0       	rjmp	.+10     	; 0x272c <vfprintf+0x2b4>
    2722:	ba 2c       	mov	r11, r10
    2724:	37 2d       	mov	r19, r7
    2726:	03 c0       	rjmp	.+6      	; 0x272e <vfprintf+0x2b6>
    2728:	ba 2c       	mov	r11, r10
    272a:	01 c0       	rjmp	.+2      	; 0x272e <vfprintf+0x2b6>
    272c:	b5 2c       	mov	r11, r5
    272e:	34 ff       	sbrs	r19, 4
    2730:	0d c0       	rjmp	.+26     	; 0x274c <vfprintf+0x2d4>
    2732:	fe 01       	movw	r30, r28
    2734:	ea 0d       	add	r30, r10
    2736:	f1 1d       	adc	r31, r1
    2738:	80 81       	ld	r24, Z
    273a:	80 33       	cpi	r24, 0x30	; 48
    273c:	11 f4       	brne	.+4      	; 0x2742 <vfprintf+0x2ca>
    273e:	39 7e       	andi	r19, 0xE9	; 233
    2740:	09 c0       	rjmp	.+18     	; 0x2754 <vfprintf+0x2dc>
    2742:	32 ff       	sbrs	r19, 2
    2744:	06 c0       	rjmp	.+12     	; 0x2752 <vfprintf+0x2da>
    2746:	b3 94       	inc	r11
    2748:	b3 94       	inc	r11
    274a:	04 c0       	rjmp	.+8      	; 0x2754 <vfprintf+0x2dc>
    274c:	83 2f       	mov	r24, r19
    274e:	86 78       	andi	r24, 0x86	; 134
    2750:	09 f0       	breq	.+2      	; 0x2754 <vfprintf+0x2dc>
    2752:	b3 94       	inc	r11
    2754:	33 fd       	sbrc	r19, 3
    2756:	13 c0       	rjmp	.+38     	; 0x277e <vfprintf+0x306>
    2758:	30 ff       	sbrs	r19, 0
    275a:	06 c0       	rjmp	.+12     	; 0x2768 <vfprintf+0x2f0>
    275c:	5a 2c       	mov	r5, r10
    275e:	b3 14       	cp	r11, r3
    2760:	18 f4       	brcc	.+6      	; 0x2768 <vfprintf+0x2f0>
    2762:	53 0c       	add	r5, r3
    2764:	5b 18       	sub	r5, r11
    2766:	b3 2c       	mov	r11, r3
    2768:	b3 14       	cp	r11, r3
    276a:	68 f4       	brcc	.+26     	; 0x2786 <vfprintf+0x30e>
    276c:	b7 01       	movw	r22, r14
    276e:	80 e2       	ldi	r24, 0x20	; 32
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	3c 87       	std	Y+12, r19	; 0x0c
    2774:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    2778:	b3 94       	inc	r11
    277a:	3c 85       	ldd	r19, Y+12	; 0x0c
    277c:	f5 cf       	rjmp	.-22     	; 0x2768 <vfprintf+0x2f0>
    277e:	b3 14       	cp	r11, r3
    2780:	10 f4       	brcc	.+4      	; 0x2786 <vfprintf+0x30e>
    2782:	3b 18       	sub	r3, r11
    2784:	01 c0       	rjmp	.+2      	; 0x2788 <vfprintf+0x310>
    2786:	31 2c       	mov	r3, r1
    2788:	34 ff       	sbrs	r19, 4
    278a:	12 c0       	rjmp	.+36     	; 0x27b0 <vfprintf+0x338>
    278c:	b7 01       	movw	r22, r14
    278e:	80 e3       	ldi	r24, 0x30	; 48
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	3c 87       	std	Y+12, r19	; 0x0c
    2794:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    2798:	3c 85       	ldd	r19, Y+12	; 0x0c
    279a:	32 ff       	sbrs	r19, 2
    279c:	17 c0       	rjmp	.+46     	; 0x27cc <vfprintf+0x354>
    279e:	31 fd       	sbrc	r19, 1
    27a0:	03 c0       	rjmp	.+6      	; 0x27a8 <vfprintf+0x330>
    27a2:	88 e7       	ldi	r24, 0x78	; 120
    27a4:	90 e0       	ldi	r25, 0x00	; 0
    27a6:	02 c0       	rjmp	.+4      	; 0x27ac <vfprintf+0x334>
    27a8:	88 e5       	ldi	r24, 0x58	; 88
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	b7 01       	movw	r22, r14
    27ae:	0c c0       	rjmp	.+24     	; 0x27c8 <vfprintf+0x350>
    27b0:	83 2f       	mov	r24, r19
    27b2:	86 78       	andi	r24, 0x86	; 134
    27b4:	59 f0       	breq	.+22     	; 0x27cc <vfprintf+0x354>
    27b6:	31 ff       	sbrs	r19, 1
    27b8:	02 c0       	rjmp	.+4      	; 0x27be <vfprintf+0x346>
    27ba:	8b e2       	ldi	r24, 0x2B	; 43
    27bc:	01 c0       	rjmp	.+2      	; 0x27c0 <vfprintf+0x348>
    27be:	80 e2       	ldi	r24, 0x20	; 32
    27c0:	37 fd       	sbrc	r19, 7
    27c2:	8d e2       	ldi	r24, 0x2D	; 45
    27c4:	b7 01       	movw	r22, r14
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    27cc:	a5 14       	cp	r10, r5
    27ce:	38 f4       	brcc	.+14     	; 0x27de <vfprintf+0x366>
    27d0:	b7 01       	movw	r22, r14
    27d2:	80 e3       	ldi	r24, 0x30	; 48
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    27da:	5a 94       	dec	r5
    27dc:	f7 cf       	rjmp	.-18     	; 0x27cc <vfprintf+0x354>
    27de:	aa 94       	dec	r10
    27e0:	f4 01       	movw	r30, r8
    27e2:	ea 0d       	add	r30, r10
    27e4:	f1 1d       	adc	r31, r1
    27e6:	80 81       	ld	r24, Z
    27e8:	b7 01       	movw	r22, r14
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    27f0:	a1 10       	cpse	r10, r1
    27f2:	f5 cf       	rjmp	.-22     	; 0x27de <vfprintf+0x366>
    27f4:	33 20       	and	r3, r3
    27f6:	09 f4       	brne	.+2      	; 0x27fa <vfprintf+0x382>
    27f8:	51 ce       	rjmp	.-862    	; 0x249c <vfprintf+0x24>
    27fa:	b7 01       	movw	r22, r14
    27fc:	80 e2       	ldi	r24, 0x20	; 32
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	0e 94 24 14 	call	0x2848	; 0x2848 <fputc>
    2804:	3a 94       	dec	r3
    2806:	f6 cf       	rjmp	.-20     	; 0x27f4 <vfprintf+0x37c>
    2808:	f7 01       	movw	r30, r14
    280a:	86 81       	ldd	r24, Z+6	; 0x06
    280c:	97 81       	ldd	r25, Z+7	; 0x07
    280e:	02 c0       	rjmp	.+4      	; 0x2814 <vfprintf+0x39c>
    2810:	8f ef       	ldi	r24, 0xFF	; 255
    2812:	9f ef       	ldi	r25, 0xFF	; 255
    2814:	2c 96       	adiw	r28, 0x0c	; 12
    2816:	e2 e1       	ldi	r30, 0x12	; 18
    2818:	0c 94 d6 14 	jmp	0x29ac	; 0x29ac <__epilogue_restores__>

0000281c <strnlen_P>:
    281c:	fc 01       	movw	r30, r24
    281e:	05 90       	lpm	r0, Z+
    2820:	61 50       	subi	r22, 0x01	; 1
    2822:	70 40       	sbci	r23, 0x00	; 0
    2824:	01 10       	cpse	r0, r1
    2826:	d8 f7       	brcc	.-10     	; 0x281e <strnlen_P+0x2>
    2828:	80 95       	com	r24
    282a:	90 95       	com	r25
    282c:	8e 0f       	add	r24, r30
    282e:	9f 1f       	adc	r25, r31
    2830:	08 95       	ret

00002832 <strnlen>:
    2832:	fc 01       	movw	r30, r24
    2834:	61 50       	subi	r22, 0x01	; 1
    2836:	70 40       	sbci	r23, 0x00	; 0
    2838:	01 90       	ld	r0, Z+
    283a:	01 10       	cpse	r0, r1
    283c:	d8 f7       	brcc	.-10     	; 0x2834 <strnlen+0x2>
    283e:	80 95       	com	r24
    2840:	90 95       	com	r25
    2842:	8e 0f       	add	r24, r30
    2844:	9f 1f       	adc	r25, r31
    2846:	08 95       	ret

00002848 <fputc>:
    2848:	0f 93       	push	r16
    284a:	1f 93       	push	r17
    284c:	cf 93       	push	r28
    284e:	df 93       	push	r29
    2850:	fb 01       	movw	r30, r22
    2852:	23 81       	ldd	r18, Z+3	; 0x03
    2854:	21 fd       	sbrc	r18, 1
    2856:	03 c0       	rjmp	.+6      	; 0x285e <fputc+0x16>
    2858:	8f ef       	ldi	r24, 0xFF	; 255
    285a:	9f ef       	ldi	r25, 0xFF	; 255
    285c:	28 c0       	rjmp	.+80     	; 0x28ae <fputc+0x66>
    285e:	22 ff       	sbrs	r18, 2
    2860:	16 c0       	rjmp	.+44     	; 0x288e <fputc+0x46>
    2862:	46 81       	ldd	r20, Z+6	; 0x06
    2864:	57 81       	ldd	r21, Z+7	; 0x07
    2866:	24 81       	ldd	r18, Z+4	; 0x04
    2868:	35 81       	ldd	r19, Z+5	; 0x05
    286a:	42 17       	cp	r20, r18
    286c:	53 07       	cpc	r21, r19
    286e:	44 f4       	brge	.+16     	; 0x2880 <fputc+0x38>
    2870:	a0 81       	ld	r26, Z
    2872:	b1 81       	ldd	r27, Z+1	; 0x01
    2874:	9d 01       	movw	r18, r26
    2876:	2f 5f       	subi	r18, 0xFF	; 255
    2878:	3f 4f       	sbci	r19, 0xFF	; 255
    287a:	31 83       	std	Z+1, r19	; 0x01
    287c:	20 83       	st	Z, r18
    287e:	8c 93       	st	X, r24
    2880:	26 81       	ldd	r18, Z+6	; 0x06
    2882:	37 81       	ldd	r19, Z+7	; 0x07
    2884:	2f 5f       	subi	r18, 0xFF	; 255
    2886:	3f 4f       	sbci	r19, 0xFF	; 255
    2888:	37 83       	std	Z+7, r19	; 0x07
    288a:	26 83       	std	Z+6, r18	; 0x06
    288c:	10 c0       	rjmp	.+32     	; 0x28ae <fputc+0x66>
    288e:	eb 01       	movw	r28, r22
    2890:	09 2f       	mov	r16, r25
    2892:	18 2f       	mov	r17, r24
    2894:	00 84       	ldd	r0, Z+8	; 0x08
    2896:	f1 85       	ldd	r31, Z+9	; 0x09
    2898:	e0 2d       	mov	r30, r0
    289a:	09 95       	icall
    289c:	89 2b       	or	r24, r25
    289e:	e1 f6       	brne	.-72     	; 0x2858 <fputc+0x10>
    28a0:	8e 81       	ldd	r24, Y+6	; 0x06
    28a2:	9f 81       	ldd	r25, Y+7	; 0x07
    28a4:	01 96       	adiw	r24, 0x01	; 1
    28a6:	9f 83       	std	Y+7, r25	; 0x07
    28a8:	8e 83       	std	Y+6, r24	; 0x06
    28aa:	81 2f       	mov	r24, r17
    28ac:	90 2f       	mov	r25, r16
    28ae:	df 91       	pop	r29
    28b0:	cf 91       	pop	r28
    28b2:	1f 91       	pop	r17
    28b4:	0f 91       	pop	r16
    28b6:	08 95       	ret

000028b8 <__ultoa_invert>:
    28b8:	fa 01       	movw	r30, r20
    28ba:	aa 27       	eor	r26, r26
    28bc:	28 30       	cpi	r18, 0x08	; 8
    28be:	51 f1       	breq	.+84     	; 0x2914 <__ultoa_invert+0x5c>
    28c0:	20 31       	cpi	r18, 0x10	; 16
    28c2:	81 f1       	breq	.+96     	; 0x2924 <__ultoa_invert+0x6c>
    28c4:	e8 94       	clt
    28c6:	6f 93       	push	r22
    28c8:	6e 7f       	andi	r22, 0xFE	; 254
    28ca:	6e 5f       	subi	r22, 0xFE	; 254
    28cc:	7f 4f       	sbci	r23, 0xFF	; 255
    28ce:	8f 4f       	sbci	r24, 0xFF	; 255
    28d0:	9f 4f       	sbci	r25, 0xFF	; 255
    28d2:	af 4f       	sbci	r26, 0xFF	; 255
    28d4:	b1 e0       	ldi	r27, 0x01	; 1
    28d6:	3e d0       	rcall	.+124    	; 0x2954 <__ultoa_invert+0x9c>
    28d8:	b4 e0       	ldi	r27, 0x04	; 4
    28da:	3c d0       	rcall	.+120    	; 0x2954 <__ultoa_invert+0x9c>
    28dc:	67 0f       	add	r22, r23
    28de:	78 1f       	adc	r23, r24
    28e0:	89 1f       	adc	r24, r25
    28e2:	9a 1f       	adc	r25, r26
    28e4:	a1 1d       	adc	r26, r1
    28e6:	68 0f       	add	r22, r24
    28e8:	79 1f       	adc	r23, r25
    28ea:	8a 1f       	adc	r24, r26
    28ec:	91 1d       	adc	r25, r1
    28ee:	a1 1d       	adc	r26, r1
    28f0:	6a 0f       	add	r22, r26
    28f2:	71 1d       	adc	r23, r1
    28f4:	81 1d       	adc	r24, r1
    28f6:	91 1d       	adc	r25, r1
    28f8:	a1 1d       	adc	r26, r1
    28fa:	20 d0       	rcall	.+64     	; 0x293c <__ultoa_invert+0x84>
    28fc:	09 f4       	brne	.+2      	; 0x2900 <__ultoa_invert+0x48>
    28fe:	68 94       	set
    2900:	3f 91       	pop	r19
    2902:	2a e0       	ldi	r18, 0x0A	; 10
    2904:	26 9f       	mul	r18, r22
    2906:	11 24       	eor	r1, r1
    2908:	30 19       	sub	r19, r0
    290a:	30 5d       	subi	r19, 0xD0	; 208
    290c:	31 93       	st	Z+, r19
    290e:	de f6       	brtc	.-74     	; 0x28c6 <__ultoa_invert+0xe>
    2910:	cf 01       	movw	r24, r30
    2912:	08 95       	ret
    2914:	46 2f       	mov	r20, r22
    2916:	47 70       	andi	r20, 0x07	; 7
    2918:	40 5d       	subi	r20, 0xD0	; 208
    291a:	41 93       	st	Z+, r20
    291c:	b3 e0       	ldi	r27, 0x03	; 3
    291e:	0f d0       	rcall	.+30     	; 0x293e <__ultoa_invert+0x86>
    2920:	c9 f7       	brne	.-14     	; 0x2914 <__ultoa_invert+0x5c>
    2922:	f6 cf       	rjmp	.-20     	; 0x2910 <__ultoa_invert+0x58>
    2924:	46 2f       	mov	r20, r22
    2926:	4f 70       	andi	r20, 0x0F	; 15
    2928:	40 5d       	subi	r20, 0xD0	; 208
    292a:	4a 33       	cpi	r20, 0x3A	; 58
    292c:	18 f0       	brcs	.+6      	; 0x2934 <__ultoa_invert+0x7c>
    292e:	49 5d       	subi	r20, 0xD9	; 217
    2930:	31 fd       	sbrc	r19, 1
    2932:	40 52       	subi	r20, 0x20	; 32
    2934:	41 93       	st	Z+, r20
    2936:	02 d0       	rcall	.+4      	; 0x293c <__ultoa_invert+0x84>
    2938:	a9 f7       	brne	.-22     	; 0x2924 <__ultoa_invert+0x6c>
    293a:	ea cf       	rjmp	.-44     	; 0x2910 <__ultoa_invert+0x58>
    293c:	b4 e0       	ldi	r27, 0x04	; 4
    293e:	a6 95       	lsr	r26
    2940:	97 95       	ror	r25
    2942:	87 95       	ror	r24
    2944:	77 95       	ror	r23
    2946:	67 95       	ror	r22
    2948:	ba 95       	dec	r27
    294a:	c9 f7       	brne	.-14     	; 0x293e <__ultoa_invert+0x86>
    294c:	00 97       	sbiw	r24, 0x00	; 0
    294e:	61 05       	cpc	r22, r1
    2950:	71 05       	cpc	r23, r1
    2952:	08 95       	ret
    2954:	9b 01       	movw	r18, r22
    2956:	ac 01       	movw	r20, r24
    2958:	0a 2e       	mov	r0, r26
    295a:	06 94       	lsr	r0
    295c:	57 95       	ror	r21
    295e:	47 95       	ror	r20
    2960:	37 95       	ror	r19
    2962:	27 95       	ror	r18
    2964:	ba 95       	dec	r27
    2966:	c9 f7       	brne	.-14     	; 0x295a <__ultoa_invert+0xa2>
    2968:	62 0f       	add	r22, r18
    296a:	73 1f       	adc	r23, r19
    296c:	84 1f       	adc	r24, r20
    296e:	95 1f       	adc	r25, r21
    2970:	a0 1d       	adc	r26, r0
    2972:	08 95       	ret

00002974 <__prologue_saves__>:
    2974:	2f 92       	push	r2
    2976:	3f 92       	push	r3
    2978:	4f 92       	push	r4
    297a:	5f 92       	push	r5
    297c:	6f 92       	push	r6
    297e:	7f 92       	push	r7
    2980:	8f 92       	push	r8
    2982:	9f 92       	push	r9
    2984:	af 92       	push	r10
    2986:	bf 92       	push	r11
    2988:	cf 92       	push	r12
    298a:	df 92       	push	r13
    298c:	ef 92       	push	r14
    298e:	ff 92       	push	r15
    2990:	0f 93       	push	r16
    2992:	1f 93       	push	r17
    2994:	cf 93       	push	r28
    2996:	df 93       	push	r29
    2998:	cd b7       	in	r28, 0x3d	; 61
    299a:	de b7       	in	r29, 0x3e	; 62
    299c:	ca 1b       	sub	r28, r26
    299e:	db 0b       	sbc	r29, r27
    29a0:	0f b6       	in	r0, 0x3f	; 63
    29a2:	f8 94       	cli
    29a4:	de bf       	out	0x3e, r29	; 62
    29a6:	0f be       	out	0x3f, r0	; 63
    29a8:	cd bf       	out	0x3d, r28	; 61
    29aa:	09 94       	ijmp

000029ac <__epilogue_restores__>:
    29ac:	2a 88       	ldd	r2, Y+18	; 0x12
    29ae:	39 88       	ldd	r3, Y+17	; 0x11
    29b0:	48 88       	ldd	r4, Y+16	; 0x10
    29b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    29b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    29b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    29b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    29ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    29bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    29be:	b9 84       	ldd	r11, Y+9	; 0x09
    29c0:	c8 84       	ldd	r12, Y+8	; 0x08
    29c2:	df 80       	ldd	r13, Y+7	; 0x07
    29c4:	ee 80       	ldd	r14, Y+6	; 0x06
    29c6:	fd 80       	ldd	r15, Y+5	; 0x05
    29c8:	0c 81       	ldd	r16, Y+4	; 0x04
    29ca:	1b 81       	ldd	r17, Y+3	; 0x03
    29cc:	aa 81       	ldd	r26, Y+2	; 0x02
    29ce:	b9 81       	ldd	r27, Y+1	; 0x01
    29d0:	ce 0f       	add	r28, r30
    29d2:	d1 1d       	adc	r29, r1
    29d4:	0f b6       	in	r0, 0x3f	; 63
    29d6:	f8 94       	cli
    29d8:	de bf       	out	0x3e, r29	; 62
    29da:	0f be       	out	0x3f, r0	; 63
    29dc:	cd bf       	out	0x3d, r28	; 61
    29de:	ed 01       	movw	r28, r26
    29e0:	08 95       	ret

000029e2 <_exit>:
    29e2:	f8 94       	cli

000029e4 <__stop_program>:
    29e4:	ff cf       	rjmp	.-2      	; 0x29e4 <__stop_program>
