
arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000186  00800100  000031b4  00003248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000031b4  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000250  00800286  00800286  000033ce  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000033ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000033e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a8  00000000  00000000  00003420  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000eab0  00000000  00000000  000038c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002b29  00000000  00000000  00012378  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000030fb  00000000  00000000  00014ea1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c80  00000000  00000000  00017f9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000030d7  00000000  00000000  00018c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005124  00000000  00000000  0001bcf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004b0  00000000  00000000  00020e17  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
       4:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      10:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      18:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      20:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      24:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      28:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      2c:	0c 94 7a 13 	jmp	0x26f4	; 0x26f4 <__vector_11>
      30:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      34:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      38:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      3c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      40:	0c 94 3d 0c 	jmp	0x187a	; 0x187a <__vector_16>
      44:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      48:	0c 94 91 0e 	jmp	0x1d22	; 0x1d22 <__vector_18>
      4c:	0c 94 c3 0e 	jmp	0x1d86	; 0x1d86 <__vector_19>
      50:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      58:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      5c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      60:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      64:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 08       	sbc	r0, r0
      6c:	00 02       	muls	r16, r16
      6e:	01 00       	.word	0x0001	; ????
      70:	00 03       	mulsu	r16, r16
      72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_output_PGM>:
      a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ae <port_to_mode_PGM>:
      ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000b8 <__ctors_start>:
      b8:	f3 0e       	add	r15, r19

000000ba <__ctors_end>:
      ba:	11 24       	eor	r1, r1
      bc:	1f be       	out	0x3f, r1	; 63
      be:	cf ef       	ldi	r28, 0xFF	; 255
      c0:	d8 e0       	ldi	r29, 0x08	; 8
      c2:	de bf       	out	0x3e, r29	; 62
      c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
      c6:	12 e0       	ldi	r17, 0x02	; 2
      c8:	a0 e0       	ldi	r26, 0x00	; 0
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	e4 eb       	ldi	r30, 0xB4	; 180
      ce:	f1 e3       	ldi	r31, 0x31	; 49
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
      d2:	05 90       	lpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	a6 38       	cpi	r26, 0x86	; 134
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
      dc:	24 e0       	ldi	r18, 0x04	; 4
      de:	a6 e8       	ldi	r26, 0x86	; 134
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	a6 3d       	cpi	r26, 0xD6	; 214
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
      ec:	10 e0       	ldi	r17, 0x00	; 0
      ee:	cd e5       	ldi	r28, 0x5D	; 93
      f0:	d0 e0       	ldi	r29, 0x00	; 0
      f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_global_ctors+0x10>
      f4:	21 97       	sbiw	r28, 0x01	; 1
      f6:	fe 01       	movw	r30, r28
      f8:	0e 94 ed 15 	call	0x2bda	; 0x2bda <__tablejump2__>
      fc:	cc 35       	cpi	r28, 0x5C	; 92
      fe:	d1 07       	cpc	r29, r17
     100:	c9 f7       	brne	.-14     	; 0xf4 <__do_global_ctors+0x8>
     102:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <main>
     106:	0c 94 d8 18 	jmp	0x31b0	; 0x31b0 <_exit>

0000010a <__bad_interrupt>:
     10a:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__vector_default>
	...

00000110 <osEE_hal_save_ctx_and_restore_ctx>:
     110:	2f 92       	push	r2
     112:	3f 92       	push	r3
     114:	4f 92       	push	r4
     116:	5f 92       	push	r5
     118:	6f 92       	push	r6
     11a:	7f 92       	push	r7
     11c:	8f 92       	push	r8
     11e:	9f 92       	push	r9
     120:	af 92       	push	r10
     122:	bf 92       	push	r11
     124:	cf 92       	push	r12
     126:	df 92       	push	r13
     128:	ef 92       	push	r14
     12a:	ff 92       	push	r15
     12c:	0f 93       	push	r16
     12e:	1f 93       	push	r17
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	e4 2f       	mov	r30, r20
     136:	f5 2f       	mov	r31, r21
     138:	41 90       	ld	r4, Z+
     13a:	50 80       	ld	r5, Z
     13c:	4f 92       	push	r4
     13e:	5f 92       	push	r5
     140:	e4 2f       	mov	r30, r20
     142:	f5 2f       	mov	r31, r21
     144:	4d b6       	in	r4, 0x3d	; 61
     146:	5e b6       	in	r5, 0x3e	; 62
     148:	41 92       	st	Z+, r4
     14a:	50 82       	st	Z, r5
     14c:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>

00000150 <osEE_hal_restore_ctx>:
     150:	e6 2f       	mov	r30, r22
     152:	f7 2f       	mov	r31, r23
     154:	41 90       	ld	r4, Z+
     156:	50 80       	ld	r5, Z
     158:	4d be       	out	0x3d, r4	; 61
     15a:	5e be       	out	0x3e, r5	; 62
     15c:	5f 90       	pop	r5
     15e:	4f 90       	pop	r4
     160:	e6 2f       	mov	r30, r22
     162:	f7 2f       	mov	r31, r23
     164:	41 92       	st	Z+, r4
     166:	50 82       	st	Z, r5
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	ff 90       	pop	r15
     172:	ef 90       	pop	r14
     174:	df 90       	pop	r13
     176:	cf 90       	pop	r12
     178:	bf 90       	pop	r11
     17a:	af 90       	pop	r10
     17c:	9f 90       	pop	r9
     17e:	8f 90       	pop	r8
     180:	7f 90       	pop	r7
     182:	6f 90       	pop	r6
     184:	5f 90       	pop	r5
     186:	4f 90       	pop	r4
     188:	3f 90       	pop	r3
     18a:	2f 90       	pop	r2
     18c:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <osEE_scheduler_task_wrapper_restore>

00000190 <osEE_hal_ready2stacked>:
     190:	e6 2f       	mov	r30, r22
     192:	f7 2f       	mov	r31, r23
     194:	41 91       	ld	r20, Z+
     196:	50 81       	ld	r21, Z
     198:	4d bf       	out	0x3d, r20	; 61
     19a:	5e bf       	out	0x3e, r21	; 62
     19c:	0c 94 ae 10 	jmp	0x215c	; 0x215c <osEE_scheduler_task_wrapper_run>

000001a0 <osEE_hal_save_ctx_and_ready2stacked>:
     1a0:	2f 92       	push	r2
     1a2:	3f 92       	push	r3
     1a4:	4f 92       	push	r4
     1a6:	5f 92       	push	r5
     1a8:	6f 92       	push	r6
     1aa:	7f 92       	push	r7
     1ac:	8f 92       	push	r8
     1ae:	9f 92       	push	r9
     1b0:	af 92       	push	r10
     1b2:	bf 92       	push	r11
     1b4:	cf 92       	push	r12
     1b6:	df 92       	push	r13
     1b8:	ef 92       	push	r14
     1ba:	ff 92       	push	r15
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	e4 2f       	mov	r30, r20
     1c6:	f5 2f       	mov	r31, r21
     1c8:	41 90       	ld	r4, Z+
     1ca:	50 80       	ld	r5, Z
     1cc:	4f 92       	push	r4
     1ce:	5f 92       	push	r5
     1d0:	e4 2f       	mov	r30, r20
     1d2:	f5 2f       	mov	r31, r21
     1d4:	4d b6       	in	r4, 0x3d	; 61
     1d6:	5e b6       	in	r5, 0x3e	; 62
     1d8:	41 92       	st	Z+, r4
     1da:	50 82       	st	Z, r5
     1dc:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

000001e0 <osEE_hal_terminate_ctx>:
     1e0:	e8 2f       	mov	r30, r24
     1e2:	f9 2f       	mov	r31, r25
     1e4:	41 91       	ld	r20, Z+
     1e6:	50 81       	ld	r21, Z
     1e8:	4d bf       	out	0x3d, r20	; 61
     1ea:	5e bf       	out	0x3e, r21	; 62
     1ec:	e6 2f       	mov	r30, r22
     1ee:	f7 2f       	mov	r31, r23
     1f0:	09 94       	ijmp
	...

000001f4 <Check_Enable_of_SubFeatures>:
     1f4:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <Status_Accel_Decel>
     1f8:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <Status_Accel_Decel+0x1>
     1fc:	85 30       	cpi	r24, 0x05	; 5
     1fe:	91 05       	cpc	r25, r1
     200:	f9 f4       	brne	.+62     	; 0x240 <Check_Enable_of_SubFeatures+0x4c>
     202:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <CC_Enable>
     206:	90 91 ba 04 	lds	r25, 0x04BA	; 0x8004ba <CC_Enable+0x1>
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	71 f1       	breq	.+92     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     20e:	80 91 b7 04 	lds	r24, 0x04B7	; 0x8004b7 <ACC_Enable>
     212:	90 91 b8 04 	lds	r25, 0x04B8	; 0x8004b8 <ACC_Enable+0x1>
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	41 f1       	breq	.+80     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     21a:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     21e:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     222:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     226:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     22a:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     22e:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     23a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     23e:	08 95       	ret
     240:	84 30       	cpi	r24, 0x04	; 4
     242:	91 05       	cpc	r25, r1
     244:	21 f3       	breq	.-56     	; 0x20e <Check_Enable_of_SubFeatures+0x1a>
     246:	83 30       	cpi	r24, 0x03	; 3
     248:	91 05       	cpc	r25, r1
     24a:	39 f4       	brne	.+14     	; 0x25a <Check_Enable_of_SubFeatures+0x66>
     24c:	80 91 bb 04 	lds	r24, 0x04BB	; 0x8004bb <CWAS_Enable>
     250:	90 91 bc 04 	lds	r25, 0x04BC	; 0x8004bc <CWAS_Enable+0x1>
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	09 f7       	brne	.-62     	; 0x21a <Check_Enable_of_SubFeatures+0x26>
     258:	08 95       	ret
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	02 97       	sbiw	r24, 0x02	; 2
     25e:	28 f4       	brcc	.+10     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     260:	80 91 b1 04 	lds	r24, 0x04B1	; 0x8004b1 <EBS_Enable>
     264:	90 91 b2 04 	lds	r25, 0x04B2	; 0x8004b2 <EBS_Enable+0x1>
     268:	d6 cf       	rjmp	.-84     	; 0x216 <Check_Enable_of_SubFeatures+0x22>
     26a:	08 95       	ret

0000026c <Acc_Dec_Dtrmn_Sys>:
     26c:	4f 92       	push	r4
     26e:	5f 92       	push	r5
     270:	6f 92       	push	r6
     272:	7f 92       	push	r7
     274:	8f 92       	push	r8
     276:	9f 92       	push	r9
     278:	af 92       	push	r10
     27a:	bf 92       	push	r11
     27c:	cf 92       	push	r12
     27e:	df 92       	push	r13
     280:	ef 92       	push	r14
     282:	ff 92       	push	r15
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	6c 97       	sbiw	r28, 0x1c	; 28
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	f8 94       	cli
     292:	de bf       	out	0x3e, r29	; 62
     294:	0f be       	out	0x3f, r0	; 63
     296:	cd bf       	out	0x3d, r28	; 61
     298:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <CC_Enable>
     29c:	90 91 ba 04 	lds	r25, 0x04BA	; 0x8004ba <CC_Enable+0x1>
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	99 f0       	breq	.+38     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2a4:	80 91 b7 04 	lds	r24, 0x04B7	; 0x8004b7 <ACC_Enable>
     2a8:	90 91 b8 04 	lds	r25, 0x04B8	; 0x8004b8 <ACC_Enable+0x1>
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	69 f0       	breq	.+26     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2b0:	80 91 bb 04 	lds	r24, 0x04BB	; 0x8004bb <CWAS_Enable>
     2b4:	90 91 bc 04 	lds	r25, 0x04BC	; 0x8004bc <CWAS_Enable+0x1>
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	39 f0       	breq	.+14     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2bc:	80 91 b1 04 	lds	r24, 0x04B1	; 0x8004b1 <EBS_Enable>
     2c0:	90 91 b2 04 	lds	r25, 0x04B2	; 0x8004b2 <EBS_Enable+0x1>
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	09 f0       	breq	.+2      	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2c8:	f3 c3       	rjmp	.+2022   	; 0xab0 <__stack+0x1b1>
     2ca:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <skip_first_two_dat>
     2ce:	82 30       	cpi	r24, 0x02	; 2
     2d0:	24 f4       	brge	.+8      	; 0x2da <Acc_Dec_Dtrmn_Sys+0x6e>
     2d2:	8f 5f       	subi	r24, 0xFF	; 255
     2d4:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <skip_first_two_dat>
     2d8:	3a c0       	rjmp	.+116    	; 0x34e <Acc_Dec_Dtrmn_Sys+0xe2>
     2da:	20 91 ca 02 	lds	r18, 0x02CA	; 0x8002ca <Vehicle_Speed_Prev>
     2de:	30 91 cb 02 	lds	r19, 0x02CB	; 0x8002cb <Vehicle_Speed_Prev+0x1>
     2e2:	40 91 cc 02 	lds	r20, 0x02CC	; 0x8002cc <Vehicle_Speed_Prev+0x2>
     2e6:	50 91 cd 02 	lds	r21, 0x02CD	; 0x8002cd <Vehicle_Speed_Prev+0x3>
     2ea:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     2ee:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     2f2:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     2f6:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     2fa:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     2fe:	6b 01       	movw	r12, r22
     300:	7c 01       	movw	r14, r24
     302:	20 91 d6 02 	lds	r18, 0x02D6	; 0x8002d6 <Relative_Speed>
     306:	30 91 d7 02 	lds	r19, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
     30a:	40 91 d8 02 	lds	r20, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
     30e:	50 91 d9 02 	lds	r21, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
     312:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <Relative_Speed_Prev>
     316:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <Relative_Speed_Prev+0x1>
     31a:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <Relative_Speed_Prev+0x2>
     31e:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <Relative_Speed_Prev+0x3>
     322:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     326:	9b 01       	movw	r18, r22
     328:	ac 01       	movw	r20, r24
     32a:	c7 01       	movw	r24, r14
     32c:	b6 01       	movw	r22, r12
     32e:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     332:	2d ec       	ldi	r18, 0xCD	; 205
     334:	3c ec       	ldi	r19, 0xCC	; 204
     336:	4c ec       	ldi	r20, 0xCC	; 204
     338:	5d e3       	ldi	r21, 0x3D	; 61
     33a:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     33e:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <Target_Veh_Accel>
     342:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <Target_Veh_Accel+0x1>
     346:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <Target_Veh_Accel+0x2>
     34a:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <Target_Veh_Accel+0x3>
     34e:	80 90 b3 04 	lds	r8, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     352:	90 90 b4 04 	lds	r9, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     356:	a0 90 b5 04 	lds	r10, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     35a:	b0 90 b6 04 	lds	r11, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     35e:	80 92 ca 02 	sts	0x02CA, r8	; 0x8002ca <Vehicle_Speed_Prev>
     362:	90 92 cb 02 	sts	0x02CB, r9	; 0x8002cb <Vehicle_Speed_Prev+0x1>
     366:	a0 92 cc 02 	sts	0x02CC, r10	; 0x8002cc <Vehicle_Speed_Prev+0x2>
     36a:	b0 92 cd 02 	sts	0x02CD, r11	; 0x8002cd <Vehicle_Speed_Prev+0x3>
     36e:	c0 90 d6 02 	lds	r12, 0x02D6	; 0x8002d6 <Relative_Speed>
     372:	d0 90 d7 02 	lds	r13, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
     376:	e0 90 d8 02 	lds	r14, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
     37a:	f0 90 d9 02 	lds	r15, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
     37e:	c0 92 c6 02 	sts	0x02C6, r12	; 0x8002c6 <Relative_Speed_Prev>
     382:	d0 92 c7 02 	sts	0x02C7, r13	; 0x8002c7 <Relative_Speed_Prev+0x1>
     386:	e0 92 c8 02 	sts	0x02C8, r14	; 0x8002c8 <Relative_Speed_Prev+0x2>
     38a:	f0 92 c9 02 	sts	0x02C9, r15	; 0x8002c9 <Relative_Speed_Prev+0x3>
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	5f e3       	ldi	r21, 0x3F	; 63
     396:	c5 01       	movw	r24, r10
     398:	b4 01       	movw	r22, r8
     39a:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     39e:	69 83       	std	Y+1, r22	; 0x01
     3a0:	7a 83       	std	Y+2, r23	; 0x02
     3a2:	8b 83       	std	Y+3, r24	; 0x03
     3a4:	9c 83       	std	Y+4, r25	; 0x04
     3a6:	60 93 be 02 	sts	0x02BE, r22	; 0x8002be <Safety_Distance_Regulation>
     3aa:	70 93 bf 02 	sts	0x02BF, r23	; 0x8002bf <Safety_Distance_Regulation+0x1>
     3ae:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <Safety_Distance_Regulation+0x2>
     3b2:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <Safety_Distance_Regulation+0x3>
     3b6:	dc 01       	movw	r26, r24
     3b8:	cb 01       	movw	r24, r22
     3ba:	80 93 a9 04 	sts	0x04A9, r24	; 0x8004a9 <Safety_Distance>
     3be:	90 93 aa 04 	sts	0x04AA, r25	; 0x8004aa <Safety_Distance+0x1>
     3c2:	a0 93 ab 04 	sts	0x04AB, r26	; 0x8004ab <Safety_Distance+0x2>
     3c6:	b0 93 ac 04 	sts	0x04AC, r27	; 0x8004ac <Safety_Distance+0x3>
     3ca:	26 e6       	ldi	r18, 0x66	; 102
     3cc:	36 e6       	ldi	r19, 0x66	; 102
     3ce:	46 e6       	ldi	r20, 0x66	; 102
     3d0:	50 e4       	ldi	r21, 0x40	; 64
     3d2:	c5 01       	movw	r24, r10
     3d4:	b4 01       	movw	r22, r8
     3d6:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     3da:	9b 01       	movw	r18, r22
     3dc:	ac 01       	movw	r20, r24
     3de:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     3e2:	2b 01       	movw	r4, r22
     3e4:	3c 01       	movw	r6, r24
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	40 e4       	ldi	r20, 0x40	; 64
     3ec:	51 e4       	ldi	r21, 0x41	; 65
     3ee:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     3f2:	6d 83       	std	Y+5, r22	; 0x05
     3f4:	7e 83       	std	Y+6, r23	; 0x06
     3f6:	8f 83       	std	Y+7, r24	; 0x07
     3f8:	98 87       	std	Y+8, r25	; 0x08
     3fa:	60 93 9a 02 	sts	0x029A, r22	; 0x80029a <SafetyDistance_HalfBrake>
     3fe:	70 93 9b 02 	sts	0x029B, r23	; 0x80029b <SafetyDistance_HalfBrake+0x1>
     402:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <SafetyDistance_HalfBrake+0x2>
     406:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <SafetyDistance_HalfBrake+0x3>
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	40 e6       	ldi	r20, 0x60	; 96
     410:	51 e4       	ldi	r21, 0x41	; 65
     412:	c3 01       	movw	r24, r6
     414:	b2 01       	movw	r22, r4
     416:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     41a:	69 87       	std	Y+9, r22	; 0x09
     41c:	7a 87       	std	Y+10, r23	; 0x0a
     41e:	8b 87       	std	Y+11, r24	; 0x0b
     420:	9c 87       	std	Y+12, r25	; 0x0c
     422:	60 93 92 02 	sts	0x0292, r22	; 0x800292 <SafetyDistance_HalfFullBrake>
     426:	70 93 93 02 	sts	0x0293, r23	; 0x800293 <SafetyDistance_HalfFullBrake+0x1>
     42a:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <SafetyDistance_HalfFullBrake+0x2>
     42e:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <SafetyDistance_HalfFullBrake+0x3>
     432:	20 e0       	ldi	r18, 0x00	; 0
     434:	30 e0       	ldi	r19, 0x00	; 0
     436:	40 e8       	ldi	r20, 0x80	; 128
     438:	5d e3       	ldi	r21, 0x3D	; 61
     43a:	c3 01       	movw	r24, r6
     43c:	b2 01       	movw	r22, r4
     43e:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     442:	6d 87       	std	Y+13, r22	; 0x0d
     444:	7e 87       	std	Y+14, r23	; 0x0e
     446:	8f 87       	std	Y+15, r24	; 0x0f
     448:	98 8b       	std	Y+16, r25	; 0x10
     44a:	60 93 96 02 	sts	0x0296, r22	; 0x800296 <SafetyDistance_FullBrake>
     44e:	70 93 97 02 	sts	0x0297, r23	; 0x800297 <SafetyDistance_FullBrake+0x1>
     452:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <SafetyDistance_FullBrake+0x2>
     456:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <SafetyDistance_FullBrake+0x3>
     45a:	20 e0       	ldi	r18, 0x00	; 0
     45c:	30 e0       	ldi	r19, 0x00	; 0
     45e:	40 ec       	ldi	r20, 0xC0	; 192
     460:	50 e4       	ldi	r21, 0x40	; 64
     462:	c3 01       	movw	r24, r6
     464:	b2 01       	movw	r22, r4
     466:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     46a:	69 8b       	std	Y+17, r22	; 0x11
     46c:	7a 8b       	std	Y+18, r23	; 0x12
     46e:	8b 8b       	std	Y+19, r24	; 0x13
     470:	9c 8b       	std	Y+20, r25	; 0x14
     472:	60 93 8e 02 	sts	0x028E, r22	; 0x80028e <SafetyDistance_AccDisabled>
     476:	70 93 8f 02 	sts	0x028F, r23	; 0x80028f <SafetyDistance_AccDisabled+0x1>
     47a:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <SafetyDistance_AccDisabled+0x2>
     47e:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <SafetyDistance_AccDisabled+0x3>
     482:	20 e0       	ldi	r18, 0x00	; 0
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	40 ea       	ldi	r20, 0xA0	; 160
     488:	50 e4       	ldi	r21, 0x40	; 64
     48a:	c3 01       	movw	r24, r6
     48c:	b2 01       	movw	r22, r4
     48e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     492:	6d 8b       	std	Y+21, r22	; 0x15
     494:	7e 8b       	std	Y+22, r23	; 0x16
     496:	8f 8b       	std	Y+23, r24	; 0x17
     498:	98 8f       	std	Y+24, r25	; 0x18
     49a:	60 93 8a 02 	sts	0x028A, r22	; 0x80028a <SafetyDistance_AccMin>
     49e:	70 93 8b 02 	sts	0x028B, r23	; 0x80028b <SafetyDistance_AccMin+0x1>
     4a2:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <SafetyDistance_AccMin+0x2>
     4a6:	90 93 8d 02 	sts	0x028D, r25	; 0x80028d <SafetyDistance_AccMin+0x3>
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	40 e8       	ldi	r20, 0x80	; 128
     4b0:	5e e3       	ldi	r21, 0x3E	; 62
     4b2:	c3 01       	movw	r24, r6
     4b4:	b2 01       	movw	r22, r4
     4b6:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     4ba:	69 8f       	std	Y+25, r22	; 0x19
     4bc:	7a 8f       	std	Y+26, r23	; 0x1a
     4be:	8b 8f       	std	Y+27, r24	; 0x1b
     4c0:	9c 8f       	std	Y+28, r25	; 0x1c
     4c2:	60 93 86 02 	sts	0x0286, r22	; 0x800286 <__data_end>
     4c6:	70 93 87 02 	sts	0x0287, r23	; 0x800287 <__data_end+0x1>
     4ca:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <__data_end+0x2>
     4ce:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <__data_end+0x3>
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	a9 01       	movw	r20, r18
     4d8:	c7 01       	movw	r24, r14
     4da:	b6 01       	movw	r22, r12
     4dc:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     4e0:	88 23       	and	r24, r24
     4e2:	09 f4       	brne	.+2      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
     4e4:	8f c0       	rjmp	.+286    	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
     4e6:	26 e6       	ldi	r18, 0x66	; 102
     4e8:	36 e6       	ldi	r19, 0x66	; 102
     4ea:	46 e6       	ldi	r20, 0x66	; 102
     4ec:	50 e4       	ldi	r21, 0x40	; 64
     4ee:	c7 01       	movw	r24, r14
     4f0:	b6 01       	movw	r22, r12
     4f2:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     4f6:	2b 01       	movw	r4, r22
     4f8:	3c 01       	movw	r6, r24
     4fa:	9b 01       	movw	r18, r22
     4fc:	ac 01       	movw	r20, r24
     4fe:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     502:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     506:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     50a:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     50e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     512:	60 93 ba 02 	sts	0x02BA, r22	; 0x8002ba <TTC>
     516:	70 93 bb 02 	sts	0x02BB, r23	; 0x8002bb <TTC+0x1>
     51a:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <TTC+0x2>
     51e:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <TTC+0x3>
     522:	a3 01       	movw	r20, r6
     524:	92 01       	movw	r18, r4
     526:	6d 81       	ldd	r22, Y+5	; 0x05
     528:	7e 81       	ldd	r23, Y+6	; 0x06
     52a:	8f 81       	ldd	r24, Y+7	; 0x07
     52c:	98 85       	ldd	r25, Y+8	; 0x08
     52e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     532:	60 93 b6 02 	sts	0x02B6, r22	; 0x8002b6 <TTC_HalfBrake>
     536:	70 93 b7 02 	sts	0x02B7, r23	; 0x8002b7 <TTC_HalfBrake+0x1>
     53a:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <TTC_HalfBrake+0x2>
     53e:	90 93 b9 02 	sts	0x02B9, r25	; 0x8002b9 <TTC_HalfBrake+0x3>
     542:	a3 01       	movw	r20, r6
     544:	92 01       	movw	r18, r4
     546:	69 85       	ldd	r22, Y+9	; 0x09
     548:	7a 85       	ldd	r23, Y+10	; 0x0a
     54a:	8b 85       	ldd	r24, Y+11	; 0x0b
     54c:	9c 85       	ldd	r25, Y+12	; 0x0c
     54e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     552:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <TTC_HalfFullBrake>
     556:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <TTC_HalfFullBrake+0x1>
     55a:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     55e:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     562:	a3 01       	movw	r20, r6
     564:	92 01       	movw	r18, r4
     566:	6d 85       	ldd	r22, Y+13	; 0x0d
     568:	7e 85       	ldd	r23, Y+14	; 0x0e
     56a:	8f 85       	ldd	r24, Y+15	; 0x0f
     56c:	98 89       	ldd	r25, Y+16	; 0x10
     56e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     572:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <TTC_FullBrake>
     576:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <TTC_FullBrake+0x1>
     57a:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <TTC_FullBrake+0x2>
     57e:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <TTC_FullBrake+0x3>
     582:	a3 01       	movw	r20, r6
     584:	92 01       	movw	r18, r4
     586:	69 89       	ldd	r22, Y+17	; 0x11
     588:	7a 89       	ldd	r23, Y+18	; 0x12
     58a:	8b 89       	ldd	r24, Y+19	; 0x13
     58c:	9c 89       	ldd	r25, Y+20	; 0x14
     58e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     592:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <TTC_AccDisabled>
     596:	70 93 a7 02 	sts	0x02A7, r23	; 0x8002a7 <TTC_AccDisabled+0x1>
     59a:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <TTC_AccDisabled+0x2>
     59e:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <TTC_AccDisabled+0x3>
     5a2:	a3 01       	movw	r20, r6
     5a4:	92 01       	movw	r18, r4
     5a6:	6d 89       	ldd	r22, Y+21	; 0x15
     5a8:	7e 89       	ldd	r23, Y+22	; 0x16
     5aa:	8f 89       	ldd	r24, Y+23	; 0x17
     5ac:	98 8d       	ldd	r25, Y+24	; 0x18
     5ae:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     5b2:	60 93 a2 02 	sts	0x02A2, r22	; 0x8002a2 <TTC_AccMin>
     5b6:	70 93 a3 02 	sts	0x02A3, r23	; 0x8002a3 <TTC_AccMin+0x1>
     5ba:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <TTC_AccMin+0x2>
     5be:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <TTC_AccMin+0x3>
     5c2:	a3 01       	movw	r20, r6
     5c4:	92 01       	movw	r18, r4
     5c6:	69 8d       	ldd	r22, Y+25	; 0x19
     5c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     5ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
     5cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     5ce:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     5d2:	60 93 9e 02 	sts	0x029E, r22	; 0x80029e <TTC_AccMax>
     5d6:	70 93 9f 02 	sts	0x029F, r23	; 0x80029f <TTC_AccMax+0x1>
     5da:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <TTC_AccMax+0x2>
     5de:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <TTC_AccMax+0x3>
     5e2:	a3 01       	movw	r20, r6
     5e4:	92 01       	movw	r18, r4
     5e6:	69 81       	ldd	r22, Y+1	; 0x01
     5e8:	7a 81       	ldd	r23, Y+2	; 0x02
     5ea:	8b 81       	ldd	r24, Y+3	; 0x03
     5ec:	9c 81       	ldd	r25, Y+4	; 0x04
     5ee:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     5f2:	60 93 aa 02 	sts	0x02AA, r22	; 0x8002aa <TTC_SafetyDistMin>
     5f6:	70 93 ab 02 	sts	0x02AB, r23	; 0x8002ab <TTC_SafetyDistMin+0x1>
     5fa:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <TTC_SafetyDistMin+0x2>
     5fe:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <TTC_SafetyDistMin+0x3>
     602:	44 c0       	rjmp	.+136    	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
     604:	8f ef       	ldi	r24, 0xFF	; 255
     606:	9f ef       	ldi	r25, 0xFF	; 255
     608:	af e7       	ldi	r26, 0x7F	; 127
     60a:	bf e7       	ldi	r27, 0x7F	; 127
     60c:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <TTC>
     610:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <TTC+0x1>
     614:	a0 93 bc 02 	sts	0x02BC, r26	; 0x8002bc <TTC+0x2>
     618:	b0 93 bd 02 	sts	0x02BD, r27	; 0x8002bd <TTC+0x3>
     61c:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <TTC_HalfBrake>
     620:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <TTC_HalfBrake+0x1>
     624:	a0 93 b8 02 	sts	0x02B8, r26	; 0x8002b8 <TTC_HalfBrake+0x2>
     628:	b0 93 b9 02 	sts	0x02B9, r27	; 0x8002b9 <TTC_HalfBrake+0x3>
     62c:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <TTC_HalfFullBrake>
     630:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <TTC_HalfFullBrake+0x1>
     634:	a0 93 b0 02 	sts	0x02B0, r26	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     638:	b0 93 b1 02 	sts	0x02B1, r27	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     63c:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <TTC_FullBrake>
     640:	90 93 b3 02 	sts	0x02B3, r25	; 0x8002b3 <TTC_FullBrake+0x1>
     644:	a0 93 b4 02 	sts	0x02B4, r26	; 0x8002b4 <TTC_FullBrake+0x2>
     648:	b0 93 b5 02 	sts	0x02B5, r27	; 0x8002b5 <TTC_FullBrake+0x3>
     64c:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <TTC_AccDisabled>
     650:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <TTC_AccDisabled+0x1>
     654:	a0 93 a8 02 	sts	0x02A8, r26	; 0x8002a8 <TTC_AccDisabled+0x2>
     658:	b0 93 a9 02 	sts	0x02A9, r27	; 0x8002a9 <TTC_AccDisabled+0x3>
     65c:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <TTC_AccMin>
     660:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <TTC_AccMin+0x1>
     664:	a0 93 a4 02 	sts	0x02A4, r26	; 0x8002a4 <TTC_AccMin+0x2>
     668:	b0 93 a5 02 	sts	0x02A5, r27	; 0x8002a5 <TTC_AccMin+0x3>
     66c:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <TTC_AccMax>
     670:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <TTC_AccMax+0x1>
     674:	a0 93 a0 02 	sts	0x02A0, r26	; 0x8002a0 <TTC_AccMax+0x2>
     678:	b0 93 a1 02 	sts	0x02A1, r27	; 0x8002a1 <TTC_AccMax+0x3>
     67c:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <TTC_SafetyDistMin>
     680:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <TTC_SafetyDistMin+0x1>
     684:	a0 93 ac 02 	sts	0x02AC, r26	; 0x8002ac <TTC_SafetyDistMin+0x2>
     688:	b0 93 ad 02 	sts	0x02AD, r27	; 0x8002ad <TTC_SafetyDistMin+0x3>
     68c:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     690:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     694:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     698:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	a9 01       	movw	r20, r18
     6a2:	c7 01       	movw	r24, r14
     6a4:	b6 01       	movw	r22, r12
     6a6:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     6aa:	18 16       	cp	r1, r24
     6ac:	ac f4       	brge	.+42     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
     6ae:	20 91 b2 02 	lds	r18, 0x02B2	; 0x8002b2 <TTC_FullBrake>
     6b2:	30 91 b3 02 	lds	r19, 0x02B3	; 0x8002b3 <TTC_FullBrake+0x1>
     6b6:	40 91 b4 02 	lds	r20, 0x02B4	; 0x8002b4 <TTC_FullBrake+0x2>
     6ba:	50 91 b5 02 	lds	r21, 0x02B5	; 0x8002b5 <TTC_FullBrake+0x3>
     6be:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     6c2:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     6c6:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     6ca:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     6ce:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     6d2:	18 16       	cp	r1, r24
     6d4:	6c f1       	brlt	.+90     	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
     6d6:	1f c0       	rjmp	.+62     	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	a9 01       	movw	r20, r18
     6de:	c7 01       	movw	r24, r14
     6e0:	b6 01       	movw	r22, r12
     6e2:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     6e6:	18 16       	cp	r1, r24
     6e8:	0c f4       	brge	.+2      	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
     6ea:	29 c1       	rjmp	.+594    	; 0x93e <__stack+0x3f>
     6ec:	20 91 96 02 	lds	r18, 0x0296	; 0x800296 <SafetyDistance_FullBrake>
     6f0:	30 91 97 02 	lds	r19, 0x0297	; 0x800297 <SafetyDistance_FullBrake+0x1>
     6f4:	40 91 98 02 	lds	r20, 0x0298	; 0x800298 <SafetyDistance_FullBrake+0x2>
     6f8:	50 91 99 02 	lds	r21, 0x0299	; 0x800299 <SafetyDistance_FullBrake+0x3>
     6fc:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     700:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     704:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     708:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     70c:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     710:	18 16       	cp	r1, r24
     712:	0c f4       	brge	.+2      	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
     714:	f4 c1       	rjmp	.+1000   	; 0xafe <__stack+0x1ff>
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	a0 e0       	ldi	r26, 0x00	; 0
     71c:	b1 e4       	ldi	r27, 0x41	; 65
     71e:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     722:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     726:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     72a:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     72e:	4b c0       	rjmp	.+150    	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	a9 01       	movw	r20, r18
     736:	c7 01       	movw	r24, r14
     738:	b6 01       	movw	r22, r12
     73a:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     73e:	18 16       	cp	r1, r24
     740:	ac f6       	brge	.-86     	; 0x6ec <__LOCK_REGION_LENGTH__+0x2ec>
     742:	20 91 ae 02 	lds	r18, 0x02AE	; 0x8002ae <TTC_HalfFullBrake>
     746:	30 91 af 02 	lds	r19, 0x02AF	; 0x8002af <TTC_HalfFullBrake+0x1>
     74a:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     74e:	50 91 b1 02 	lds	r21, 0x02B1	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     752:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     756:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     75a:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     75e:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     762:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     766:	18 16       	cp	r1, r24
     768:	8c f1       	brlt	.+98     	; 0x7cc <__LOCK_REGION_LENGTH__+0x3cc>
     76a:	26 e6       	ldi	r18, 0x66	; 102
     76c:	36 e6       	ldi	r19, 0x66	; 102
     76e:	46 e6       	ldi	r20, 0x66	; 102
     770:	50 e4       	ldi	r21, 0x40	; 64
     772:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     776:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     77a:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     77e:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     782:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     786:	9b 01       	movw	r18, r22
     788:	ac 01       	movw	r20, r24
     78a:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     78e:	6b 01       	movw	r12, r22
     790:	7c 01       	movw	r14, r24
     792:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     796:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     79a:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     79e:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     7a2:	9b 01       	movw	r18, r22
     7a4:	ac 01       	movw	r20, r24
     7a6:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	c7 01       	movw	r24, r14
     7b0:	b6 01       	movw	r22, r12
     7b2:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     7b6:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     7ba:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     7be:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     7c2:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     7c6:	81 e0       	ldi	r24, 0x01	; 1
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	38 c1       	rjmp	.+624    	; 0xa3c <__stack+0x13d>
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	a9 01       	movw	r20, r18
     7d2:	c7 01       	movw	r24, r14
     7d4:	b6 01       	movw	r22, r12
     7d6:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     7da:	18 16       	cp	r1, r24
     7dc:	0c f0       	brlt	.+2      	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
     7de:	99 c1       	rjmp	.+818    	; 0xb12 <__stack+0x213>
     7e0:	20 91 b6 02 	lds	r18, 0x02B6	; 0x8002b6 <TTC_HalfBrake>
     7e4:	30 91 b7 02 	lds	r19, 0x02B7	; 0x8002b7 <TTC_HalfBrake+0x1>
     7e8:	40 91 b8 02 	lds	r20, 0x02B8	; 0x8002b8 <TTC_HalfBrake+0x2>
     7ec:	50 91 b9 02 	lds	r21, 0x02B9	; 0x8002b9 <TTC_HalfBrake+0x3>
     7f0:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     7f4:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     7f8:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     7fc:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     800:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     804:	18 16       	cp	r1, r24
     806:	0c f0       	brlt	.+2      	; 0x80a <__LOCK_REGION_LENGTH__+0x40a>
     808:	b7 c1       	rjmp	.+878    	; 0xb78 <__stack+0x279>
     80a:	20 e0       	ldi	r18, 0x00	; 0
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	a9 01       	movw	r20, r18
     810:	c7 01       	movw	r24, r14
     812:	b6 01       	movw	r22, r12
     814:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     818:	18 16       	cp	r1, r24
     81a:	0c f0       	brlt	.+2      	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
     81c:	99 c1       	rjmp	.+818    	; 0xb50 <__stack+0x251>
     81e:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <TTC_SafetyDistMin>
     822:	30 91 ab 02 	lds	r19, 0x02AB	; 0x8002ab <TTC_SafetyDistMin+0x1>
     826:	40 91 ac 02 	lds	r20, 0x02AC	; 0x8002ac <TTC_SafetyDistMin+0x2>
     82a:	50 91 ad 02 	lds	r21, 0x02AD	; 0x8002ad <TTC_SafetyDistMin+0x3>
     82e:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     832:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     836:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     83a:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     83e:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     842:	18 16       	cp	r1, r24
     844:	0c f0       	brlt	.+2      	; 0x848 <__LOCK_REGION_LENGTH__+0x448>
     846:	e7 c1       	rjmp	.+974    	; 0xc16 <__stack+0x317>
     848:	20 e0       	ldi	r18, 0x00	; 0
     84a:	30 e0       	ldi	r19, 0x00	; 0
     84c:	a9 01       	movw	r20, r18
     84e:	c7 01       	movw	r24, r14
     850:	b6 01       	movw	r22, r12
     852:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     856:	18 16       	cp	r1, r24
     858:	0c f0       	brlt	.+2      	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     85a:	c9 c1       	rjmp	.+914    	; 0xbee <__stack+0x2ef>
     85c:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <TTC_AccDisabled>
     860:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <TTC_AccDisabled+0x1>
     864:	40 91 a8 02 	lds	r20, 0x02A8	; 0x8002a8 <TTC_AccDisabled+0x2>
     868:	50 91 a9 02 	lds	r21, 0x02A9	; 0x8002a9 <TTC_AccDisabled+0x3>
     86c:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     870:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     874:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     878:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     87c:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     880:	18 16       	cp	r1, r24
     882:	0c f0       	brlt	.+2      	; 0x886 <__LOCK_REGION_LENGTH__+0x486>
     884:	17 c2       	rjmp	.+1070   	; 0xcb4 <__stack+0x3b5>
     886:	20 e0       	ldi	r18, 0x00	; 0
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	a9 01       	movw	r20, r18
     88c:	c7 01       	movw	r24, r14
     88e:	b6 01       	movw	r22, r12
     890:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     894:	18 16       	cp	r1, r24
     896:	0c f0       	brlt	.+2      	; 0x89a <__LOCK_REGION_LENGTH__+0x49a>
     898:	f9 c1       	rjmp	.+1010   	; 0xc8c <__stack+0x38d>
     89a:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <TTC_AccMin>
     89e:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <TTC_AccMin+0x1>
     8a2:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <TTC_AccMin+0x2>
     8a6:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <TTC_AccMin+0x3>
     8aa:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     8ae:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     8b2:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     8b6:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     8ba:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     8be:	18 16       	cp	r1, r24
     8c0:	0c f0       	brlt	.+2      	; 0x8c4 <__LOCK_REGION_LENGTH__+0x4c4>
     8c2:	1c c2       	rjmp	.+1080   	; 0xcfc <__stack+0x3fd>
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	a9 01       	movw	r20, r18
     8ca:	c7 01       	movw	r24, r14
     8cc:	b6 01       	movw	r22, r12
     8ce:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     8d2:	18 16       	cp	r1, r24
     8d4:	0c f0       	brlt	.+2      	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     8d6:	fd c1       	rjmp	.+1018   	; 0xcd2 <__stack+0x3d3>
     8d8:	20 91 9e 02 	lds	r18, 0x029E	; 0x80029e <TTC_AccMax>
     8dc:	30 91 9f 02 	lds	r19, 0x029F	; 0x80029f <TTC_AccMax+0x1>
     8e0:	40 91 a0 02 	lds	r20, 0x02A0	; 0x8002a0 <TTC_AccMax+0x2>
     8e4:	50 91 a1 02 	lds	r21, 0x02A1	; 0x8002a1 <TTC_AccMax+0x3>
     8e8:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     8ec:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     8f0:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     8f4:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     8f8:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     8fc:	18 16       	cp	r1, r24
     8fe:	0c f0       	brlt	.+2      	; 0x902 <__stack+0x3>
     900:	6c c2       	rjmp	.+1240   	; 0xdda <__stack+0x4db>
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	a9 01       	movw	r20, r18
     908:	c7 01       	movw	r24, r14
     90a:	b6 01       	movw	r22, r12
     90c:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     910:	18 16       	cp	r1, r24
     912:	0c f0       	brlt	.+2      	; 0x916 <__stack+0x17>
     914:	42 c2       	rjmp	.+1156   	; 0xd9a <__stack+0x49b>
     916:	20 91 9e 02 	lds	r18, 0x029E	; 0x80029e <TTC_AccMax>
     91a:	30 91 9f 02 	lds	r19, 0x029F	; 0x80029f <TTC_AccMax+0x1>
     91e:	40 91 a0 02 	lds	r20, 0x02A0	; 0x8002a0 <TTC_AccMax+0x2>
     922:	50 91 a1 02 	lds	r21, 0x02A1	; 0x8002a1 <TTC_AccMax+0x3>
     926:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     92a:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     92e:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     932:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     936:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     93a:	18 16       	cp	r1, r24
     93c:	fc f0       	brlt	.+62     	; 0x97c <__stack+0x7d>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	a9 01       	movw	r20, r18
     944:	c7 01       	movw	r24, r14
     946:	b6 01       	movw	r22, r12
     948:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     94c:	18 16       	cp	r1, r24
     94e:	0c f4       	brge	.+2      	; 0x952 <__stack+0x53>
     950:	99 c0       	rjmp	.+306    	; 0xa84 <__stack+0x185>
     952:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <__data_end>
     956:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <__data_end+0x1>
     95a:	40 91 88 02 	lds	r20, 0x0288	; 0x800288 <__data_end+0x2>
     95e:	50 91 89 02 	lds	r21, 0x0289	; 0x800289 <__data_end+0x3>
     962:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     966:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     96a:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     96e:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     972:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     976:	18 16       	cp	r1, r24
     978:	0c f0       	brlt	.+2      	; 0x97c <__stack+0x7d>
     97a:	84 c0       	rjmp	.+264    	; 0xa84 <__stack+0x185>
     97c:	c0 90 bd 04 	lds	r12, 0x04BD	; 0x8004bd <Speed_SetbyDriver>
     980:	d0 90 be 04 	lds	r13, 0x04BE	; 0x8004be <Speed_SetbyDriver+0x1>
     984:	e0 90 bf 04 	lds	r14, 0x04BF	; 0x8004bf <Speed_SetbyDriver+0x2>
     988:	f0 90 c0 04 	lds	r15, 0x04C0	; 0x8004c0 <Speed_SetbyDriver+0x3>
     98c:	a5 01       	movw	r20, r10
     98e:	94 01       	movw	r18, r8
     990:	c7 01       	movw	r24, r14
     992:	b6 01       	movw	r22, r12
     994:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     998:	a5 01       	movw	r20, r10
     99a:	94 01       	movw	r18, r8
     99c:	18 16       	cp	r1, r24
     99e:	64 f5       	brge	.+88     	; 0x9f8 <__stack+0xf9>
     9a0:	c7 01       	movw	r24, r14
     9a2:	b6 01       	movw	r22, r12
     9a4:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     9a8:	6b 01       	movw	r12, r22
     9aa:	7c 01       	movw	r14, r24
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	40 e4       	ldi	r20, 0x40	; 64
     9b2:	50 e4       	ldi	r21, 0x40	; 64
     9b4:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     9b8:	18 16       	cp	r1, r24
     9ba:	6c f4       	brge	.+26     	; 0x9d6 <__stack+0xd7>
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e4       	ldi	r26, 0x40	; 64
     9c2:	b0 e4       	ldi	r27, 0x40	; 64
     9c4:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     9c8:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     9cc:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     9d0:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <__stack+0xe7>
     9d6:	c0 92 d1 02 	sts	0x02D1, r12	; 0x8002d1 <Output_Acceleration>
     9da:	d0 92 d2 02 	sts	0x02D2, r13	; 0x8002d2 <Output_Acceleration+0x1>
     9de:	e0 92 d3 02 	sts	0x02D3, r14	; 0x8002d3 <Output_Acceleration+0x2>
     9e2:	f0 92 d4 02 	sts	0x02D4, r15	; 0x8002d4 <Output_Acceleration+0x3>
     9e6:	85 e0       	ldi	r24, 0x05	; 5
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     9ee:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	42 c0       	rjmp	.+132    	; 0xa7c <__stack+0x17d>
     9f8:	c7 01       	movw	r24, r14
     9fa:	b6 01       	movw	r22, r12
     9fc:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     a00:	87 ff       	sbrs	r24, 7
     a02:	34 c0       	rjmp	.+104    	; 0xa6c <__stack+0x16d>
     a04:	a5 01       	movw	r20, r10
     a06:	94 01       	movw	r18, r8
     a08:	c7 01       	movw	r24, r14
     a0a:	b6 01       	movw	r22, r12
     a0c:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	40 e4       	ldi	r20, 0x40	; 64
     a16:	50 ec       	ldi	r21, 0xC0	; 192
     a18:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     a1c:	87 ff       	sbrs	r24, 7
     a1e:	17 c0       	rjmp	.+46     	; 0xa4e <__stack+0x14f>
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	a0 e4       	ldi	r26, 0x40	; 64
     a26:	b0 e4       	ldi	r27, 0x40	; 64
     a28:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     a2c:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     a30:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     a34:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     a38:	85 e0       	ldi	r24, 0x05	; 5
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     a40:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     a44:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Status_Dec_Inc+0x1>
     a48:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Status_Dec_Inc>
     a4c:	1b c0       	rjmp	.+54     	; 0xa84 <__stack+0x185>
     a4e:	a7 01       	movw	r20, r14
     a50:	96 01       	movw	r18, r12
     a52:	c5 01       	movw	r24, r10
     a54:	b4 01       	movw	r22, r8
     a56:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     a5a:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     a5e:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     a62:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     a66:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     a6a:	e6 cf       	rjmp	.-52     	; 0xa38 <__stack+0x139>
     a6c:	85 e0       	ldi	r24, 0x05	; 5
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     a74:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     a80:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     a84:	6c 96       	adiw	r28, 0x1c	; 28
     a86:	0f b6       	in	r0, 0x3f	; 63
     a88:	f8 94       	cli
     a8a:	de bf       	out	0x3e, r29	; 62
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	cd bf       	out	0x3d, r28	; 61
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	ff 90       	pop	r15
     a96:	ef 90       	pop	r14
     a98:	df 90       	pop	r13
     a9a:	cf 90       	pop	r12
     a9c:	bf 90       	pop	r11
     a9e:	af 90       	pop	r10
     aa0:	9f 90       	pop	r9
     aa2:	8f 90       	pop	r8
     aa4:	7f 90       	pop	r7
     aa6:	6f 90       	pop	r6
     aa8:	5f 90       	pop	r5
     aaa:	4f 90       	pop	r4
     aac:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <Check_Enable_of_SubFeatures>
     ab0:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     ab4:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     ab8:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     abc:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     ac0:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     ac4:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     ad0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     ad4:	6c 96       	adiw	r28, 0x1c	; 28
     ad6:	0f b6       	in	r0, 0x3f	; 63
     ad8:	f8 94       	cli
     ada:	de bf       	out	0x3e, r29	; 62
     adc:	0f be       	out	0x3f, r0	; 63
     ade:	cd bf       	out	0x3d, r28	; 61
     ae0:	df 91       	pop	r29
     ae2:	cf 91       	pop	r28
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	cf 90       	pop	r12
     aec:	bf 90       	pop	r11
     aee:	af 90       	pop	r10
     af0:	9f 90       	pop	r9
     af2:	8f 90       	pop	r8
     af4:	7f 90       	pop	r7
     af6:	6f 90       	pop	r6
     af8:	5f 90       	pop	r5
     afa:	4f 90       	pop	r4
     afc:	08 95       	ret
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	a9 01       	movw	r20, r18
     b04:	c7 01       	movw	r24, r14
     b06:	b6 01       	movw	r22, r12
     b08:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     b0c:	18 16       	cp	r1, r24
     b0e:	0c f4       	brge	.+2      	; 0xb12 <__stack+0x213>
     b10:	18 ce       	rjmp	.-976    	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
     b12:	20 91 92 02 	lds	r18, 0x0292	; 0x800292 <SafetyDistance_HalfFullBrake>
     b16:	30 91 93 02 	lds	r19, 0x0293	; 0x800293 <SafetyDistance_HalfFullBrake+0x1>
     b1a:	40 91 94 02 	lds	r20, 0x0294	; 0x800294 <SafetyDistance_HalfFullBrake+0x2>
     b1e:	50 91 95 02 	lds	r21, 0x0295	; 0x800295 <SafetyDistance_HalfFullBrake+0x3>
     b22:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     b26:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     b2a:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     b2e:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     b32:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     b36:	18 16       	cp	r1, r24
     b38:	0c f0       	brlt	.+2      	; 0xb3c <__stack+0x23d>
     b3a:	17 ce       	rjmp	.-978    	; 0x76a <__LOCK_REGION_LENGTH__+0x36a>
     b3c:	20 e0       	ldi	r18, 0x00	; 0
     b3e:	30 e0       	ldi	r19, 0x00	; 0
     b40:	a9 01       	movw	r20, r18
     b42:	c7 01       	movw	r24, r14
     b44:	b6 01       	movw	r22, r12
     b46:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     b4a:	18 16       	cp	r1, r24
     b4c:	0c f4       	brge	.+2      	; 0xb50 <__stack+0x251>
     b4e:	48 ce       	rjmp	.-880    	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
     b50:	20 91 9a 02 	lds	r18, 0x029A	; 0x80029a <SafetyDistance_HalfBrake>
     b54:	30 91 9b 02 	lds	r19, 0x029B	; 0x80029b <SafetyDistance_HalfBrake+0x1>
     b58:	40 91 9c 02 	lds	r20, 0x029C	; 0x80029c <SafetyDistance_HalfBrake+0x2>
     b5c:	50 91 9d 02 	lds	r21, 0x029D	; 0x80029d <SafetyDistance_HalfBrake+0x3>
     b60:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     b64:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     b68:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     b6c:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     b70:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     b74:	18 16       	cp	r1, r24
     b76:	8c f1       	brlt	.+98     	; 0xbda <__stack+0x2db>
     b78:	26 e6       	ldi	r18, 0x66	; 102
     b7a:	36 e6       	ldi	r19, 0x66	; 102
     b7c:	46 e6       	ldi	r20, 0x66	; 102
     b7e:	50 e4       	ldi	r21, 0x40	; 64
     b80:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     b84:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     b88:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     b8c:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     b90:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     b94:	9b 01       	movw	r18, r22
     b96:	ac 01       	movw	r20, r24
     b98:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     b9c:	6b 01       	movw	r12, r22
     b9e:	7c 01       	movw	r14, r24
     ba0:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     ba4:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     ba8:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     bac:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     bb0:	9b 01       	movw	r18, r22
     bb2:	ac 01       	movw	r20, r24
     bb4:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     bb8:	9b 01       	movw	r18, r22
     bba:	ac 01       	movw	r20, r24
     bbc:	c7 01       	movw	r24, r14
     bbe:	b6 01       	movw	r22, r12
     bc0:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     bc4:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     bc8:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     bcc:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     bd0:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     bd4:	82 e0       	ldi	r24, 0x02	; 2
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	31 cf       	rjmp	.-414    	; 0xa3c <__stack+0x13d>
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	a9 01       	movw	r20, r18
     be0:	c7 01       	movw	r24, r14
     be2:	b6 01       	movw	r22, r12
     be4:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     be8:	18 16       	cp	r1, r24
     bea:	0c f4       	brge	.+2      	; 0xbee <__stack+0x2ef>
     bec:	18 ce       	rjmp	.-976    	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
     bee:	20 91 a9 04 	lds	r18, 0x04A9	; 0x8004a9 <Safety_Distance>
     bf2:	30 91 aa 04 	lds	r19, 0x04AA	; 0x8004aa <Safety_Distance+0x1>
     bf6:	40 91 ab 04 	lds	r20, 0x04AB	; 0x8004ab <Safety_Distance+0x2>
     bfa:	50 91 ac 04 	lds	r21, 0x04AC	; 0x8004ac <Safety_Distance+0x3>
     bfe:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     c02:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     c06:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     c0a:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     c0e:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     c12:	18 16       	cp	r1, r24
     c14:	8c f1       	brlt	.+98     	; 0xc78 <__stack+0x379>
     c16:	26 e6       	ldi	r18, 0x66	; 102
     c18:	36 e6       	ldi	r19, 0x66	; 102
     c1a:	46 e6       	ldi	r20, 0x66	; 102
     c1c:	50 e4       	ldi	r21, 0x40	; 64
     c1e:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     c22:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     c26:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     c2a:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     c2e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     c32:	9b 01       	movw	r18, r22
     c34:	ac 01       	movw	r20, r24
     c36:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     c3a:	6b 01       	movw	r12, r22
     c3c:	7c 01       	movw	r14, r24
     c3e:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     c42:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     c46:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     c4a:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     c4e:	9b 01       	movw	r18, r22
     c50:	ac 01       	movw	r20, r24
     c52:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     c56:	9b 01       	movw	r18, r22
     c58:	ac 01       	movw	r20, r24
     c5a:	c7 01       	movw	r24, r14
     c5c:	b6 01       	movw	r22, r12
     c5e:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     c62:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     c66:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     c6a:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     c6e:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     c72:	83 e0       	ldi	r24, 0x03	; 3
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	e2 ce       	rjmp	.-572    	; 0xa3c <__stack+0x13d>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	a9 01       	movw	r20, r18
     c7e:	c7 01       	movw	r24, r14
     c80:	b6 01       	movw	r22, r12
     c82:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     c86:	18 16       	cp	r1, r24
     c88:	0c f4       	brge	.+2      	; 0xc8c <__stack+0x38d>
     c8a:	e8 cd       	rjmp	.-1072   	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
     c8c:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <SafetyDistance_AccDisabled>
     c90:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <SafetyDistance_AccDisabled+0x1>
     c94:	40 91 90 02 	lds	r20, 0x0290	; 0x800290 <SafetyDistance_AccDisabled+0x2>
     c98:	50 91 91 02 	lds	r21, 0x0291	; 0x800291 <SafetyDistance_AccDisabled+0x3>
     c9c:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     ca0:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     ca4:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     ca8:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     cac:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     cb0:	18 16       	cp	r1, r24
     cb2:	2c f0       	brlt	.+10     	; 0xcbe <__stack+0x3bf>
     cb4:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     cb8:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     cbc:	dd ce       	rjmp	.-582    	; 0xa78 <__stack+0x179>
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	a9 01       	movw	r20, r18
     cc4:	c7 01       	movw	r24, r14
     cc6:	b6 01       	movw	r22, r12
     cc8:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     ccc:	18 16       	cp	r1, r24
     cce:	0c f4       	brge	.+2      	; 0xcd2 <__stack+0x3d3>
     cd0:	e4 cd       	rjmp	.-1080   	; 0x89a <__LOCK_REGION_LENGTH__+0x49a>
     cd2:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     cd6:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     cda:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     cde:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     ce2:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     ce6:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     cea:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     cee:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     cf2:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	0c f4       	brge	.+2      	; 0xcfc <__stack+0x3fd>
     cfa:	45 c0       	rjmp	.+138    	; 0xd86 <__stack+0x487>
     cfc:	26 e6       	ldi	r18, 0x66	; 102
     cfe:	36 e6       	ldi	r19, 0x66	; 102
     d00:	46 e6       	ldi	r20, 0x66	; 102
     d02:	50 e4       	ldi	r21, 0x40	; 64
     d04:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     d08:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     d0c:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     d10:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     d14:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     d18:	9b 01       	movw	r18, r22
     d1a:	ac 01       	movw	r20, r24
     d1c:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     d20:	6b 01       	movw	r12, r22
     d22:	7c 01       	movw	r14, r24
     d24:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     d28:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     d2c:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     d30:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     d34:	9b 01       	movw	r18, r22
     d36:	ac 01       	movw	r20, r24
     d38:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     d3c:	9b 01       	movw	r18, r22
     d3e:	ac 01       	movw	r20, r24
     d40:	c7 01       	movw	r24, r14
     d42:	b6 01       	movw	r22, r12
     d44:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     d48:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     d4c:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     d50:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     d54:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	40 e4       	ldi	r20, 0x40	; 64
     d5e:	50 e4       	ldi	r21, 0x40	; 64
     d60:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     d64:	18 16       	cp	r1, r24
     d66:	64 f4       	brge	.+24     	; 0xd80 <__stack+0x481>
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	a0 e4       	ldi	r26, 0x40	; 64
     d6e:	b0 e4       	ldi	r27, 0x40	; 64
     d70:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     d74:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     d78:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     d7c:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     d80:	84 e0       	ldi	r24, 0x04	; 4
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	5b ce       	rjmp	.-842    	; 0xa3c <__stack+0x13d>
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	a9 01       	movw	r20, r18
     d8c:	c7 01       	movw	r24, r14
     d8e:	b6 01       	movw	r22, r12
     d90:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     d94:	18 16       	cp	r1, r24
     d96:	0c f4       	brge	.+2      	; 0xd9a <__stack+0x49b>
     d98:	9f cd       	rjmp	.-1218   	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
     d9a:	40 90 ad 04 	lds	r4, 0x04AD	; 0x8004ad <Relative_Distance>
     d9e:	50 90 ae 04 	lds	r5, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     da2:	60 90 af 04 	lds	r6, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     da6:	70 90 b0 04 	lds	r7, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     daa:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <__data_end>
     dae:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <__data_end+0x1>
     db2:	40 91 88 02 	lds	r20, 0x0288	; 0x800288 <__data_end+0x2>
     db6:	50 91 89 02 	lds	r21, 0x0289	; 0x800289 <__data_end+0x3>
     dba:	c3 01       	movw	r24, r6
     dbc:	b2 01       	movw	r22, r4
     dbe:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     dc2:	20 e0       	ldi	r18, 0x00	; 0
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	a9 01       	movw	r20, r18
     dc8:	18 16       	cp	r1, r24
     dca:	0c f4       	brge	.+2      	; 0xdce <__stack+0x4cf>
     dcc:	8e c0       	rjmp	.+284    	; 0xeea <__stack+0x5eb>
     dce:	c7 01       	movw	r24, r14
     dd0:	b6 01       	movw	r22, r12
     dd2:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     dd6:	18 16       	cp	r1, r24
     dd8:	0c f5       	brge	.+66     	; 0xe1c <__stack+0x51d>
     dda:	26 e6       	ldi	r18, 0x66	; 102
     ddc:	36 e6       	ldi	r19, 0x66	; 102
     dde:	46 e6       	ldi	r20, 0x66	; 102
     de0:	50 e4       	ldi	r21, 0x40	; 64
     de2:	c7 01       	movw	r24, r14
     de4:	b6 01       	movw	r22, r12
     de6:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     dea:	9b 01       	movw	r18, r22
     dec:	ac 01       	movw	r20, r24
     dee:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     df2:	6b 01       	movw	r12, r22
     df4:	7c 01       	movw	r14, r24
     df6:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     dfa:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     dfe:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     e02:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     e06:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
     e0a:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
     e0e:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
     e12:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
     e16:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     e1a:	8c cf       	rjmp	.-232    	; 0xd34 <__stack+0x435>
     e1c:	20 e0       	ldi	r18, 0x00	; 0
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	a9 01       	movw	r20, r18
     e22:	c7 01       	movw	r24, r14
     e24:	b6 01       	movw	r22, r12
     e26:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
     e2a:	87 ff       	sbrs	r24, 7
     e2c:	5b c0       	rjmp	.+182    	; 0xee4 <__stack+0x5e5>
     e2e:	20 91 b3 04 	lds	r18, 0x04B3	; 0x8004b3 <Vehicle_Speed>
     e32:	30 91 b4 04 	lds	r19, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
     e36:	40 91 b5 04 	lds	r20, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
     e3a:	50 91 b6 04 	lds	r21, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
     e3e:	60 91 bd 04 	lds	r22, 0x04BD	; 0x8004bd <Speed_SetbyDriver>
     e42:	70 91 be 04 	lds	r23, 0x04BE	; 0x8004be <Speed_SetbyDriver+0x1>
     e46:	80 91 bf 04 	lds	r24, 0x04BF	; 0x8004bf <Speed_SetbyDriver+0x2>
     e4a:	90 91 c0 04 	lds	r25, 0x04C0	; 0x8004c0 <Speed_SetbyDriver+0x3>
     e4e:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     e52:	18 16       	cp	r1, r24
     e54:	0c f0       	brlt	.+2      	; 0xe58 <__stack+0x559>
     e56:	46 c0       	rjmp	.+140    	; 0xee4 <__stack+0x5e5>
     e58:	26 e6       	ldi	r18, 0x66	; 102
     e5a:	36 e6       	ldi	r19, 0x66	; 102
     e5c:	46 e6       	ldi	r20, 0x66	; 102
     e5e:	50 e4       	ldi	r21, 0x40	; 64
     e60:	c7 01       	movw	r24, r14
     e62:	b6 01       	movw	r22, r12
     e64:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     e68:	9b 01       	movw	r18, r22
     e6a:	ac 01       	movw	r20, r24
     e6c:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     e70:	6b 01       	movw	r12, r22
     e72:	7c 01       	movw	r14, r24
     e74:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     e78:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     e7c:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     e80:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     e84:	c3 01       	movw	r24, r6
     e86:	b2 01       	movw	r22, r4
     e88:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     e8c:	9b 01       	movw	r18, r22
     e8e:	ac 01       	movw	r20, r24
     e90:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
     e94:	9b 01       	movw	r18, r22
     e96:	ac 01       	movw	r20, r24
     e98:	c7 01       	movw	r24, r14
     e9a:	b6 01       	movw	r22, r12
     e9c:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     ea0:	6b 01       	movw	r12, r22
     ea2:	7c 01       	movw	r14, r24
     ea4:	20 e0       	ldi	r18, 0x00	; 0
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	40 e4       	ldi	r20, 0x40	; 64
     eaa:	50 e4       	ldi	r21, 0x40	; 64
     eac:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     eb0:	18 16       	cp	r1, r24
     eb2:	4c f0       	brlt	.+18     	; 0xec6 <__stack+0x5c7>
     eb4:	c0 92 d1 02 	sts	0x02D1, r12	; 0x8002d1 <Output_Acceleration>
     eb8:	d0 92 d2 02 	sts	0x02D2, r13	; 0x8002d2 <Output_Acceleration+0x1>
     ebc:	e0 92 d3 02 	sts	0x02D3, r14	; 0x8002d3 <Output_Acceleration+0x2>
     ec0:	f0 92 d4 02 	sts	0x02D4, r15	; 0x8002d4 <Output_Acceleration+0x3>
     ec4:	0c c0       	rjmp	.+24     	; 0xede <__stack+0x5df>
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	a0 e4       	ldi	r26, 0x40	; 64
     ecc:	b0 e4       	ldi	r27, 0x40	; 64
     ece:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     ed2:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     ed6:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     eda:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     ede:	84 e0       	ldi	r24, 0x04	; 4
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	83 cd       	rjmp	.-1274   	; 0x9ea <__stack+0xeb>
     ee4:	84 e0       	ldi	r24, 0x04	; 4
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	c3 cd       	rjmp	.-1146   	; 0xa70 <__stack+0x171>
     eea:	c7 01       	movw	r24, r14
     eec:	b6 01       	movw	r22, r12
     eee:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
     ef2:	18 16       	cp	r1, r24
     ef4:	0c f4       	brge	.+2      	; 0xef8 <__stack+0x5f9>
     ef6:	0f cd       	rjmp	.-1506   	; 0x916 <__stack+0x17>
     ef8:	2c cd       	rjmp	.-1448   	; 0x952 <__stack+0x53>

00000efa <Calc_Relative_Speed>:
     efa:	cf 92       	push	r12
     efc:	df 92       	push	r13
     efe:	ef 92       	push	r14
     f00:	ff 92       	push	r15
     f02:	6b 01       	movw	r12, r22
     f04:	7c 01       	movw	r14, r24
     f06:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <skip_first_crs>
     f0a:	81 11       	cpse	r24, r1
     f0c:	04 c0       	rjmp	.+8      	; 0xf16 <Calc_Relative_Speed+0x1c>
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <skip_first_crs>
     f14:	20 c0       	rjmp	.+64     	; 0xf56 <Calc_Relative_Speed+0x5c>
     f16:	a7 01       	movw	r20, r14
     f18:	96 01       	movw	r18, r12
     f1a:	60 91 da 02 	lds	r22, 0x02DA	; 0x8002da <Relative_Distance_Prev>
     f1e:	70 91 db 02 	lds	r23, 0x02DB	; 0x8002db <Relative_Distance_Prev+0x1>
     f22:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <Relative_Distance_Prev+0x2>
     f26:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <Relative_Distance_Prev+0x3>
     f2a:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
     f2e:	2d ec       	ldi	r18, 0xCD	; 205
     f30:	3c ec       	ldi	r19, 0xCC	; 204
     f32:	4c ec       	ldi	r20, 0xCC	; 204
     f34:	5d e3       	ldi	r21, 0x3D	; 61
     f36:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
     f3a:	26 e6       	ldi	r18, 0x66	; 102
     f3c:	36 e6       	ldi	r19, 0x66	; 102
     f3e:	46 e6       	ldi	r20, 0x66	; 102
     f40:	50 e4       	ldi	r21, 0x40	; 64
     f42:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
     f46:	60 93 d6 02 	sts	0x02D6, r22	; 0x8002d6 <Relative_Speed>
     f4a:	70 93 d7 02 	sts	0x02D7, r23	; 0x8002d7 <Relative_Speed+0x1>
     f4e:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <Relative_Speed+0x2>
     f52:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <Relative_Speed+0x3>
     f56:	c0 92 da 02 	sts	0x02DA, r12	; 0x8002da <Relative_Distance_Prev>
     f5a:	d0 92 db 02 	sts	0x02DB, r13	; 0x8002db <Relative_Distance_Prev+0x1>
     f5e:	e0 92 dc 02 	sts	0x02DC, r14	; 0x8002dc <Relative_Distance_Prev+0x2>
     f62:	f0 92 dd 02 	sts	0x02DD, r15	; 0x8002dd <Relative_Distance_Prev+0x3>
     f66:	ff 90       	pop	r15
     f68:	ef 90       	pop	r14
     f6a:	df 90       	pop	r13
     f6c:	cf 90       	pop	r12
     f6e:	08 95       	ret

00000f70 <Process_Input>:
     f70:	80 91 d1 04 	lds	r24, 0x04D1	; 0x8004d1 <CC_Enable_Internal_Test>
     f74:	90 91 d2 04 	lds	r25, 0x04D2	; 0x8004d2 <CC_Enable_Internal_Test+0x1>
     f78:	90 93 ba 04 	sts	0x04BA, r25	; 0x8004ba <CC_Enable+0x1>
     f7c:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <CC_Enable>
     f80:	80 91 c5 04 	lds	r24, 0x04C5	; 0x8004c5 <ACC_Enable_Internal_Test>
     f84:	90 91 c6 04 	lds	r25, 0x04C6	; 0x8004c6 <ACC_Enable_Internal_Test+0x1>
     f88:	90 93 b8 04 	sts	0x04B8, r25	; 0x8004b8 <ACC_Enable+0x1>
     f8c:	80 93 b7 04 	sts	0x04B7, r24	; 0x8004b7 <ACC_Enable>
     f90:	80 91 d3 04 	lds	r24, 0x04D3	; 0x8004d3 <CWAS_Enable_Internal_Test>
     f94:	90 91 d4 04 	lds	r25, 0x04D4	; 0x8004d4 <CWAS_Enable_Internal_Test+0x1>
     f98:	90 93 bc 04 	sts	0x04BC, r25	; 0x8004bc <CWAS_Enable+0x1>
     f9c:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <CWAS_Enable>
     fa0:	80 91 cf 04 	lds	r24, 0x04CF	; 0x8004cf <EBS_Enable_Internal_Test>
     fa4:	90 91 d0 04 	lds	r25, 0x04D0	; 0x8004d0 <EBS_Enable_Internal_Test+0x1>
     fa8:	90 93 b2 04 	sts	0x04B2, r25	; 0x8004b2 <EBS_Enable+0x1>
     fac:	80 93 b1 04 	sts	0x04B1, r24	; 0x8004b1 <EBS_Enable>
     fb0:	80 91 c1 04 	lds	r24, 0x04C1	; 0x8004c1 <Vehicle_Speed_Internal_Test>
     fb4:	90 91 c2 04 	lds	r25, 0x04C2	; 0x8004c2 <Vehicle_Speed_Internal_Test+0x1>
     fb8:	a0 91 c3 04 	lds	r26, 0x04C3	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x2>
     fbc:	b0 91 c4 04 	lds	r27, 0x04C4	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x3>
     fc0:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <Vehicle_Speed>
     fc4:	90 93 b4 04 	sts	0x04B4, r25	; 0x8004b4 <Vehicle_Speed+0x1>
     fc8:	a0 93 b5 04 	sts	0x04B5, r26	; 0x8004b5 <Vehicle_Speed+0x2>
     fcc:	b0 93 b6 04 	sts	0x04B6, r27	; 0x8004b6 <Vehicle_Speed+0x3>
     fd0:	80 91 c7 04 	lds	r24, 0x04C7	; 0x8004c7 <Relative_Distance_Internal_Test>
     fd4:	90 91 c8 04 	lds	r25, 0x04C8	; 0x8004c8 <Relative_Distance_Internal_Test+0x1>
     fd8:	a0 91 c9 04 	lds	r26, 0x04C9	; 0x8004c9 <Relative_Distance_Internal_Test+0x2>
     fdc:	b0 91 ca 04 	lds	r27, 0x04CA	; 0x8004ca <Relative_Distance_Internal_Test+0x3>
     fe0:	80 93 ad 04 	sts	0x04AD, r24	; 0x8004ad <Relative_Distance>
     fe4:	90 93 ae 04 	sts	0x04AE, r25	; 0x8004ae <Relative_Distance+0x1>
     fe8:	a0 93 af 04 	sts	0x04AF, r26	; 0x8004af <Relative_Distance+0x2>
     fec:	b0 93 b0 04 	sts	0x04B0, r27	; 0x8004b0 <Relative_Distance+0x3>
     ff0:	80 91 cb 04 	lds	r24, 0x04CB	; 0x8004cb <Speed_SetbyDriver_Internal_Test>
     ff4:	90 91 cc 04 	lds	r25, 0x04CC	; 0x8004cc <Speed_SetbyDriver_Internal_Test+0x1>
     ff8:	a0 91 cd 04 	lds	r26, 0x04CD	; 0x8004cd <Speed_SetbyDriver_Internal_Test+0x2>
     ffc:	b0 91 ce 04 	lds	r27, 0x04CE	; 0x8004ce <Speed_SetbyDriver_Internal_Test+0x3>
    1000:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <Speed_SetbyDriver>
    1004:	90 93 be 04 	sts	0x04BE, r25	; 0x8004be <Speed_SetbyDriver+0x1>
    1008:	a0 93 bf 04 	sts	0x04BF, r26	; 0x8004bf <Speed_SetbyDriver+0x2>
    100c:	b0 93 c0 04 	sts	0x04C0, r27	; 0x8004c0 <Speed_SetbyDriver+0x3>
    1010:	08 95       	ret

00001012 <Process_Output>:
    1012:	5f 92       	push	r5
    1014:	6f 92       	push	r6
    1016:	7f 92       	push	r7
    1018:	8f 92       	push	r8
    101a:	9f 92       	push	r9
    101c:	af 92       	push	r10
    101e:	bf 92       	push	r11
    1020:	cf 92       	push	r12
    1022:	df 92       	push	r13
    1024:	ef 92       	push	r14
    1026:	ff 92       	push	r15
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	0d b7       	in	r16, 0x3d	; 61
    1036:	1e b7       	in	r17, 0x3e	; 62
    1038:	8c e3       	ldi	r24, 0x3C	; 60
    103a:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <output_char>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e2       	ldi	r20, 0x20	; 32
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
    104a:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
    104e:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
    1052:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
    1056:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    105a:	0e 94 86 14 	call	0x290c	; 0x290c <__fixsfsi>
    105e:	9b 01       	movw	r18, r22
    1060:	cb 01       	movw	r24, r22
    1062:	a1 2c       	mov	r10, r1
    1064:	b1 2c       	mov	r11, r1
    1066:	ea e0       	ldi	r30, 0x0A	; 10
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	a5 01       	movw	r20, r10
    106c:	4f 5f       	subi	r20, 0xFF	; 255
    106e:	5f 4f       	sbci	r21, 0xFF	; 255
    1070:	6a 01       	movw	r12, r20
    1072:	18 16       	cp	r1, r24
    1074:	19 06       	cpc	r1, r25
    1076:	34 f4       	brge	.+12     	; 0x1084 <Process_Output+0x72>
    1078:	bf 01       	movw	r22, r30
    107a:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <__divmodhi4>
    107e:	cb 01       	movw	r24, r22
    1080:	56 01       	movw	r10, r12
    1082:	f3 cf       	rjmp	.-26     	; 0x106a <Process_Output+0x58>
    1084:	8d b6       	in	r8, 0x3d	; 61
    1086:	9e b6       	in	r9, 0x3e	; 62
    1088:	8d b7       	in	r24, 0x3d	; 61
    108a:	9e b7       	in	r25, 0x3e	; 62
    108c:	84 1b       	sub	r24, r20
    108e:	95 0b       	sbc	r25, r21
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	9e bf       	out	0x3e, r25	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	8d bf       	out	0x3d, r24	; 61
    109a:	ad b7       	in	r26, 0x3d	; 61
    109c:	be b7       	in	r27, 0x3e	; 62
    109e:	11 96       	adiw	r26, 0x01	; 1
    10a0:	7d 01       	movw	r14, r26
    10a2:	3f 93       	push	r19
    10a4:	2f 93       	push	r18
    10a6:	80 e8       	ldi	r24, 0x80	; 128
    10a8:	91 e0       	ldi	r25, 0x01	; 1
    10aa:	9f 93       	push	r25
    10ac:	8f 93       	push	r24
    10ae:	df 92       	push	r13
    10b0:	4f 93       	push	r20
    10b2:	ff 92       	push	r15
    10b4:	af 93       	push	r26
    10b6:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <snprintf>
    10ba:	f7 01       	movw	r30, r14
    10bc:	af ed       	ldi	r26, 0xDF	; 223
    10be:	b2 e0       	ldi	r27, 0x02	; 2
    10c0:	c7 01       	movw	r24, r14
    10c2:	8a 0d       	add	r24, r10
    10c4:	9b 1d       	adc	r25, r11
    10c6:	2d b7       	in	r18, 0x3d	; 61
    10c8:	3e b7       	in	r19, 0x3e	; 62
    10ca:	28 5f       	subi	r18, 0xF8	; 248
    10cc:	3f 4f       	sbci	r19, 0xFF	; 255
    10ce:	0f b6       	in	r0, 0x3f	; 63
    10d0:	f8 94       	cli
    10d2:	3e bf       	out	0x3e, r19	; 62
    10d4:	0f be       	out	0x3f, r0	; 63
    10d6:	2d bf       	out	0x3d, r18	; 61
    10d8:	e8 17       	cp	r30, r24
    10da:	f9 07       	cpc	r31, r25
    10dc:	19 f0       	breq	.+6      	; 0x10e4 <Process_Output+0xd2>
    10de:	21 91       	ld	r18, Z+
    10e0:	2d 93       	st	X+, r18
    10e2:	fa cf       	rjmp	.-12     	; 0x10d8 <Process_Output+0xc6>
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	9e be       	out	0x3e, r9	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	8d be       	out	0x3d, r8	; 61
    10ee:	8e e2       	ldi	r24, 0x2E	; 46
    10f0:	f6 01       	movw	r30, r12
    10f2:	e2 52       	subi	r30, 0x22	; 34
    10f4:	fd 4f       	sbci	r31, 0xFD	; 253
    10f6:	80 83       	st	Z, r24
    10f8:	60 91 b3 04 	lds	r22, 0x04B3	; 0x8004b3 <Vehicle_Speed>
    10fc:	70 91 b4 04 	lds	r23, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
    1100:	80 91 b5 04 	lds	r24, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
    1104:	90 91 b6 04 	lds	r25, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
    1108:	0e 94 86 14 	call	0x290c	; 0x290c <__fixsfsi>
    110c:	46 2f       	mov	r20, r22
    110e:	57 2e       	mov	r5, r23
    1110:	86 2f       	mov	r24, r22
    1112:	95 2d       	mov	r25, r5
    1114:	61 2c       	mov	r6, r1
    1116:	71 2c       	mov	r7, r1
    1118:	ea e0       	ldi	r30, 0x0A	; 10
    111a:	f0 e0       	ldi	r31, 0x00	; 0
    111c:	93 01       	movw	r18, r6
    111e:	2f 5f       	subi	r18, 0xFF	; 255
    1120:	3f 4f       	sbci	r19, 0xFF	; 255
    1122:	18 16       	cp	r1, r24
    1124:	19 06       	cpc	r1, r25
    1126:	34 f4       	brge	.+12     	; 0x1134 <Process_Output+0x122>
    1128:	bf 01       	movw	r22, r30
    112a:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <__divmodhi4>
    112e:	cb 01       	movw	r24, r22
    1130:	39 01       	movw	r6, r18
    1132:	f4 cf       	rjmp	.-24     	; 0x111c <Process_Output+0x10a>
    1134:	8d b6       	in	r8, 0x3d	; 61
    1136:	9e b6       	in	r9, 0x3e	; 62
    1138:	8d b7       	in	r24, 0x3d	; 61
    113a:	9e b7       	in	r25, 0x3e	; 62
    113c:	82 1b       	sub	r24, r18
    113e:	93 0b       	sbc	r25, r19
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	9e bf       	out	0x3e, r25	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	8d bf       	out	0x3d, r24	; 61
    114a:	ad b7       	in	r26, 0x3d	; 61
    114c:	be b7       	in	r27, 0x3e	; 62
    114e:	11 96       	adiw	r26, 0x01	; 1
    1150:	7d 01       	movw	r14, r26
    1152:	5f 92       	push	r5
    1154:	4f 93       	push	r20
    1156:	80 e8       	ldi	r24, 0x80	; 128
    1158:	91 e0       	ldi	r25, 0x01	; 1
    115a:	9f 93       	push	r25
    115c:	8f 93       	push	r24
    115e:	3f 93       	push	r19
    1160:	2f 93       	push	r18
    1162:	ff 92       	push	r15
    1164:	af 93       	push	r26
    1166:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <snprintf>
    116a:	f7 01       	movw	r30, r14
    116c:	2d b7       	in	r18, 0x3d	; 61
    116e:	3e b7       	in	r19, 0x3e	; 62
    1170:	28 5f       	subi	r18, 0xF8	; 248
    1172:	3f 4f       	sbci	r19, 0xFF	; 255
    1174:	0f b6       	in	r0, 0x3f	; 63
    1176:	f8 94       	cli
    1178:	3e bf       	out	0x3e, r19	; 62
    117a:	0f be       	out	0x3f, r0	; 63
    117c:	2d bf       	out	0x3d, r18	; 61
    117e:	e1 2c       	mov	r14, r1
    1180:	f1 2c       	mov	r15, r1
    1182:	e6 14       	cp	r14, r6
    1184:	f7 04       	cpc	r15, r7
    1186:	61 f0       	breq	.+24     	; 0x11a0 <Process_Output+0x18e>
    1188:	81 91       	ld	r24, Z+
    118a:	d7 01       	movw	r26, r14
    118c:	aa 0d       	add	r26, r10
    118e:	bb 1d       	adc	r27, r11
    1190:	a2 52       	subi	r26, 0x22	; 34
    1192:	bd 4f       	sbci	r27, 0xFD	; 253
    1194:	12 96       	adiw	r26, 0x02	; 2
    1196:	8c 93       	st	X, r24
    1198:	3f ef       	ldi	r19, 0xFF	; 255
    119a:	e3 1a       	sub	r14, r19
    119c:	f3 0a       	sbc	r15, r19
    119e:	f1 cf       	rjmp	.-30     	; 0x1182 <Process_Output+0x170>
    11a0:	ec 0c       	add	r14, r12
    11a2:	fd 1c       	adc	r15, r13
    11a4:	0f b6       	in	r0, 0x3f	; 63
    11a6:	f8 94       	cli
    11a8:	9e be       	out	0x3e, r9	; 62
    11aa:	0f be       	out	0x3f, r0	; 63
    11ac:	8d be       	out	0x3d, r8	; 61
    11ae:	67 01       	movw	r12, r14
    11b0:	4f ef       	ldi	r20, 0xFF	; 255
    11b2:	c4 1a       	sub	r12, r20
    11b4:	d4 0a       	sbc	r13, r20
    11b6:	f6 01       	movw	r30, r12
    11b8:	e2 52       	subi	r30, 0x22	; 34
    11ba:	fd 4f       	sbci	r31, 0xFD	; 253
    11bc:	8e e2       	ldi	r24, 0x2E	; 46
    11be:	80 83       	st	Z, r24
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	40 e2       	ldi	r20, 0x20	; 32
    11c6:	51 e4       	ldi	r21, 0x41	; 65
    11c8:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <Relative_Speed>
    11cc:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
    11d0:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
    11d4:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
    11d8:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    11dc:	0e 94 86 14 	call	0x290c	; 0x290c <__fixsfsi>
    11e0:	46 2f       	mov	r20, r22
    11e2:	57 2e       	mov	r5, r23
    11e4:	86 2f       	mov	r24, r22
    11e6:	95 2d       	mov	r25, r5
    11e8:	61 2c       	mov	r6, r1
    11ea:	71 2c       	mov	r7, r1
    11ec:	ea e0       	ldi	r30, 0x0A	; 10
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	93 01       	movw	r18, r6
    11f2:	2f 5f       	subi	r18, 0xFF	; 255
    11f4:	3f 4f       	sbci	r19, 0xFF	; 255
    11f6:	18 16       	cp	r1, r24
    11f8:	19 06       	cpc	r1, r25
    11fa:	34 f4       	brge	.+12     	; 0x1208 <Process_Output+0x1f6>
    11fc:	bf 01       	movw	r22, r30
    11fe:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <__divmodhi4>
    1202:	cb 01       	movw	r24, r22
    1204:	39 01       	movw	r6, r18
    1206:	f4 cf       	rjmp	.-24     	; 0x11f0 <Process_Output+0x1de>
    1208:	ad b6       	in	r10, 0x3d	; 61
    120a:	be b6       	in	r11, 0x3e	; 62
    120c:	8d b7       	in	r24, 0x3d	; 61
    120e:	9e b7       	in	r25, 0x3e	; 62
    1210:	82 1b       	sub	r24, r18
    1212:	93 0b       	sbc	r25, r19
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	9e bf       	out	0x3e, r25	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	8d bf       	out	0x3d, r24	; 61
    121e:	ad b7       	in	r26, 0x3d	; 61
    1220:	be b7       	in	r27, 0x3e	; 62
    1222:	11 96       	adiw	r26, 0x01	; 1
    1224:	4d 01       	movw	r8, r26
    1226:	5f 92       	push	r5
    1228:	4f 93       	push	r20
    122a:	80 e8       	ldi	r24, 0x80	; 128
    122c:	91 e0       	ldi	r25, 0x01	; 1
    122e:	9f 93       	push	r25
    1230:	8f 93       	push	r24
    1232:	3f 93       	push	r19
    1234:	2f 93       	push	r18
    1236:	9f 92       	push	r9
    1238:	af 93       	push	r26
    123a:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <snprintf>
    123e:	f4 01       	movw	r30, r8
    1240:	2d b7       	in	r18, 0x3d	; 61
    1242:	3e b7       	in	r19, 0x3e	; 62
    1244:	28 5f       	subi	r18, 0xF8	; 248
    1246:	3f 4f       	sbci	r19, 0xFF	; 255
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	f8 94       	cli
    124c:	3e bf       	out	0x3e, r19	; 62
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	2d bf       	out	0x3d, r18	; 61
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	86 15       	cp	r24, r6
    1258:	97 05       	cpc	r25, r7
    125a:	51 f0       	breq	.+20     	; 0x1270 <Process_Output+0x25e>
    125c:	21 91       	ld	r18, Z+
    125e:	dc 01       	movw	r26, r24
    1260:	ae 0d       	add	r26, r14
    1262:	bf 1d       	adc	r27, r15
    1264:	a2 52       	subi	r26, 0x22	; 34
    1266:	bd 4f       	sbci	r27, 0xFD	; 253
    1268:	12 96       	adiw	r26, 0x02	; 2
    126a:	2c 93       	st	X, r18
    126c:	01 96       	adiw	r24, 0x01	; 1
    126e:	f3 cf       	rjmp	.-26     	; 0x1256 <Process_Output+0x244>
    1270:	c8 0e       	add	r12, r24
    1272:	d9 1e       	adc	r13, r25
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	be be       	out	0x3e, r11	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	ad be       	out	0x3d, r10	; 61
    127e:	76 01       	movw	r14, r12
    1280:	3f ef       	ldi	r19, 0xFF	; 255
    1282:	e3 1a       	sub	r14, r19
    1284:	f3 0a       	sbc	r15, r19
    1286:	f7 01       	movw	r30, r14
    1288:	e2 52       	subi	r30, 0x22	; 34
    128a:	fd 4f       	sbci	r31, 0xFD	; 253
    128c:	8e e2       	ldi	r24, 0x2E	; 46
    128e:	80 83       	st	Z, r24
    1290:	20 e0       	ldi	r18, 0x00	; 0
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	40 e2       	ldi	r20, 0x20	; 32
    1296:	51 e4       	ldi	r21, 0x41	; 65
    1298:	60 91 a9 04 	lds	r22, 0x04A9	; 0x8004a9 <Safety_Distance>
    129c:	70 91 aa 04 	lds	r23, 0x04AA	; 0x8004aa <Safety_Distance+0x1>
    12a0:	80 91 ab 04 	lds	r24, 0x04AB	; 0x8004ab <Safety_Distance+0x2>
    12a4:	90 91 ac 04 	lds	r25, 0x04AC	; 0x8004ac <Safety_Distance+0x3>
    12a8:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    12ac:	0e 94 86 14 	call	0x290c	; 0x290c <__fixsfsi>
    12b0:	46 2f       	mov	r20, r22
    12b2:	57 2e       	mov	r5, r23
    12b4:	86 2f       	mov	r24, r22
    12b6:	95 2d       	mov	r25, r5
    12b8:	61 2c       	mov	r6, r1
    12ba:	71 2c       	mov	r7, r1
    12bc:	ea e0       	ldi	r30, 0x0A	; 10
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	93 01       	movw	r18, r6
    12c2:	2f 5f       	subi	r18, 0xFF	; 255
    12c4:	3f 4f       	sbci	r19, 0xFF	; 255
    12c6:	18 16       	cp	r1, r24
    12c8:	19 06       	cpc	r1, r25
    12ca:	34 f4       	brge	.+12     	; 0x12d8 <Process_Output+0x2c6>
    12cc:	bf 01       	movw	r22, r30
    12ce:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <__divmodhi4>
    12d2:	cb 01       	movw	r24, r22
    12d4:	39 01       	movw	r6, r18
    12d6:	f4 cf       	rjmp	.-24     	; 0x12c0 <Process_Output+0x2ae>
    12d8:	ad b6       	in	r10, 0x3d	; 61
    12da:	be b6       	in	r11, 0x3e	; 62
    12dc:	8d b7       	in	r24, 0x3d	; 61
    12de:	9e b7       	in	r25, 0x3e	; 62
    12e0:	82 1b       	sub	r24, r18
    12e2:	93 0b       	sbc	r25, r19
    12e4:	0f b6       	in	r0, 0x3f	; 63
    12e6:	f8 94       	cli
    12e8:	9e bf       	out	0x3e, r25	; 62
    12ea:	0f be       	out	0x3f, r0	; 63
    12ec:	8d bf       	out	0x3d, r24	; 61
    12ee:	ad b7       	in	r26, 0x3d	; 61
    12f0:	be b7       	in	r27, 0x3e	; 62
    12f2:	11 96       	adiw	r26, 0x01	; 1
    12f4:	4d 01       	movw	r8, r26
    12f6:	5f 92       	push	r5
    12f8:	4f 93       	push	r20
    12fa:	80 e8       	ldi	r24, 0x80	; 128
    12fc:	91 e0       	ldi	r25, 0x01	; 1
    12fe:	9f 93       	push	r25
    1300:	8f 93       	push	r24
    1302:	3f 93       	push	r19
    1304:	2f 93       	push	r18
    1306:	9f 92       	push	r9
    1308:	af 93       	push	r26
    130a:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <snprintf>
    130e:	f4 01       	movw	r30, r8
    1310:	2d b7       	in	r18, 0x3d	; 61
    1312:	3e b7       	in	r19, 0x3e	; 62
    1314:	28 5f       	subi	r18, 0xF8	; 248
    1316:	3f 4f       	sbci	r19, 0xFF	; 255
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	3e bf       	out	0x3e, r19	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	2d bf       	out	0x3d, r18	; 61
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	86 15       	cp	r24, r6
    1328:	97 05       	cpc	r25, r7
    132a:	51 f0       	breq	.+20     	; 0x1340 <Process_Output+0x32e>
    132c:	21 91       	ld	r18, Z+
    132e:	dc 01       	movw	r26, r24
    1330:	ac 0d       	add	r26, r12
    1332:	bd 1d       	adc	r27, r13
    1334:	a2 52       	subi	r26, 0x22	; 34
    1336:	bd 4f       	sbci	r27, 0xFD	; 253
    1338:	12 96       	adiw	r26, 0x02	; 2
    133a:	2c 93       	st	X, r18
    133c:	01 96       	adiw	r24, 0x01	; 1
    133e:	f3 cf       	rjmp	.-26     	; 0x1326 <Process_Output+0x314>
    1340:	e8 0e       	add	r14, r24
    1342:	f9 1e       	adc	r15, r25
    1344:	0f b6       	in	r0, 0x3f	; 63
    1346:	f8 94       	cli
    1348:	be be       	out	0x3e, r11	; 62
    134a:	0f be       	out	0x3f, r0	; 63
    134c:	ad be       	out	0x3d, r10	; 61
    134e:	67 01       	movw	r12, r14
    1350:	3f ef       	ldi	r19, 0xFF	; 255
    1352:	c3 1a       	sub	r12, r19
    1354:	d3 0a       	sbc	r13, r19
    1356:	f6 01       	movw	r30, r12
    1358:	e2 52       	subi	r30, 0x22	; 34
    135a:	fd 4f       	sbci	r31, 0xFD	; 253
    135c:	8e e2       	ldi	r24, 0x2E	; 46
    135e:	80 83       	st	Z, r24
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	4a e7       	ldi	r20, 0x7A	; 122
    1366:	54 e4       	ldi	r21, 0x44	; 68
    1368:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    136c:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    1370:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    1374:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    1378:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    137c:	0e 94 86 14 	call	0x290c	; 0x290c <__fixsfsi>
    1380:	46 2f       	mov	r20, r22
    1382:	77 2e       	mov	r7, r23
    1384:	86 2f       	mov	r24, r22
    1386:	97 2d       	mov	r25, r7
    1388:	a1 2c       	mov	r10, r1
    138a:	b1 2c       	mov	r11, r1
    138c:	ea e0       	ldi	r30, 0x0A	; 10
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	95 01       	movw	r18, r10
    1392:	2f 5f       	subi	r18, 0xFF	; 255
    1394:	3f 4f       	sbci	r19, 0xFF	; 255
    1396:	18 16       	cp	r1, r24
    1398:	19 06       	cpc	r1, r25
    139a:	34 f4       	brge	.+12     	; 0x13a8 <Process_Output+0x396>
    139c:	bf 01       	movw	r22, r30
    139e:	0e 94 a3 15 	call	0x2b46	; 0x2b46 <__divmodhi4>
    13a2:	cb 01       	movw	r24, r22
    13a4:	59 01       	movw	r10, r18
    13a6:	f4 cf       	rjmp	.-24     	; 0x1390 <Process_Output+0x37e>
    13a8:	8d b7       	in	r24, 0x3d	; 61
    13aa:	9e b7       	in	r25, 0x3e	; 62
    13ac:	82 1b       	sub	r24, r18
    13ae:	93 0b       	sbc	r25, r19
    13b0:	0f b6       	in	r0, 0x3f	; 63
    13b2:	f8 94       	cli
    13b4:	9e bf       	out	0x3e, r25	; 62
    13b6:	0f be       	out	0x3f, r0	; 63
    13b8:	8d bf       	out	0x3d, r24	; 61
    13ba:	ad b7       	in	r26, 0x3d	; 61
    13bc:	be b7       	in	r27, 0x3e	; 62
    13be:	11 96       	adiw	r26, 0x01	; 1
    13c0:	4d 01       	movw	r8, r26
    13c2:	7f 92       	push	r7
    13c4:	4f 93       	push	r20
    13c6:	80 e8       	ldi	r24, 0x80	; 128
    13c8:	91 e0       	ldi	r25, 0x01	; 1
    13ca:	9f 93       	push	r25
    13cc:	8f 93       	push	r24
    13ce:	3f 93       	push	r19
    13d0:	2f 93       	push	r18
    13d2:	9f 92       	push	r9
    13d4:	af 93       	push	r26
    13d6:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <snprintf>
    13da:	a4 01       	movw	r20, r8
    13dc:	2d b7       	in	r18, 0x3d	; 61
    13de:	3e b7       	in	r19, 0x3e	; 62
    13e0:	28 5f       	subi	r18, 0xF8	; 248
    13e2:	3f 4f       	sbci	r19, 0xFF	; 255
    13e4:	0f b6       	in	r0, 0x3f	; 63
    13e6:	f8 94       	cli
    13e8:	3e bf       	out	0x3e, r19	; 62
    13ea:	0f be       	out	0x3f, r0	; 63
    13ec:	2d bf       	out	0x3d, r18	; 61
    13ee:	e0 e0       	ldi	r30, 0x00	; 0
    13f0:	f0 e0       	ldi	r31, 0x00	; 0
    13f2:	ea 15       	cp	r30, r10
    13f4:	fb 05       	cpc	r31, r11
    13f6:	69 f0       	breq	.+26     	; 0x1412 <Process_Output+0x400>
    13f8:	da 01       	movw	r26, r20
    13fa:	2d 91       	ld	r18, X+
    13fc:	ad 01       	movw	r20, r26
    13fe:	cf 01       	movw	r24, r30
    1400:	8e 0d       	add	r24, r14
    1402:	9f 1d       	adc	r25, r15
    1404:	82 52       	subi	r24, 0x22	; 34
    1406:	9d 4f       	sbci	r25, 0xFD	; 253
    1408:	dc 01       	movw	r26, r24
    140a:	12 96       	adiw	r26, 0x02	; 2
    140c:	2c 93       	st	X, r18
    140e:	31 96       	adiw	r30, 0x01	; 1
    1410:	f0 cf       	rjmp	.-32     	; 0x13f2 <Process_Output+0x3e0>
    1412:	ec 0d       	add	r30, r12
    1414:	fd 1d       	adc	r31, r13
    1416:	e2 52       	subi	r30, 0x22	; 34
    1418:	fd 4f       	sbci	r31, 0xFD	; 253
    141a:	9e e2       	ldi	r25, 0x2E	; 46
    141c:	91 83       	std	Z+1, r25	; 0x01
    141e:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <Status_Accel_Decel>
    1422:	80 5d       	subi	r24, 0xD0	; 208
    1424:	82 83       	std	Z+2, r24	; 0x02
    1426:	93 83       	std	Z+3, r25	; 0x03
    1428:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Status_Dec_Inc>
    142c:	80 5d       	subi	r24, 0xD0	; 208
    142e:	84 83       	std	Z+4, r24	; 0x04
    1430:	8e e3       	ldi	r24, 0x3E	; 62
    1432:	85 83       	std	Z+5, r24	; 0x05
    1434:	16 82       	std	Z+6, r1	; 0x06
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	1e bf       	out	0x3e, r17	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	0d bf       	out	0x3d, r16	; 61
    1440:	df 91       	pop	r29
    1442:	cf 91       	pop	r28
    1444:	1f 91       	pop	r17
    1446:	0f 91       	pop	r16
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	bf 90       	pop	r11
    1452:	af 90       	pop	r10
    1454:	9f 90       	pop	r9
    1456:	8f 90       	pop	r8
    1458:	7f 90       	pop	r7
    145a:	6f 90       	pop	r6
    145c:	5f 90       	pop	r5
    145e:	08 95       	ret

00001460 <Run_Test_with_Internal_Variable>:
    1460:	4f 92       	push	r4
    1462:	5f 92       	push	r5
    1464:	6f 92       	push	r6
    1466:	7f 92       	push	r7
    1468:	8f 92       	push	r8
    146a:	9f 92       	push	r9
    146c:	af 92       	push	r10
    146e:	bf 92       	push	r11
    1470:	cf 92       	push	r12
    1472:	df 92       	push	r13
    1474:	ef 92       	push	r14
    1476:	ff 92       	push	r15
    1478:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <initial_settings>
    147c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <initial_settings+0x1>
    1480:	81 30       	cpi	r24, 0x01	; 1
    1482:	91 05       	cpc	r25, r1
    1484:	c9 f5       	brne	.+114    	; 0x14f8 <Run_Test_with_Internal_Variable+0x98>
    1486:	40 e0       	ldi	r20, 0x00	; 0
    1488:	50 e0       	ldi	r21, 0x00	; 0
    148a:	68 e4       	ldi	r22, 0x48	; 72
    148c:	72 e4       	ldi	r23, 0x42	; 66
    148e:	40 93 c1 04 	sts	0x04C1, r20	; 0x8004c1 <Vehicle_Speed_Internal_Test>
    1492:	50 93 c2 04 	sts	0x04C2, r21	; 0x8004c2 <Vehicle_Speed_Internal_Test+0x1>
    1496:	60 93 c3 04 	sts	0x04C3, r22	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x2>
    149a:	70 93 c4 04 	sts	0x04C4, r23	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x3>
    149e:	40 e0       	ldi	r20, 0x00	; 0
    14a0:	50 e0       	ldi	r21, 0x00	; 0
    14a2:	6c e8       	ldi	r22, 0x8C	; 140
    14a4:	72 e4       	ldi	r23, 0x42	; 66
    14a6:	40 93 cb 04 	sts	0x04CB, r20	; 0x8004cb <Speed_SetbyDriver_Internal_Test>
    14aa:	50 93 cc 04 	sts	0x04CC, r21	; 0x8004cc <Speed_SetbyDriver_Internal_Test+0x1>
    14ae:	60 93 cd 04 	sts	0x04CD, r22	; 0x8004cd <Speed_SetbyDriver_Internal_Test+0x2>
    14b2:	70 93 ce 04 	sts	0x04CE, r23	; 0x8004ce <Speed_SetbyDriver_Internal_Test+0x3>
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	50 e0       	ldi	r21, 0x00	; 0
    14ba:	60 e6       	ldi	r22, 0x60	; 96
    14bc:	71 e4       	ldi	r23, 0x41	; 65
    14be:	40 93 c7 04 	sts	0x04C7, r20	; 0x8004c7 <Relative_Distance_Internal_Test>
    14c2:	50 93 c8 04 	sts	0x04C8, r21	; 0x8004c8 <Relative_Distance_Internal_Test+0x1>
    14c6:	60 93 c9 04 	sts	0x04C9, r22	; 0x8004c9 <Relative_Distance_Internal_Test+0x2>
    14ca:	70 93 ca 04 	sts	0x04CA, r23	; 0x8004ca <Relative_Distance_Internal_Test+0x3>
    14ce:	90 93 d2 04 	sts	0x04D2, r25	; 0x8004d2 <CC_Enable_Internal_Test+0x1>
    14d2:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <CC_Enable_Internal_Test>
    14d6:	90 93 c6 04 	sts	0x04C6, r25	; 0x8004c6 <ACC_Enable_Internal_Test+0x1>
    14da:	80 93 c5 04 	sts	0x04C5, r24	; 0x8004c5 <ACC_Enable_Internal_Test>
    14de:	90 93 d4 04 	sts	0x04D4, r25	; 0x8004d4 <CWAS_Enable_Internal_Test+0x1>
    14e2:	80 93 d3 04 	sts	0x04D3, r24	; 0x8004d3 <CWAS_Enable_Internal_Test>
    14e6:	90 93 d0 04 	sts	0x04D0, r25	; 0x8004d0 <EBS_Enable_Internal_Test+0x1>
    14ea:	80 93 cf 04 	sts	0x04CF, r24	; 0x8004cf <EBS_Enable_Internal_Test>
    14ee:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <initial_settings+0x1>
    14f2:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <initial_settings>
    14f6:	b9 c0       	rjmp	.+370    	; 0x166a <Run_Test_with_Internal_Variable+0x20a>
    14f8:	80 90 c1 04 	lds	r8, 0x04C1	; 0x8004c1 <Vehicle_Speed_Internal_Test>
    14fc:	90 90 c2 04 	lds	r9, 0x04C2	; 0x8004c2 <Vehicle_Speed_Internal_Test+0x1>
    1500:	a0 90 c3 04 	lds	r10, 0x04C3	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x2>
    1504:	b0 90 c4 04 	lds	r11, 0x04C4	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x3>
    1508:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <target_vehicle_speed.1488>
    150c:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <target_vehicle_speed.1488+0x1>
    1510:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <target_vehicle_speed.1488+0x2>
    1514:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <target_vehicle_speed.1488+0x3>
    1518:	a7 01       	movw	r20, r14
    151a:	96 01       	movw	r18, r12
    151c:	c5 01       	movw	r24, r10
    151e:	b4 01       	movw	r22, r8
    1520:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
    1524:	2d ec       	ldi	r18, 0xCD	; 205
    1526:	3c ec       	ldi	r19, 0xCC	; 204
    1528:	4c ec       	ldi	r20, 0xCC	; 204
    152a:	5d e3       	ldi	r21, 0x3D	; 61
    152c:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    1530:	26 e6       	ldi	r18, 0x66	; 102
    1532:	36 e6       	ldi	r19, 0x66	; 102
    1534:	46 e6       	ldi	r20, 0x66	; 102
    1536:	50 e4       	ldi	r21, 0x40	; 64
    1538:	0e 94 14 14 	call	0x2828	; 0x2828 <__divsf3>
    153c:	9b 01       	movw	r18, r22
    153e:	ac 01       	movw	r20, r24
    1540:	60 91 c7 04 	lds	r22, 0x04C7	; 0x8004c7 <Relative_Distance_Internal_Test>
    1544:	70 91 c8 04 	lds	r23, 0x04C8	; 0x8004c8 <Relative_Distance_Internal_Test+0x1>
    1548:	80 91 c9 04 	lds	r24, 0x04C9	; 0x8004c9 <Relative_Distance_Internal_Test+0x2>
    154c:	90 91 ca 04 	lds	r25, 0x04CA	; 0x8004ca <Relative_Distance_Internal_Test+0x3>
    1550:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
    1554:	2b 01       	movw	r4, r22
    1556:	3c 01       	movw	r6, r24
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	46 e9       	ldi	r20, 0x96	; 150
    155e:	53 e4       	ldi	r21, 0x43	; 67
    1560:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
    1564:	18 16       	cp	r1, r24
    1566:	4c f0       	brlt	.+18     	; 0x157a <Run_Test_with_Internal_Variable+0x11a>
    1568:	40 92 c7 04 	sts	0x04C7, r4	; 0x8004c7 <Relative_Distance_Internal_Test>
    156c:	50 92 c8 04 	sts	0x04C8, r5	; 0x8004c8 <Relative_Distance_Internal_Test+0x1>
    1570:	60 92 c9 04 	sts	0x04C9, r6	; 0x8004c9 <Relative_Distance_Internal_Test+0x2>
    1574:	70 92 ca 04 	sts	0x04CA, r7	; 0x8004ca <Relative_Distance_Internal_Test+0x3>
    1578:	0c c0       	rjmp	.+24     	; 0x1592 <Run_Test_with_Internal_Variable+0x132>
    157a:	80 e0       	ldi	r24, 0x00	; 0
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	a6 e9       	ldi	r26, 0x96	; 150
    1580:	b3 e4       	ldi	r27, 0x43	; 67
    1582:	80 93 c7 04 	sts	0x04C7, r24	; 0x8004c7 <Relative_Distance_Internal_Test>
    1586:	90 93 c8 04 	sts	0x04C8, r25	; 0x8004c8 <Relative_Distance_Internal_Test+0x1>
    158a:	a0 93 c9 04 	sts	0x04C9, r26	; 0x8004c9 <Relative_Distance_Internal_Test+0x2>
    158e:	b0 93 ca 04 	sts	0x04CA, r27	; 0x8004ca <Relative_Distance_Internal_Test+0x3>
    1592:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Status_Dec_Inc>
    1596:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Status_Dec_Inc+0x1>
    159a:	00 97       	sbiw	r24, 0x00	; 0
    159c:	d9 f4       	brne	.+54     	; 0x15d4 <Run_Test_with_Internal_Variable+0x174>
    159e:	2d ec       	ldi	r18, 0xCD	; 205
    15a0:	3c ec       	ldi	r19, 0xCC	; 204
    15a2:	4c ec       	ldi	r20, 0xCC	; 204
    15a4:	5d e3       	ldi	r21, 0x3D	; 61
    15a6:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    15aa:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    15ae:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    15b2:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    15b6:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    15ba:	26 e6       	ldi	r18, 0x66	; 102
    15bc:	36 e6       	ldi	r19, 0x66	; 102
    15be:	46 e6       	ldi	r20, 0x66	; 102
    15c0:	50 e4       	ldi	r21, 0x40	; 64
    15c2:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    15c6:	9b 01       	movw	r18, r22
    15c8:	ac 01       	movw	r20, r24
    15ca:	c5 01       	movw	r24, r10
    15cc:	b4 01       	movw	r22, r8
    15ce:	0e 94 a2 13 	call	0x2744	; 0x2744 <__subsf3>
    15d2:	1c c0       	rjmp	.+56     	; 0x160c <Run_Test_with_Internal_Variable+0x1ac>
    15d4:	01 97       	sbiw	r24, 0x01	; 1
    15d6:	11 f5       	brne	.+68     	; 0x161c <Run_Test_with_Internal_Variable+0x1bc>
    15d8:	2d ec       	ldi	r18, 0xCD	; 205
    15da:	3c ec       	ldi	r19, 0xCC	; 204
    15dc:	4c ec       	ldi	r20, 0xCC	; 204
    15de:	5d e3       	ldi	r21, 0x3D	; 61
    15e0:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    15e4:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    15e8:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    15ec:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    15f0:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    15f4:	26 e6       	ldi	r18, 0x66	; 102
    15f6:	36 e6       	ldi	r19, 0x66	; 102
    15f8:	46 e6       	ldi	r20, 0x66	; 102
    15fa:	50 e4       	ldi	r21, 0x40	; 64
    15fc:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <__mulsf3>
    1600:	9b 01       	movw	r18, r22
    1602:	ac 01       	movw	r20, r24
    1604:	c5 01       	movw	r24, r10
    1606:	b4 01       	movw	r22, r8
    1608:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
    160c:	60 93 c1 04 	sts	0x04C1, r22	; 0x8004c1 <Vehicle_Speed_Internal_Test>
    1610:	70 93 c2 04 	sts	0x04C2, r23	; 0x8004c2 <Vehicle_Speed_Internal_Test+0x1>
    1614:	80 93 c3 04 	sts	0x04C3, r24	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x2>
    1618:	90 93 c4 04 	sts	0x04C4, r25	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x3>
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	48 ec       	ldi	r20, 0xC8	; 200
    1622:	52 e4       	ldi	r21, 0x42	; 66
    1624:	c7 01       	movw	r24, r14
    1626:	b6 01       	movw	r22, r12
    1628:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
    162c:	87 ff       	sbrs	r24, 7
    162e:	11 c0       	rjmp	.+34     	; 0x1652 <Run_Test_with_Internal_Variable+0x1f2>
    1630:	21 e7       	ldi	r18, 0x71	; 113
    1632:	3d e3       	ldi	r19, 0x3D	; 61
    1634:	4a e8       	ldi	r20, 0x8A	; 138
    1636:	5f e3       	ldi	r21, 0x3F	; 63
    1638:	c7 01       	movw	r24, r14
    163a:	b6 01       	movw	r22, r12
    163c:	0e 94 a3 13 	call	0x2746	; 0x2746 <__addsf3>
    1640:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <target_vehicle_speed.1488>
    1644:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <target_vehicle_speed.1488+0x1>
    1648:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <target_vehicle_speed.1488+0x2>
    164c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <target_vehicle_speed.1488+0x3>
    1650:	0c c0       	rjmp	.+24     	; 0x166a <Run_Test_with_Internal_Variable+0x20a>
    1652:	80 e0       	ldi	r24, 0x00	; 0
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	a8 ec       	ldi	r26, 0xC8	; 200
    1658:	b2 e4       	ldi	r27, 0x42	; 66
    165a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <target_vehicle_speed.1488>
    165e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <target_vehicle_speed.1488+0x1>
    1662:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <target_vehicle_speed.1488+0x2>
    1666:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <target_vehicle_speed.1488+0x3>
    166a:	ff 90       	pop	r15
    166c:	ef 90       	pop	r14
    166e:	df 90       	pop	r13
    1670:	cf 90       	pop	r12
    1672:	bf 90       	pop	r11
    1674:	af 90       	pop	r10
    1676:	9f 90       	pop	r9
    1678:	8f 90       	pop	r8
    167a:	7f 90       	pop	r7
    167c:	6f 90       	pop	r6
    167e:	5f 90       	pop	r5
    1680:	4f 90       	pop	r4
    1682:	08 95       	ret

00001684 <StartupHook>:
    1684:	60 ea       	ldi	r22, 0xA0	; 160
    1686:	76 e8       	ldi	r23, 0x86	; 134
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	0c 94 62 0f 	jmp	0x1ec4	; 0x1ec4 <OsEE_atmega_startTimer1>

00001690 <clock_handler>:
    1690:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <isr2_armed>
    1694:	81 11       	cpse	r24, r1
    1696:	15 c0       	rjmp	.+42     	; 0x16c2 <clock_handler+0x32>
    1698:	61 e0       	ldi	r22, 0x01	; 1
    169a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <led_val>
    169e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <led_val+0x1>
    16a2:	89 2b       	or	r24, r25
    16a4:	09 f0       	breq	.+2      	; 0x16a8 <clock_handler+0x18>
    16a6:	60 e0       	ldi	r22, 0x00	; 0
    16a8:	86 2f       	mov	r24, r22
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <led_val+0x1>
    16b0:	80 93 01 03 	sts	0x0301, r24	; 0x800301 <led_val>
    16b4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    16b8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <digitalWrite>
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	0c 94 70 10 	jmp	0x20e0	; 0x20e0 <ActivateTask>
    16c2:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <isr2_armed>
    16c6:	08 95       	ret

000016c8 <setup>:
    16c8:	61 e0       	ldi	r22, 0x01	; 1
    16ca:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    16ce:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <pinMode>
    16d2:	26 e0       	ldi	r18, 0x06	; 6
    16d4:	40 e0       	ldi	r20, 0x00	; 0
    16d6:	52 ec       	ldi	r21, 0xC2	; 194
    16d8:	61 e0       	ldi	r22, 0x01	; 1
    16da:	70 e0       	ldi	r23, 0x00	; 0
    16dc:	8c e0       	ldi	r24, 0x0C	; 12
    16de:	94 e0       	ldi	r25, 0x04	; 4
    16e0:	0c 94 2c 0e 	jmp	0x1c58	; 0x1c58 <_ZN14HardwareSerial5beginEmh>

000016e4 <main>:
    16e4:	0e 94 87 0c 	call	0x190e	; 0x190e <init>
    16e8:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <setup>
    16ec:	80 e0       	ldi	r24, 0x00	; 0
    16ee:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <StartOS>
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	08 95       	ret

000016f8 <FuncTask2>:
    16f8:	08 95       	ret

000016fa <FuncTask3>:
    16fa:	08 95       	ret

000016fc <FuncTask4>:
    16fc:	08 95       	ret

000016fe <FuncTask5>:
    16fe:	08 95       	ret

00001700 <_Z12serial_printPKc>:
    1700:	f8 94       	cli
    1702:	fc 01       	movw	r30, r24
    1704:	01 90       	ld	r0, Z+
    1706:	00 20       	and	r0, r0
    1708:	e9 f7       	brne	.-6      	; 0x1704 <_Z12serial_printPKc+0x4>
    170a:	31 97       	sbiw	r30, 0x01	; 1
    170c:	af 01       	movw	r20, r30
    170e:	48 1b       	sub	r20, r24
    1710:	59 0b       	sbc	r21, r25
    1712:	bc 01       	movw	r22, r24
    1714:	8c e0       	ldi	r24, 0x0C	; 12
    1716:	94 e0       	ldi	r25, 0x04	; 4
    1718:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5writeEPKhj>
    171c:	84 e9       	ldi	r24, 0x94	; 148
    171e:	9d e0       	ldi	r25, 0x0D	; 13
    1720:	89 2b       	or	r24, r25
    1722:	11 f0       	breq	.+4      	; 0x1728 <_Z12serial_printPKc+0x28>
    1724:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <_Z14serialEventRunv>
    1728:	78 94       	sei
    172a:	08 95       	ret

0000172c <idle_hook>:
    172c:	0f 93       	push	r16
    172e:	1f 93       	push	r17
    1730:	cf 93       	push	r28
    1732:	df 93       	push	r29
    1734:	00 d0       	rcall	.+0      	; 0x1736 <idle_hook+0xa>
    1736:	cd b7       	in	r28, 0x3d	; 61
    1738:	de b7       	in	r29, 0x3e	; 62
    173a:	8d b7       	in	r24, 0x3d	; 61
    173c:	9e b7       	in	r25, 0x3e	; 62
    173e:	9a 83       	std	Y+2, r25	; 0x02
    1740:	89 83       	std	Y+1, r24	; 0x01
    1742:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <main_sp>
    1746:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <main_sp+0x1>
    174a:	89 2b       	or	r24, r25
    174c:	39 f4       	brne	.+14     	; 0x175c <idle_hook+0x30>
    174e:	89 81       	ldd	r24, Y+1	; 0x01
    1750:	9a 81       	ldd	r25, Y+2	; 0x02
    1752:	90 93 fd 02 	sts	0x02FD, r25	; 0x8002fd <main_sp+0x1>
    1756:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <main_sp>
    175a:	1b c0       	rjmp	.+54     	; 0x1792 <idle_hook+0x66>
    175c:	20 91 fc 02 	lds	r18, 0x02FC	; 0x8002fc <main_sp>
    1760:	30 91 fd 02 	lds	r19, 0x02FD	; 0x8002fd <main_sp+0x1>
    1764:	89 81       	ldd	r24, Y+1	; 0x01
    1766:	9a 81       	ldd	r25, Y+2	; 0x02
    1768:	28 17       	cp	r18, r24
    176a:	39 07       	cpc	r19, r25
    176c:	91 f0       	breq	.+36     	; 0x1792 <idle_hook+0x66>
    176e:	61 e0       	ldi	r22, 0x01	; 1
    1770:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    1774:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <digitalWrite>
    1778:	f8 94       	cli
    177a:	84 e9       	ldi	r24, 0x94	; 148
    177c:	91 e0       	ldi	r25, 0x01	; 1
    177e:	0e 94 80 0b 	call	0x1700	; 0x1700 <_Z12serial_printPKc>
    1782:	04 e9       	ldi	r16, 0x94	; 148
    1784:	1d e0       	ldi	r17, 0x0D	; 13
    1786:	01 15       	cp	r16, r1
    1788:	11 05       	cpc	r17, r1
    178a:	e9 f3       	breq	.-6      	; 0x1786 <idle_hook+0x5a>
    178c:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <_Z14serialEventRunv>
    1790:	fa cf       	rjmp	.-12     	; 0x1786 <idle_hook+0x5a>
    1792:	f8 94       	cli
    1794:	84 e9       	ldi	r24, 0x94	; 148
    1796:	9d e0       	ldi	r25, 0x0D	; 13
    1798:	89 2b       	or	r24, r25
    179a:	11 f0       	breq	.+4      	; 0x17a0 <idle_hook+0x74>
    179c:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <_Z14serialEventRunv>
    17a0:	78 94       	sei
    17a2:	0f 90       	pop	r0
    17a4:	0f 90       	pop	r0
    17a6:	df 91       	pop	r29
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	08 95       	ret

000017b0 <FuncTask1>:
    17b0:	cf 92       	push	r12
    17b2:	df 92       	push	r13
    17b4:	ef 92       	push	r14
    17b6:	ff 92       	push	r15
    17b8:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <task1_fired>
    17bc:	8f 5f       	subi	r24, 0xFF	; 255
    17be:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <task1_fired>
    17c2:	0e 94 30 0a 	call	0x1460	; 0x1460 <Run_Test_with_Internal_Variable>
    17c6:	0e 94 b8 07 	call	0xf70	; 0xf70 <Process_Input>
    17ca:	c0 90 b3 04 	lds	r12, 0x04B3	; 0x8004b3 <Vehicle_Speed>
    17ce:	d0 90 b4 04 	lds	r13, 0x04B4	; 0x8004b4 <Vehicle_Speed+0x1>
    17d2:	e0 90 b5 04 	lds	r14, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x2>
    17d6:	f0 90 b6 04 	lds	r15, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x3>
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	40 e8       	ldi	r20, 0x80	; 128
    17e0:	5f e3       	ldi	r21, 0x3F	; 63
    17e2:	c7 01       	movw	r24, r14
    17e4:	b6 01       	movw	r22, r12
    17e6:	0e 94 31 15 	call	0x2a62	; 0x2a62 <__gesf2>
    17ea:	87 fd       	sbrc	r24, 7
    17ec:	13 c0       	rjmp	.+38     	; 0x1814 <FuncTask1+0x64>
    17ee:	20 e0       	ldi	r18, 0x00	; 0
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	40 e0       	ldi	r20, 0x00	; 0
    17f4:	5f e3       	ldi	r21, 0x3F	; 63
    17f6:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
    17fa:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
    17fe:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
    1802:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
    1806:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
    180a:	18 16       	cp	r1, r24
    180c:	1c f0       	brlt	.+6      	; 0x1814 <FuncTask1+0x64>
    180e:	80 eb       	ldi	r24, 0xB0	; 176
    1810:	91 e0       	ldi	r25, 0x01	; 1
    1812:	0c c0       	rjmp	.+24     	; 0x182c <FuncTask1+0x7c>
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e8       	ldi	r20, 0x80	; 128
    181a:	5f e3       	ldi	r21, 0x3F	; 63
    181c:	c7 01       	movw	r24, r14
    181e:	b6 01       	movw	r22, r12
    1820:	0e 94 0f 14 	call	0x281e	; 0x281e <__cmpsf2>
    1824:	87 ff       	sbrs	r24, 7
    1826:	05 c0       	rjmp	.+10     	; 0x1832 <FuncTask1+0x82>
    1828:	89 ec       	ldi	r24, 0xC9	; 201
    182a:	91 e0       	ldi	r25, 0x01	; 1
    182c:	0e 94 80 0b 	call	0x1700	; 0x1700 <_Z12serial_printPKc>
    1830:	1a c0       	rjmp	.+52     	; 0x1866 <FuncTask1+0xb6>
    1832:	60 91 ad 04 	lds	r22, 0x04AD	; 0x8004ad <Relative_Distance>
    1836:	70 91 ae 04 	lds	r23, 0x04AE	; 0x8004ae <Relative_Distance+0x1>
    183a:	80 91 af 04 	lds	r24, 0x04AF	; 0x8004af <Relative_Distance+0x2>
    183e:	90 91 b0 04 	lds	r25, 0x04B0	; 0x8004b0 <Relative_Distance+0x3>
    1842:	0e 94 7d 07 	call	0xefa	; 0xefa <Calc_Relative_Speed>
    1846:	0e 94 36 01 	call	0x26c	; 0x26c <Acc_Dec_Dtrmn_Sys>
    184a:	0e 94 09 08 	call	0x1012	; 0x1012 <Process_Output>
    184e:	6e ed       	ldi	r22, 0xDE	; 222
    1850:	72 e0       	ldi	r23, 0x02	; 2
    1852:	8c e0       	ldi	r24, 0x0C	; 12
    1854:	94 e0       	ldi	r25, 0x04	; 4
    1856:	0e 94 60 0f 	call	0x1ec0	; 0x1ec0 <_ZN5Print5printEPKc>
    185a:	6d ea       	ldi	r22, 0xAD	; 173
    185c:	71 e0       	ldi	r23, 0x01	; 1
    185e:	8c e0       	ldi	r24, 0x0C	; 12
    1860:	94 e0       	ldi	r25, 0x04	; 4
    1862:	0e 94 60 0f 	call	0x1ec0	; 0x1ec0 <_ZN5Print5printEPKc>
    1866:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <task1_ended>
    186a:	8f 5f       	subi	r24, 0xFF	; 255
    186c:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <task1_ended>
    1870:	ff 90       	pop	r15
    1872:	ef 90       	pop	r14
    1874:	df 90       	pop	r13
    1876:	cf 90       	pop	r12
    1878:	08 95       	ret

0000187a <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    187a:	1f 92       	push	r1
    187c:	0f 92       	push	r0
    187e:	0f b6       	in	r0, 0x3f	; 63
    1880:	0f 92       	push	r0
    1882:	11 24       	eor	r1, r1
    1884:	2f 93       	push	r18
    1886:	3f 93       	push	r19
    1888:	8f 93       	push	r24
    188a:	9f 93       	push	r25
    188c:	af 93       	push	r26
    188e:	bf 93       	push	r27
    1890:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <timer0_millis>
    1894:	90 91 05 04 	lds	r25, 0x0405	; 0x800405 <timer0_millis+0x1>
    1898:	a0 91 06 04 	lds	r26, 0x0406	; 0x800406 <timer0_millis+0x2>
    189c:	b0 91 07 04 	lds	r27, 0x0407	; 0x800407 <timer0_millis+0x3>
    18a0:	30 91 03 04 	lds	r19, 0x0403	; 0x800403 <timer0_fract>
    18a4:	23 e0       	ldi	r18, 0x03	; 3
    18a6:	23 0f       	add	r18, r19
    18a8:	2d 37       	cpi	r18, 0x7D	; 125
    18aa:	20 f4       	brcc	.+8      	; 0x18b4 <__vector_16+0x3a>
    18ac:	01 96       	adiw	r24, 0x01	; 1
    18ae:	a1 1d       	adc	r26, r1
    18b0:	b1 1d       	adc	r27, r1
    18b2:	05 c0       	rjmp	.+10     	; 0x18be <__vector_16+0x44>
    18b4:	26 e8       	ldi	r18, 0x86	; 134
    18b6:	23 0f       	add	r18, r19
    18b8:	02 96       	adiw	r24, 0x02	; 2
    18ba:	a1 1d       	adc	r26, r1
    18bc:	b1 1d       	adc	r27, r1
    18be:	20 93 03 04 	sts	0x0403, r18	; 0x800403 <timer0_fract>
    18c2:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <timer0_millis>
    18c6:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <timer0_millis+0x1>
    18ca:	a0 93 06 04 	sts	0x0406, r26	; 0x800406 <timer0_millis+0x2>
    18ce:	b0 93 07 04 	sts	0x0407, r27	; 0x800407 <timer0_millis+0x3>
    18d2:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <timer0_overflow_count>
    18d6:	90 91 09 04 	lds	r25, 0x0409	; 0x800409 <timer0_overflow_count+0x1>
    18da:	a0 91 0a 04 	lds	r26, 0x040A	; 0x80040a <timer0_overflow_count+0x2>
    18de:	b0 91 0b 04 	lds	r27, 0x040B	; 0x80040b <timer0_overflow_count+0x3>
    18e2:	01 96       	adiw	r24, 0x01	; 1
    18e4:	a1 1d       	adc	r26, r1
    18e6:	b1 1d       	adc	r27, r1
    18e8:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <timer0_overflow_count>
    18ec:	90 93 09 04 	sts	0x0409, r25	; 0x800409 <timer0_overflow_count+0x1>
    18f0:	a0 93 0a 04 	sts	0x040A, r26	; 0x80040a <timer0_overflow_count+0x2>
    18f4:	b0 93 0b 04 	sts	0x040B, r27	; 0x80040b <timer0_overflow_count+0x3>
    18f8:	bf 91       	pop	r27
    18fa:	af 91       	pop	r26
    18fc:	9f 91       	pop	r25
    18fe:	8f 91       	pop	r24
    1900:	3f 91       	pop	r19
    1902:	2f 91       	pop	r18
    1904:	0f 90       	pop	r0
    1906:	0f be       	out	0x3f, r0	; 63
    1908:	0f 90       	pop	r0
    190a:	1f 90       	pop	r1
    190c:	18 95       	reti

0000190e <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    190e:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    1910:	84 b5       	in	r24, 0x24	; 36
    1912:	82 60       	ori	r24, 0x02	; 2
    1914:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    1916:	84 b5       	in	r24, 0x24	; 36
    1918:	81 60       	ori	r24, 0x01	; 1
    191a:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    191c:	85 b5       	in	r24, 0x25	; 37
    191e:	82 60       	ori	r24, 0x02	; 2
    1920:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    1922:	85 b5       	in	r24, 0x25	; 37
    1924:	81 60       	ori	r24, 0x01	; 1
    1926:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    1928:	ee e6       	ldi	r30, 0x6E	; 110
    192a:	f0 e0       	ldi	r31, 0x00	; 0
    192c:	80 81       	ld	r24, Z
    192e:	81 60       	ori	r24, 0x01	; 1
    1930:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    1932:	e1 e8       	ldi	r30, 0x81	; 129
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    1938:	80 81       	ld	r24, Z
    193a:	82 60       	ori	r24, 0x02	; 2
    193c:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    193e:	80 81       	ld	r24, Z
    1940:	81 60       	ori	r24, 0x01	; 1
    1942:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    1944:	e0 e8       	ldi	r30, 0x80	; 128
    1946:	f0 e0       	ldi	r31, 0x00	; 0
    1948:	80 81       	ld	r24, Z
    194a:	81 60       	ori	r24, 0x01	; 1
    194c:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    194e:	e1 eb       	ldi	r30, 0xB1	; 177
    1950:	f0 e0       	ldi	r31, 0x00	; 0
    1952:	80 81       	ld	r24, Z
    1954:	84 60       	ori	r24, 0x04	; 4
    1956:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    1958:	e0 eb       	ldi	r30, 0xB0	; 176
    195a:	f0 e0       	ldi	r31, 0x00	; 0
    195c:	80 81       	ld	r24, Z
    195e:	81 60       	ori	r24, 0x01	; 1
    1960:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    1962:	ea e7       	ldi	r30, 0x7A	; 122
    1964:	f0 e0       	ldi	r31, 0x00	; 0
    1966:	80 81       	ld	r24, Z
    1968:	84 60       	ori	r24, 0x04	; 4
    196a:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    196c:	80 81       	ld	r24, Z
    196e:	82 60       	ori	r24, 0x02	; 2
    1970:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    1972:	80 81       	ld	r24, Z
    1974:	81 60       	ori	r24, 0x01	; 1
    1976:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    1978:	80 81       	ld	r24, Z
    197a:	80 68       	ori	r24, 0x80	; 128
    197c:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    197e:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1982:	08 95       	ret

00001984 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    1984:	83 30       	cpi	r24, 0x03	; 3
    1986:	81 f0       	breq	.+32     	; 0x19a8 <turnOffPWM+0x24>
    1988:	28 f4       	brcc	.+10     	; 0x1994 <turnOffPWM+0x10>
    198a:	81 30       	cpi	r24, 0x01	; 1
    198c:	99 f0       	breq	.+38     	; 0x19b4 <turnOffPWM+0x30>
    198e:	82 30       	cpi	r24, 0x02	; 2
    1990:	a1 f0       	breq	.+40     	; 0x19ba <turnOffPWM+0x36>
    1992:	08 95       	ret
    1994:	87 30       	cpi	r24, 0x07	; 7
    1996:	a9 f0       	breq	.+42     	; 0x19c2 <turnOffPWM+0x3e>
    1998:	88 30       	cpi	r24, 0x08	; 8
    199a:	b9 f0       	breq	.+46     	; 0x19ca <turnOffPWM+0x46>
    199c:	84 30       	cpi	r24, 0x04	; 4
    199e:	d1 f4       	brne	.+52     	; 0x19d4 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    19a0:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    19a4:	8f 7d       	andi	r24, 0xDF	; 223
    19a6:	03 c0       	rjmp	.+6      	; 0x19ae <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    19a8:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    19ac:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    19ae:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    19b2:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    19b4:	84 b5       	in	r24, 0x24	; 36
    19b6:	8f 77       	andi	r24, 0x7F	; 127
    19b8:	02 c0       	rjmp	.+4      	; 0x19be <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    19ba:	84 b5       	in	r24, 0x24	; 36
    19bc:	8f 7d       	andi	r24, 0xDF	; 223
    19be:	84 bd       	out	0x24, r24	; 36
    19c0:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    19c2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    19c6:	8f 77       	andi	r24, 0x7F	; 127
    19c8:	03 c0       	rjmp	.+6      	; 0x19d0 <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    19ca:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    19ce:	8f 7d       	andi	r24, 0xDF	; 223
    19d0:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    19d4:	08 95       	ret

000019d6 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    19d6:	cf 93       	push	r28
    19d8:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	fc 01       	movw	r30, r24
    19de:	e4 58       	subi	r30, 0x84	; 132
    19e0:	ff 4f       	sbci	r31, 0xFF	; 255
    19e2:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    19e4:	fc 01       	movw	r30, r24
    19e6:	e0 57       	subi	r30, 0x70	; 112
    19e8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ea:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    19ec:	88 23       	and	r24, r24
    19ee:	61 f1       	breq	.+88     	; 0x1a48 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	88 0f       	add	r24, r24
    19f4:	99 1f       	adc	r25, r25
    19f6:	fc 01       	movw	r30, r24
    19f8:	e2 55       	subi	r30, 0x52	; 82
    19fa:	ff 4f       	sbci	r31, 0xFF	; 255
    19fc:	c5 91       	lpm	r28, Z+
    19fe:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    1a00:	fc 01       	movw	r30, r24
    1a02:	ec 55       	subi	r30, 0x5C	; 92
    1a04:	ff 4f       	sbci	r31, 0xFF	; 255
    1a06:	a5 91       	lpm	r26, Z+
    1a08:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    1a0a:	61 11       	cpse	r22, r1
    1a0c:	09 c0       	rjmp	.+18     	; 0x1a20 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    1a0e:	9f b7       	in	r25, 0x3f	; 63
                cli();
    1a10:	f8 94       	cli
		*reg &= ~bit;
    1a12:	88 81       	ld	r24, Y
    1a14:	20 95       	com	r18
    1a16:	82 23       	and	r24, r18
    1a18:	88 83       	st	Y, r24
		*out &= ~bit;
    1a1a:	ec 91       	ld	r30, X
    1a1c:	2e 23       	and	r18, r30
    1a1e:	0b c0       	rjmp	.+22     	; 0x1a36 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    1a20:	62 30       	cpi	r22, 0x02	; 2
    1a22:	61 f4       	brne	.+24     	; 0x1a3c <pinMode+0x66>
		uint8_t oldSREG = SREG;
    1a24:	9f b7       	in	r25, 0x3f	; 63
                cli();
    1a26:	f8 94       	cli
		*reg &= ~bit;
    1a28:	38 81       	ld	r19, Y
    1a2a:	82 2f       	mov	r24, r18
    1a2c:	80 95       	com	r24
    1a2e:	83 23       	and	r24, r19
    1a30:	88 83       	st	Y, r24
		*out |= bit;
    1a32:	ec 91       	ld	r30, X
    1a34:	2e 2b       	or	r18, r30
    1a36:	2c 93       	st	X, r18
		SREG = oldSREG;
    1a38:	9f bf       	out	0x3f, r25	; 63
    1a3a:	06 c0       	rjmp	.+12     	; 0x1a48 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    1a3c:	8f b7       	in	r24, 0x3f	; 63
                cli();
    1a3e:	f8 94       	cli
		*reg |= bit;
    1a40:	e8 81       	ld	r30, Y
    1a42:	2e 2b       	or	r18, r30
    1a44:	28 83       	st	Y, r18
		SREG = oldSREG;
    1a46:	8f bf       	out	0x3f, r24	; 63
	}
}
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	08 95       	ret

00001a4e <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    1a4e:	1f 93       	push	r17
    1a50:	cf 93       	push	r28
    1a52:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    1a54:	28 2f       	mov	r18, r24
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	f9 01       	movw	r30, r18
    1a5a:	e8 59       	subi	r30, 0x98	; 152
    1a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5e:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    1a60:	f9 01       	movw	r30, r18
    1a62:	e4 58       	subi	r30, 0x84	; 132
    1a64:	ff 4f       	sbci	r31, 0xFF	; 255
    1a66:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    1a68:	f9 01       	movw	r30, r18
    1a6a:	e0 57       	subi	r30, 0x70	; 112
    1a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6e:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    1a70:	cc 23       	and	r28, r28
    1a72:	c9 f0       	breq	.+50     	; 0x1aa6 <digitalWrite+0x58>
    1a74:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    1a76:	81 11       	cpse	r24, r1
    1a78:	0e 94 c2 0c 	call	0x1984	; 0x1984 <turnOffPWM>

	out = portOutputRegister(port);
    1a7c:	ec 2f       	mov	r30, r28
    1a7e:	f0 e0       	ldi	r31, 0x00	; 0
    1a80:	ee 0f       	add	r30, r30
    1a82:	ff 1f       	adc	r31, r31
    1a84:	ec 55       	subi	r30, 0x5C	; 92
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	a5 91       	lpm	r26, Z+
    1a8a:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    1a8c:	8f b7       	in	r24, 0x3f	; 63
	cli();
    1a8e:	f8 94       	cli

	if (val == LOW) {
    1a90:	11 11       	cpse	r17, r1
    1a92:	05 c0       	rjmp	.+10     	; 0x1a9e <digitalWrite+0x50>
		*out &= ~bit;
    1a94:	9c 91       	ld	r25, X
    1a96:	ed 2f       	mov	r30, r29
    1a98:	e0 95       	com	r30
    1a9a:	e9 23       	and	r30, r25
    1a9c:	02 c0       	rjmp	.+4      	; 0x1aa2 <digitalWrite+0x54>
	} else {
		*out |= bit;
    1a9e:	ec 91       	ld	r30, X
    1aa0:	ed 2b       	or	r30, r29
    1aa2:	ec 93       	st	X, r30
	}

	SREG = oldSREG;
    1aa4:	8f bf       	out	0x3f, r24	; 63
}
    1aa6:	df 91       	pop	r29
    1aa8:	cf 91       	pop	r28
    1aaa:	1f 91       	pop	r17
    1aac:	08 95       	ret

00001aae <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    1aae:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    1ab0:	91 8d       	ldd	r25, Z+25	; 0x19
    1ab2:	22 8d       	ldd	r18, Z+26	; 0x1a
    1ab4:	89 2f       	mov	r24, r25
    1ab6:	90 e0       	ldi	r25, 0x00	; 0
    1ab8:	80 5c       	subi	r24, 0xC0	; 192
    1aba:	9f 4f       	sbci	r25, 0xFF	; 255
    1abc:	82 1b       	sub	r24, r18
    1abe:	91 09       	sbc	r25, r1
}
    1ac0:	8f 73       	andi	r24, 0x3F	; 63
    1ac2:	99 27       	eor	r25, r25
    1ac4:	08 95       	ret

00001ac6 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    1ac6:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    1ac8:	91 8d       	ldd	r25, Z+25	; 0x19
    1aca:	82 8d       	ldd	r24, Z+26	; 0x1a
    1acc:	98 17       	cp	r25, r24
    1ace:	31 f0       	breq	.+12     	; 0x1adc <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    1ad0:	82 8d       	ldd	r24, Z+26	; 0x1a
    1ad2:	e8 0f       	add	r30, r24
    1ad4:	f1 1d       	adc	r31, r1
    1ad6:	85 8d       	ldd	r24, Z+29	; 0x1d
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1adc:	8f ef       	ldi	r24, 0xFF	; 255
    1ade:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    1ae0:	08 95       	ret

00001ae2 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    1ae2:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1ae4:	91 8d       	ldd	r25, Z+25	; 0x19
    1ae6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1ae8:	98 17       	cp	r25, r24
    1aea:	61 f0       	breq	.+24     	; 0x1b04 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    1aec:	82 8d       	ldd	r24, Z+26	; 0x1a
    1aee:	df 01       	movw	r26, r30
    1af0:	a8 0f       	add	r26, r24
    1af2:	b1 1d       	adc	r27, r1
    1af4:	5d 96       	adiw	r26, 0x1d	; 29
    1af6:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1af8:	92 8d       	ldd	r25, Z+26	; 0x1a
    1afa:	9f 5f       	subi	r25, 0xFF	; 255
    1afc:	9f 73       	andi	r25, 0x3F	; 63
    1afe:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1b04:	8f ef       	ldi	r24, 0xFF	; 255
    1b06:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    1b08:	08 95       	ret

00001b0a <_ZN14HardwareSerial17availableForWriteEv>:
{
#if (SERIAL_TX_BUFFER_SIZE>256)
  uint8_t oldSREG = SREG;
  cli();
#endif
  tx_buffer_index_t head = _tx_buffer_head;
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	53 8d       	ldd	r21, Z+27	; 0x1b
  tx_buffer_index_t tail = _tx_buffer_tail;
    1b0e:	44 8d       	ldd	r20, Z+28	; 0x1c
    1b10:	25 2f       	mov	r18, r21
    1b12:	30 e0       	ldi	r19, 0x00	; 0
    1b14:	84 2f       	mov	r24, r20
    1b16:	90 e0       	ldi	r25, 0x00	; 0
#if (SERIAL_TX_BUFFER_SIZE>256)
  SREG = oldSREG;
#endif
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    1b18:	82 1b       	sub	r24, r18
    1b1a:	93 0b       	sbc	r25, r19
    1b1c:	54 17       	cp	r21, r20
    1b1e:	10 f0       	brcs	.+4      	; 0x1b24 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    1b20:	cf 96       	adiw	r24, 0x3f	; 63
    1b22:	08 95       	ret
  return tail - head - 1;
    1b24:	01 97       	sbiw	r24, 0x01	; 1
}
    1b26:	08 95       	ret

00001b28 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1b28:	89 ee       	ldi	r24, 0xE9	; 233
    1b2a:	9e e0       	ldi	r25, 0x0E	; 14
    1b2c:	89 2b       	or	r24, r25
    1b2e:	49 f0       	breq	.+18     	; 0x1b42 <_Z14serialEventRunv+0x1a>
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	89 2b       	or	r24, r25
    1b36:	29 f0       	breq	.+10     	; 0x1b42 <_Z14serialEventRunv+0x1a>
    1b38:	0e 94 e9 0e 	call	0x1dd2	; 0x1dd2 <_Z17Serial0_availablev>
    1b3c:	81 11       	cpse	r24, r1
    1b3e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    1b42:	08 95       	ret

00001b44 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    1b44:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    1b46:	84 8d       	ldd	r24, Z+28	; 0x1c
    1b48:	df 01       	movw	r26, r30
    1b4a:	a8 0f       	add	r26, r24
    1b4c:	b1 1d       	adc	r27, r1
    1b4e:	a3 5a       	subi	r26, 0xA3	; 163
    1b50:	bf 4f       	sbci	r27, 0xFF	; 255
    1b52:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    1b54:	84 8d       	ldd	r24, Z+28	; 0x1c
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	01 96       	adiw	r24, 0x01	; 1
    1b5a:	8f 73       	andi	r24, 0x3F	; 63
    1b5c:	99 27       	eor	r25, r25
    1b5e:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    1b60:	a6 89       	ldd	r26, Z+22	; 0x16
    1b62:	b7 89       	ldd	r27, Z+23	; 0x17
    1b64:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    1b66:	a0 89       	ldd	r26, Z+16	; 0x10
    1b68:	b1 89       	ldd	r27, Z+17	; 0x11
    1b6a:	8c 91       	ld	r24, X
    1b6c:	80 64       	ori	r24, 0x40	; 64
    1b6e:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    1b70:	93 8d       	ldd	r25, Z+27	; 0x1b
    1b72:	84 8d       	ldd	r24, Z+28	; 0x1c
    1b74:	98 13       	cpse	r25, r24
    1b76:	06 c0       	rjmp	.+12     	; 0x1b84 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    1b78:	02 88       	ldd	r0, Z+18	; 0x12
    1b7a:	f3 89       	ldd	r31, Z+19	; 0x13
    1b7c:	e0 2d       	mov	r30, r0
    1b7e:	80 81       	ld	r24, Z
    1b80:	8f 7d       	andi	r24, 0xDF	; 223
    1b82:	80 83       	st	Z, r24
    1b84:	08 95       	ret

00001b86 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    1b86:	cf 93       	push	r28
    1b88:	df 93       	push	r29
    1b8a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    1b8c:	88 8d       	ldd	r24, Y+24	; 0x18
    1b8e:	88 23       	and	r24, r24
    1b90:	c9 f0       	breq	.+50     	; 0x1bc4 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    1b92:	ea 89       	ldd	r30, Y+18	; 0x12
    1b94:	fb 89       	ldd	r31, Y+19	; 0x13
    1b96:	80 81       	ld	r24, Z
    1b98:	85 fd       	sbrc	r24, 5
    1b9a:	05 c0       	rjmp	.+10     	; 0x1ba6 <_ZN14HardwareSerial5flushEv+0x20>
    1b9c:	a8 89       	ldd	r26, Y+16	; 0x10
    1b9e:	b9 89       	ldd	r27, Y+17	; 0x11
    1ba0:	8c 91       	ld	r24, X
    1ba2:	86 fd       	sbrc	r24, 6
    1ba4:	0f c0       	rjmp	.+30     	; 0x1bc4 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    1ba6:	0f b6       	in	r0, 0x3f	; 63
    1ba8:	07 fc       	sbrc	r0, 7
    1baa:	f5 cf       	rjmp	.-22     	; 0x1b96 <_ZN14HardwareSerial5flushEv+0x10>
    1bac:	80 81       	ld	r24, Z
    1bae:	85 ff       	sbrs	r24, 5
    1bb0:	f2 cf       	rjmp	.-28     	; 0x1b96 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    1bb2:	a8 89       	ldd	r26, Y+16	; 0x10
    1bb4:	b9 89       	ldd	r27, Y+17	; 0x11
    1bb6:	8c 91       	ld	r24, X
    1bb8:	85 ff       	sbrs	r24, 5
    1bba:	ed cf       	rjmp	.-38     	; 0x1b96 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    1bbc:	ce 01       	movw	r24, r28
    1bbe:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1bc2:	e7 cf       	rjmp	.-50     	; 0x1b92 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    1bc4:	df 91       	pop	r29
    1bc6:	cf 91       	pop	r28
    1bc8:	08 95       	ret

00001bca <_ZN14HardwareSerial5writeEh>:

size_t HardwareSerial::write(uint8_t c)
{
    1bca:	ef 92       	push	r14
    1bcc:	ff 92       	push	r15
    1bce:	0f 93       	push	r16
    1bd0:	1f 93       	push	r17
    1bd2:	cf 93       	push	r28
    1bd4:	df 93       	push	r29
    1bd6:	ec 01       	movw	r28, r24
  _written = true;
    1bd8:	81 e0       	ldi	r24, 0x01	; 1
    1bda:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    1bdc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1bde:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1be0:	98 13       	cpse	r25, r24
    1be2:	05 c0       	rjmp	.+10     	; 0x1bee <_ZN14HardwareSerial5writeEh+0x24>
    1be4:	e8 89       	ldd	r30, Y+16	; 0x10
    1be6:	f9 89       	ldd	r31, Y+17	; 0x11
    1be8:	80 81       	ld	r24, Z
    1bea:	85 fd       	sbrc	r24, 5
    1bec:	24 c0       	rjmp	.+72     	; 0x1c36 <_ZN14HardwareSerial5writeEh+0x6c>
    1bee:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    1bf0:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1bf2:	10 e0       	ldi	r17, 0x00	; 0
    1bf4:	0f 5f       	subi	r16, 0xFF	; 255
    1bf6:	1f 4f       	sbci	r17, 0xFF	; 255
    1bf8:	0f 73       	andi	r16, 0x3F	; 63
    1bfa:	11 27       	eor	r17, r17
    1bfc:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    1bfe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c00:	e8 12       	cpse	r14, r24
    1c02:	0c c0       	rjmp	.+24     	; 0x1c1c <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    1c04:	0f b6       	in	r0, 0x3f	; 63
    1c06:	07 fc       	sbrc	r0, 7
    1c08:	fa cf       	rjmp	.-12     	; 0x1bfe <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    1c0a:	e8 89       	ldd	r30, Y+16	; 0x10
    1c0c:	f9 89       	ldd	r31, Y+17	; 0x11
    1c0e:	80 81       	ld	r24, Z
    1c10:	85 ff       	sbrs	r24, 5
    1c12:	f5 cf       	rjmp	.-22     	; 0x1bfe <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    1c14:	ce 01       	movw	r24, r28
    1c16:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1c1a:	f1 cf       	rjmp	.-30     	; 0x1bfe <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    1c1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c1e:	fe 01       	movw	r30, r28
    1c20:	e8 0f       	add	r30, r24
    1c22:	f1 1d       	adc	r31, r1
    1c24:	e3 5a       	subi	r30, 0xA3	; 163
    1c26:	ff 4f       	sbci	r31, 0xFF	; 255
    1c28:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    1c2a:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    1c2c:	ea 89       	ldd	r30, Y+18	; 0x12
    1c2e:	fb 89       	ldd	r31, Y+19	; 0x13
    1c30:	80 81       	ld	r24, Z
    1c32:	80 62       	ori	r24, 0x20	; 32
    1c34:	07 c0       	rjmp	.+14     	; 0x1c44 <_ZN14HardwareSerial5writeEh+0x7a>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    1c36:	ee 89       	ldd	r30, Y+22	; 0x16
    1c38:	ff 89       	ldd	r31, Y+23	; 0x17
    1c3a:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    1c3c:	e8 89       	ldd	r30, Y+16	; 0x10
    1c3e:	f9 89       	ldd	r31, Y+17	; 0x11
    1c40:	80 81       	ld	r24, Z
    1c42:	80 64       	ori	r24, 0x40	; 64
    1c44:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    1c46:	81 e0       	ldi	r24, 0x01	; 1
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	df 91       	pop	r29
    1c4c:	cf 91       	pop	r28
    1c4e:	1f 91       	pop	r17
    1c50:	0f 91       	pop	r16
    1c52:	ff 90       	pop	r15
    1c54:	ef 90       	pop	r14
    1c56:	08 95       	ret

00001c58 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    1c58:	cf 92       	push	r12
    1c5a:	df 92       	push	r13
    1c5c:	ef 92       	push	r14
    1c5e:	ff 92       	push	r15
    1c60:	1f 93       	push	r17
    1c62:	cf 93       	push	r28
    1c64:	df 93       	push	r29
    1c66:	ec 01       	movw	r28, r24
    1c68:	6a 01       	movw	r12, r20
    1c6a:	7b 01       	movw	r14, r22
    1c6c:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    1c6e:	e8 89       	ldd	r30, Y+16	; 0x10
    1c70:	f9 89       	ldd	r31, Y+17	; 0x11
    1c72:	82 e0       	ldi	r24, 0x02	; 2
    1c74:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    1c76:	41 15       	cp	r20, r1
    1c78:	51 4e       	sbci	r21, 0xE1	; 225
    1c7a:	61 05       	cpc	r22, r1
    1c7c:	71 05       	cpc	r23, r1
    1c7e:	b1 f0       	breq	.+44     	; 0x1cac <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    1c80:	60 e0       	ldi	r22, 0x00	; 0
    1c82:	79 e0       	ldi	r23, 0x09	; 9
    1c84:	8d e3       	ldi	r24, 0x3D	; 61
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	a7 01       	movw	r20, r14
    1c8a:	96 01       	movw	r18, r12
    1c8c:	0e 94 b7 15 	call	0x2b6e	; 0x2b6e <__udivmodsi4>
    1c90:	da 01       	movw	r26, r20
    1c92:	c9 01       	movw	r24, r18
    1c94:	01 97       	sbiw	r24, 0x01	; 1
    1c96:	a1 09       	sbc	r26, r1
    1c98:	b1 09       	sbc	r27, r1
    1c9a:	b6 95       	lsr	r27
    1c9c:	a7 95       	ror	r26
    1c9e:	97 95       	ror	r25
    1ca0:	87 95       	ror	r24
    1ca2:	ac 01       	movw	r20, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    1ca4:	41 15       	cp	r20, r1
    1ca6:	80 e1       	ldi	r24, 0x10	; 16
    1ca8:	58 07       	cpc	r21, r24
    1caa:	a8 f0       	brcs	.+42     	; 0x1cd6 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    1cac:	e8 89       	ldd	r30, Y+16	; 0x10
    1cae:	f9 89       	ldd	r31, Y+17	; 0x11
    1cb0:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    1cb2:	60 e8       	ldi	r22, 0x80	; 128
    1cb4:	74 e8       	ldi	r23, 0x84	; 132
    1cb6:	8e e1       	ldi	r24, 0x1E	; 30
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	a7 01       	movw	r20, r14
    1cbc:	96 01       	movw	r18, r12
    1cbe:	0e 94 b7 15 	call	0x2b6e	; 0x2b6e <__udivmodsi4>
    1cc2:	ba 01       	movw	r22, r20
    1cc4:	a9 01       	movw	r20, r18
    1cc6:	41 50       	subi	r20, 0x01	; 1
    1cc8:	51 09       	sbc	r21, r1
    1cca:	61 09       	sbc	r22, r1
    1ccc:	71 09       	sbc	r23, r1
    1cce:	76 95       	lsr	r23
    1cd0:	67 95       	ror	r22
    1cd2:	57 95       	ror	r21
    1cd4:	47 95       	ror	r20
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    1cd6:	ec 85       	ldd	r30, Y+12	; 0x0c
    1cd8:	fd 85       	ldd	r31, Y+13	; 0x0d
    1cda:	50 83       	st	Z, r21
  *_ubrrl = baud_setting;
    1cdc:	ee 85       	ldd	r30, Y+14	; 0x0e
    1cde:	ff 85       	ldd	r31, Y+15	; 0x0f
    1ce0:	40 83       	st	Z, r20

  _written = false;
    1ce2:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    1ce4:	ec 89       	ldd	r30, Y+20	; 0x14
    1ce6:	fd 89       	ldd	r31, Y+21	; 0x15
    1ce8:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    1cea:	ea 89       	ldd	r30, Y+18	; 0x12
    1cec:	fb 89       	ldd	r31, Y+19	; 0x13
    1cee:	80 81       	ld	r24, Z
    1cf0:	80 61       	ori	r24, 0x10	; 16
    1cf2:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    1cf4:	ea 89       	ldd	r30, Y+18	; 0x12
    1cf6:	fb 89       	ldd	r31, Y+19	; 0x13
    1cf8:	80 81       	ld	r24, Z
    1cfa:	88 60       	ori	r24, 0x08	; 8
    1cfc:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    1cfe:	ea 89       	ldd	r30, Y+18	; 0x12
    1d00:	fb 89       	ldd	r31, Y+19	; 0x13
    1d02:	80 81       	ld	r24, Z
    1d04:	80 68       	ori	r24, 0x80	; 128
    1d06:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    1d08:	ea 89       	ldd	r30, Y+18	; 0x12
    1d0a:	fb 89       	ldd	r31, Y+19	; 0x13
    1d0c:	80 81       	ld	r24, Z
    1d0e:	8f 7d       	andi	r24, 0xDF	; 223
    1d10:	80 83       	st	Z, r24
}
    1d12:	df 91       	pop	r29
    1d14:	cf 91       	pop	r28
    1d16:	1f 91       	pop	r17
    1d18:	ff 90       	pop	r15
    1d1a:	ef 90       	pop	r14
    1d1c:	df 90       	pop	r13
    1d1e:	cf 90       	pop	r12
    1d20:	08 95       	ret

00001d22 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    1d22:	1f 92       	push	r1
    1d24:	0f 92       	push	r0
    1d26:	0f b6       	in	r0, 0x3f	; 63
    1d28:	0f 92       	push	r0
    1d2a:	11 24       	eor	r1, r1
    1d2c:	2f 93       	push	r18
    1d2e:	8f 93       	push	r24
    1d30:	9f 93       	push	r25
    1d32:	ef 93       	push	r30
    1d34:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    1d36:	e0 91 1c 04 	lds	r30, 0x041C	; 0x80041c <Serial+0x10>
    1d3a:	f0 91 1d 04 	lds	r31, 0x041D	; 0x80041d <Serial+0x11>
    1d3e:	80 81       	ld	r24, Z
    1d40:	e0 91 22 04 	lds	r30, 0x0422	; 0x800422 <Serial+0x16>
    1d44:	f0 91 23 04 	lds	r31, 0x0423	; 0x800423 <Serial+0x17>
    1d48:	82 fd       	sbrc	r24, 2
    1d4a:	12 c0       	rjmp	.+36     	; 0x1d70 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    1d4c:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    1d4e:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <Serial+0x19>
    1d52:	8f 5f       	subi	r24, 0xFF	; 255
    1d54:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    1d56:	20 91 26 04 	lds	r18, 0x0426	; 0x800426 <Serial+0x1a>
    1d5a:	82 17       	cp	r24, r18
    1d5c:	51 f0       	breq	.+20     	; 0x1d72 <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    1d5e:	e0 91 25 04 	lds	r30, 0x0425	; 0x800425 <Serial+0x19>
    1d62:	f0 e0       	ldi	r31, 0x00	; 0
    1d64:	e4 5f       	subi	r30, 0xF4	; 244
    1d66:	fb 4f       	sbci	r31, 0xFB	; 251
    1d68:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    1d6a:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <Serial+0x19>
    1d6e:	01 c0       	rjmp	.+2      	; 0x1d72 <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    1d70:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    1d72:	ff 91       	pop	r31
    1d74:	ef 91       	pop	r30
    1d76:	9f 91       	pop	r25
    1d78:	8f 91       	pop	r24
    1d7a:	2f 91       	pop	r18
    1d7c:	0f 90       	pop	r0
    1d7e:	0f be       	out	0x3f, r0	; 63
    1d80:	0f 90       	pop	r0
    1d82:	1f 90       	pop	r1
    1d84:	18 95       	reti

00001d86 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    1d86:	1f 92       	push	r1
    1d88:	0f 92       	push	r0
    1d8a:	0f b6       	in	r0, 0x3f	; 63
    1d8c:	0f 92       	push	r0
    1d8e:	11 24       	eor	r1, r1
    1d90:	2f 93       	push	r18
    1d92:	3f 93       	push	r19
    1d94:	4f 93       	push	r20
    1d96:	5f 93       	push	r21
    1d98:	6f 93       	push	r22
    1d9a:	7f 93       	push	r23
    1d9c:	8f 93       	push	r24
    1d9e:	9f 93       	push	r25
    1da0:	af 93       	push	r26
    1da2:	bf 93       	push	r27
    1da4:	ef 93       	push	r30
    1da6:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    1da8:	8c e0       	ldi	r24, 0x0C	; 12
    1daa:	94 e0       	ldi	r25, 0x04	; 4
    1dac:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    1db0:	ff 91       	pop	r31
    1db2:	ef 91       	pop	r30
    1db4:	bf 91       	pop	r27
    1db6:	af 91       	pop	r26
    1db8:	9f 91       	pop	r25
    1dba:	8f 91       	pop	r24
    1dbc:	7f 91       	pop	r23
    1dbe:	6f 91       	pop	r22
    1dc0:	5f 91       	pop	r21
    1dc2:	4f 91       	pop	r20
    1dc4:	3f 91       	pop	r19
    1dc6:	2f 91       	pop	r18
    1dc8:	0f 90       	pop	r0
    1dca:	0f be       	out	0x3f, r0	; 63
    1dcc:	0f 90       	pop	r0
    1dce:	1f 90       	pop	r1
    1dd0:	18 95       	reti

00001dd2 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    1dd2:	8c e0       	ldi	r24, 0x0C	; 12
    1dd4:	94 e0       	ldi	r25, 0x04	; 4
    1dd6:	0e 94 57 0d 	call	0x1aae	; 0x1aae <_ZN14HardwareSerial9availableEv>
    1dda:	21 e0       	ldi	r18, 0x01	; 1
    1ddc:	89 2b       	or	r24, r25
    1dde:	09 f4       	brne	.+2      	; 0x1de2 <_Z17Serial0_availablev+0x10>
    1de0:	20 e0       	ldi	r18, 0x00	; 0
}
    1de2:	82 2f       	mov	r24, r18
    1de4:	08 95       	ret

00001de6 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1de6:	ec e0       	ldi	r30, 0x0C	; 12
    1de8:	f4 e0       	ldi	r31, 0x04	; 4
    1dea:	13 82       	std	Z+3, r1	; 0x03
    1dec:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    1dee:	88 ee       	ldi	r24, 0xE8	; 232
    1df0:	93 e0       	ldi	r25, 0x03	; 3
    1df2:	a0 e0       	ldi	r26, 0x00	; 0
    1df4:	b0 e0       	ldi	r27, 0x00	; 0
    1df6:	84 83       	std	Z+4, r24	; 0x04
    1df8:	95 83       	std	Z+5, r25	; 0x05
    1dfa:	a6 83       	std	Z+6, r26	; 0x06
    1dfc:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    1dfe:	88 e7       	ldi	r24, 0x78	; 120
    1e00:	92 e0       	ldi	r25, 0x02	; 2
    1e02:	91 83       	std	Z+1, r25	; 0x01
    1e04:	80 83       	st	Z, r24
    1e06:	85 ec       	ldi	r24, 0xC5	; 197
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	95 87       	std	Z+13, r25	; 0x0d
    1e0c:	84 87       	std	Z+12, r24	; 0x0c
    1e0e:	84 ec       	ldi	r24, 0xC4	; 196
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	97 87       	std	Z+15, r25	; 0x0f
    1e14:	86 87       	std	Z+14, r24	; 0x0e
    1e16:	80 ec       	ldi	r24, 0xC0	; 192
    1e18:	90 e0       	ldi	r25, 0x00	; 0
    1e1a:	91 8b       	std	Z+17, r25	; 0x11
    1e1c:	80 8b       	std	Z+16, r24	; 0x10
    1e1e:	81 ec       	ldi	r24, 0xC1	; 193
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	93 8b       	std	Z+19, r25	; 0x13
    1e24:	82 8b       	std	Z+18, r24	; 0x12
    1e26:	82 ec       	ldi	r24, 0xC2	; 194
    1e28:	90 e0       	ldi	r25, 0x00	; 0
    1e2a:	95 8b       	std	Z+21, r25	; 0x15
    1e2c:	84 8b       	std	Z+20, r24	; 0x14
    1e2e:	86 ec       	ldi	r24, 0xC6	; 198
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	97 8b       	std	Z+23, r25	; 0x17
    1e34:	86 8b       	std	Z+22, r24	; 0x16
    1e36:	11 8e       	std	Z+25, r1	; 0x19
    1e38:	12 8e       	std	Z+26, r1	; 0x1a
    1e3a:	13 8e       	std	Z+27, r1	; 0x1b
    1e3c:	14 8e       	std	Z+28, r1	; 0x1c
    1e3e:	08 95       	ret

00001e40 <_ZN5Print5writeEPKhj>:
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    1e40:	cf 92       	push	r12
    1e42:	df 92       	push	r13
    1e44:	ef 92       	push	r14
    1e46:	ff 92       	push	r15
    1e48:	0f 93       	push	r16
    1e4a:	1f 93       	push	r17
    1e4c:	cf 93       	push	r28
    1e4e:	df 93       	push	r29
    1e50:	6c 01       	movw	r12, r24
    1e52:	7a 01       	movw	r14, r20
    1e54:	8b 01       	movw	r16, r22
    1e56:	c0 e0       	ldi	r28, 0x00	; 0
    1e58:	d0 e0       	ldi	r29, 0x00	; 0
    1e5a:	ce 15       	cp	r28, r14
    1e5c:	df 05       	cpc	r29, r15
    1e5e:	89 f0       	breq	.+34     	; 0x1e82 <_ZN5Print5writeEPKhj+0x42>
    1e60:	d8 01       	movw	r26, r16
    1e62:	6d 91       	ld	r22, X+
    1e64:	8d 01       	movw	r16, r26
    1e66:	d6 01       	movw	r26, r12
    1e68:	ed 91       	ld	r30, X+
    1e6a:	fc 91       	ld	r31, X
    1e6c:	01 90       	ld	r0, Z+
    1e6e:	f0 81       	ld	r31, Z
    1e70:	e0 2d       	mov	r30, r0
    1e72:	c6 01       	movw	r24, r12
    1e74:	09 95       	icall
    1e76:	89 2b       	or	r24, r25
    1e78:	11 f4       	brne	.+4      	; 0x1e7e <_ZN5Print5writeEPKhj+0x3e>
    1e7a:	7e 01       	movw	r14, r28
    1e7c:	02 c0       	rjmp	.+4      	; 0x1e82 <_ZN5Print5writeEPKhj+0x42>
    1e7e:	21 96       	adiw	r28, 0x01	; 1
    1e80:	ec cf       	rjmp	.-40     	; 0x1e5a <_ZN5Print5writeEPKhj+0x1a>
    1e82:	c7 01       	movw	r24, r14
    1e84:	df 91       	pop	r29
    1e86:	cf 91       	pop	r28
    1e88:	1f 91       	pop	r17
    1e8a:	0f 91       	pop	r16
    1e8c:	ff 90       	pop	r15
    1e8e:	ef 90       	pop	r14
    1e90:	df 90       	pop	r13
    1e92:	cf 90       	pop	r12
    1e94:	08 95       	ret

00001e96 <_ZN5Print5writeEPKc>:
    1e96:	61 15       	cp	r22, r1
    1e98:	71 05       	cpc	r23, r1
    1e9a:	79 f0       	breq	.+30     	; 0x1eba <_ZN5Print5writeEPKc+0x24>
    1e9c:	fb 01       	movw	r30, r22
    1e9e:	01 90       	ld	r0, Z+
    1ea0:	00 20       	and	r0, r0
    1ea2:	e9 f7       	brne	.-6      	; 0x1e9e <_ZN5Print5writeEPKc+0x8>
    1ea4:	31 97       	sbiw	r30, 0x01	; 1
    1ea6:	af 01       	movw	r20, r30
    1ea8:	46 1b       	sub	r20, r22
    1eaa:	57 0b       	sbc	r21, r23
    1eac:	dc 01       	movw	r26, r24
    1eae:	ed 91       	ld	r30, X+
    1eb0:	fc 91       	ld	r31, X
    1eb2:	02 80       	ldd	r0, Z+2	; 0x02
    1eb4:	f3 81       	ldd	r31, Z+3	; 0x03
    1eb6:	e0 2d       	mov	r30, r0
    1eb8:	09 94       	ijmp
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	08 95       	ret

00001ec0 <_ZN5Print5printEPKc>:
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    1ec0:	0c 94 4b 0f 	jmp	0x1e96	; 0x1e96 <_ZN5Print5writeEPKc>

00001ec4 <OsEE_atmega_startTimer1>:
    1ec4:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1ec8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1ecc:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    1ed0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ed4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ed8:	61 15       	cp	r22, r1
    1eda:	20 e1       	ldi	r18, 0x10	; 16
    1edc:	72 07       	cpc	r23, r18
    1ede:	81 05       	cpc	r24, r1
    1ee0:	91 05       	cpc	r25, r1
    1ee2:	48 f4       	brcc	.+18     	; 0x1ef6 <OsEE_atmega_startTimer1+0x32>
    1ee4:	e4 e0       	ldi	r30, 0x04	; 4
    1ee6:	66 0f       	add	r22, r22
    1ee8:	77 1f       	adc	r23, r23
    1eea:	ea 95       	dec	r30
    1eec:	e1 f7       	brne	.-8      	; 0x1ee6 <OsEE_atmega_startTimer1+0x22>
    1eee:	61 50       	subi	r22, 0x01	; 1
    1ef0:	71 09       	sbc	r23, r1
    1ef2:	81 e0       	ldi	r24, 0x01	; 1
    1ef4:	42 c0       	rjmp	.+132    	; 0x1f7a <OsEE_atmega_startTimer1+0xb6>
    1ef6:	61 15       	cp	r22, r1
    1ef8:	20 e8       	ldi	r18, 0x80	; 128
    1efa:	72 07       	cpc	r23, r18
    1efc:	81 05       	cpc	r24, r1
    1efe:	91 05       	cpc	r25, r1
    1f00:	30 f4       	brcc	.+12     	; 0x1f0e <OsEE_atmega_startTimer1+0x4a>
    1f02:	66 0f       	add	r22, r22
    1f04:	77 1f       	adc	r23, r23
    1f06:	61 50       	subi	r22, 0x01	; 1
    1f08:	71 09       	sbc	r23, r1
    1f0a:	82 e0       	ldi	r24, 0x02	; 2
    1f0c:	36 c0       	rjmp	.+108    	; 0x1f7a <OsEE_atmega_startTimer1+0xb6>
    1f0e:	6c 3f       	cpi	r22, 0xFC	; 252
    1f10:	2f ef       	ldi	r18, 0xFF	; 255
    1f12:	72 07       	cpc	r23, r18
    1f14:	23 e0       	ldi	r18, 0x03	; 3
    1f16:	82 07       	cpc	r24, r18
    1f18:	91 05       	cpc	r25, r1
    1f1a:	70 f4       	brcc	.+28     	; 0x1f38 <OsEE_atmega_startTimer1+0x74>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	42 e0       	ldi	r20, 0x02	; 2
    1f22:	b6 95       	lsr	r27
    1f24:	a7 95       	ror	r26
    1f26:	97 95       	ror	r25
    1f28:	87 95       	ror	r24
    1f2a:	4a 95       	dec	r20
    1f2c:	d1 f7       	brne	.-12     	; 0x1f22 <OsEE_atmega_startTimer1+0x5e>
    1f2e:	bc 01       	movw	r22, r24
    1f30:	61 50       	subi	r22, 0x01	; 1
    1f32:	71 09       	sbc	r23, r1
    1f34:	83 e0       	ldi	r24, 0x03	; 3
    1f36:	21 c0       	rjmp	.+66     	; 0x1f7a <OsEE_atmega_startTimer1+0xb6>
    1f38:	61 15       	cp	r22, r1
    1f3a:	71 05       	cpc	r23, r1
    1f3c:	20 e1       	ldi	r18, 0x10	; 16
    1f3e:	82 07       	cpc	r24, r18
    1f40:	91 05       	cpc	r25, r1
    1f42:	70 f4       	brcc	.+28     	; 0x1f60 <OsEE_atmega_startTimer1+0x9c>
    1f44:	dc 01       	movw	r26, r24
    1f46:	cb 01       	movw	r24, r22
    1f48:	34 e0       	ldi	r19, 0x04	; 4
    1f4a:	b6 95       	lsr	r27
    1f4c:	a7 95       	ror	r26
    1f4e:	97 95       	ror	r25
    1f50:	87 95       	ror	r24
    1f52:	3a 95       	dec	r19
    1f54:	d1 f7       	brne	.-12     	; 0x1f4a <OsEE_atmega_startTimer1+0x86>
    1f56:	bc 01       	movw	r22, r24
    1f58:	61 50       	subi	r22, 0x01	; 1
    1f5a:	71 09       	sbc	r23, r1
    1f5c:	84 e0       	ldi	r24, 0x04	; 4
    1f5e:	0d c0       	rjmp	.+26     	; 0x1f7a <OsEE_atmega_startTimer1+0xb6>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	26 e0       	ldi	r18, 0x06	; 6
    1f66:	b6 95       	lsr	r27
    1f68:	a7 95       	ror	r26
    1f6a:	97 95       	ror	r25
    1f6c:	87 95       	ror	r24
    1f6e:	2a 95       	dec	r18
    1f70:	d1 f7       	brne	.-12     	; 0x1f66 <OsEE_atmega_startTimer1+0xa2>
    1f72:	bc 01       	movw	r22, r24
    1f74:	61 50       	subi	r22, 0x01	; 1
    1f76:	71 09       	sbc	r23, r1
    1f78:	85 e0       	ldi	r24, 0x05	; 5
    1f7a:	92 e0       	ldi	r25, 0x02	; 2
    1f7c:	96 bb       	out	0x16, r25	; 22
    1f7e:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1f82:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1f86:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1f8a:	88 60       	ori	r24, 0x08	; 8
    1f8c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1f90:	08 95       	ret

00001f92 <StartOS>:
    1f92:	4f 92       	push	r4
    1f94:	5f 92       	push	r5
    1f96:	6f 92       	push	r6
    1f98:	7f 92       	push	r7
    1f9a:	8f 92       	push	r8
    1f9c:	9f 92       	push	r9
    1f9e:	af 92       	push	r10
    1fa0:	bf 92       	push	r11
    1fa2:	cf 92       	push	r12
    1fa4:	df 92       	push	r13
    1fa6:	ef 92       	push	r14
    1fa8:	ff 92       	push	r15
    1faa:	0f 93       	push	r16
    1fac:	1f 93       	push	r17
    1fae:	cf 93       	push	r28
    1fb0:	df 93       	push	r29
    1fb2:	00 d0       	rcall	.+0      	; 0x1fb4 <StartOS+0x22>
    1fb4:	cd b7       	in	r28, 0x3d	; 61
    1fb6:	de b7       	in	r29, 0x3e	; 62
    1fb8:	00 91 e8 01 	lds	r16, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    1fbc:	10 91 e9 01 	lds	r17, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    1fc0:	9f b7       	in	r25, 0x3f	; 63
    1fc2:	f8 94       	cli
    1fc4:	d8 01       	movw	r26, r16
    1fc6:	18 96       	adiw	r26, 0x08	; 8
    1fc8:	2d 91       	ld	r18, X+
    1fca:	3c 91       	ld	r19, X
    1fcc:	19 97       	sbiw	r26, 0x09	; 9
    1fce:	23 2b       	or	r18, r19
    1fd0:	09 f0       	breq	.+2      	; 0x1fd4 <StartOS+0x42>
    1fd2:	6d c0       	rjmp	.+218    	; 0x20ae <StartOS+0x11c>
    1fd4:	f8 2e       	mov	r15, r24
    1fd6:	88 e7       	ldi	r24, 0x78	; 120
    1fd8:	93 e1       	ldi	r25, 0x13	; 19
    1fda:	9a 83       	std	Y+2, r25	; 0x02
    1fdc:	89 83       	std	Y+1, r24	; 0x01
    1fde:	c0 90 ec 01 	lds	r12, 0x01EC	; 0x8001ec <osEE_cdb_var+0x4>
    1fe2:	d0 90 ed 01 	lds	r13, 0x01ED	; 0x8001ed <osEE_cdb_var+0x5>
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	19 96       	adiw	r26, 0x09	; 9
    1fec:	9c 93       	st	X, r25
    1fee:	8e 93       	st	-X, r24
    1ff0:	18 97       	sbiw	r26, 0x08	; 8
    1ff2:	1a 96       	adiw	r26, 0x0a	; 10
    1ff4:	fc 92       	st	X, r15
    1ff6:	0e 94 42 0b 	call	0x1684	; 0x1684 <StartupHook>
    1ffa:	40 90 ee 01 	lds	r4, 0x01EE	; 0x8001ee <osEE_cdb_var+0x6>
    1ffe:	50 90 ef 01 	lds	r5, 0x01EF	; 0x8001ef <osEE_cdb_var+0x7>
    2002:	48 01       	movw	r8, r16
    2004:	b2 e0       	ldi	r27, 0x02	; 2
    2006:	8b 0e       	add	r8, r27
    2008:	91 1c       	adc	r9, r1
    200a:	f2 01       	movw	r30, r4
    200c:	84 e0       	ldi	r24, 0x04	; 4
    200e:	f8 9e       	mul	r15, r24
    2010:	e0 0d       	add	r30, r0
    2012:	f1 1d       	adc	r31, r1
    2014:	11 24       	eor	r1, r1
    2016:	a2 80       	ldd	r10, Z+2	; 0x02
    2018:	b3 80       	ldd	r11, Z+3	; 0x03
    201a:	e1 2c       	mov	r14, r1
    201c:	f1 2c       	mov	r15, r1
    201e:	2f 01       	movw	r4, r30
    2020:	66 24       	eor	r6, r6
    2022:	63 94       	inc	r6
    2024:	71 2c       	mov	r7, r1
    2026:	ea 14       	cp	r14, r10
    2028:	fb 04       	cpc	r15, r11
    202a:	31 f1       	breq	.+76     	; 0x2078 <StartOS+0xe6>
    202c:	d2 01       	movw	r26, r4
    202e:	ed 91       	ld	r30, X+
    2030:	fc 91       	ld	r31, X
    2032:	c7 01       	movw	r24, r14
    2034:	88 0f       	add	r24, r24
    2036:	99 1f       	adc	r25, r25
    2038:	e8 0f       	add	r30, r24
    203a:	f9 1f       	adc	r31, r25
    203c:	40 81       	ld	r20, Z
    203e:	51 81       	ldd	r21, Z+1	; 0x01
    2040:	da 01       	movw	r26, r20
    2042:	14 96       	adiw	r26, 0x04	; 4
    2044:	ed 91       	ld	r30, X+
    2046:	fc 91       	ld	r31, X
    2048:	15 97       	sbiw	r26, 0x05	; 5
    204a:	80 81       	ld	r24, Z
    204c:	8f 5f       	subi	r24, 0xFF	; 255
    204e:	80 83       	st	Z, r24
    2050:	73 82       	std	Z+3, r7	; 0x03
    2052:	62 82       	std	Z+2, r6	; 0x02
    2054:	f8 01       	movw	r30, r16
    2056:	64 81       	ldd	r22, Z+4	; 0x04
    2058:	75 81       	ldd	r23, Z+5	; 0x05
    205a:	db 01       	movw	r26, r22
    205c:	8d 91       	ld	r24, X+
    205e:	9c 91       	ld	r25, X
    2060:	11 97       	sbiw	r26, 0x01	; 1
    2062:	95 83       	std	Z+5, r25	; 0x05
    2064:	84 83       	std	Z+4, r24	; 0x04
    2066:	1d 92       	st	X+, r1
    2068:	1c 92       	st	X, r1
    206a:	c4 01       	movw	r24, r8
    206c:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_rq_insert>
    2070:	bf ef       	ldi	r27, 0xFF	; 255
    2072:	eb 1a       	sub	r14, r27
    2074:	fb 0a       	sbc	r15, r27
    2076:	d7 cf       	rjmp	.-82     	; 0x2026 <StartOS+0x94>
    2078:	f8 01       	movw	r30, r16
    207a:	80 85       	ldd	r24, Z+8	; 0x08
    207c:	91 85       	ldd	r25, Z+9	; 0x09
    207e:	01 97       	sbiw	r24, 0x01	; 1
    2080:	21 f4       	brne	.+8      	; 0x208a <StartOS+0xf8>
    2082:	82 e0       	ldi	r24, 0x02	; 2
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	91 87       	std	Z+9, r25	; 0x09
    2088:	80 87       	std	Z+8, r24	; 0x08
    208a:	d8 01       	movw	r26, r16
    208c:	18 96       	adiw	r26, 0x08	; 8
    208e:	8d 91       	ld	r24, X+
    2090:	9c 91       	ld	r25, X
    2092:	19 97       	sbiw	r26, 0x09	; 9
    2094:	02 97       	sbiw	r24, 0x02	; 2
    2096:	79 f4       	brne	.+30     	; 0x20b6 <StartOS+0x124>
    2098:	f6 01       	movw	r30, r12
    209a:	62 81       	ldd	r22, Z+2	; 0x02
    209c:	73 81       	ldd	r23, Z+3	; 0x03
    209e:	ab 01       	movw	r20, r22
    20a0:	c6 01       	movw	r24, r12
    20a2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>
    20a6:	c6 01       	movw	r24, r12
    20a8:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <osEE_task_end>
    20ac:	04 c0       	rjmp	.+8      	; 0x20b6 <StartOS+0x124>
    20ae:	9f bf       	out	0x3f, r25	; 63
    20b0:	81 e0       	ldi	r24, 0x01	; 1
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	02 c0       	rjmp	.+4      	; 0x20ba <StartOS+0x128>
    20b6:	80 e0       	ldi	r24, 0x00	; 0
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	0f 90       	pop	r0
    20bc:	0f 90       	pop	r0
    20be:	df 91       	pop	r29
    20c0:	cf 91       	pop	r28
    20c2:	1f 91       	pop	r17
    20c4:	0f 91       	pop	r16
    20c6:	ff 90       	pop	r15
    20c8:	ef 90       	pop	r14
    20ca:	df 90       	pop	r13
    20cc:	cf 90       	pop	r12
    20ce:	bf 90       	pop	r11
    20d0:	af 90       	pop	r10
    20d2:	9f 90       	pop	r9
    20d4:	8f 90       	pop	r8
    20d6:	7f 90       	pop	r7
    20d8:	6f 90       	pop	r6
    20da:	5f 90       	pop	r5
    20dc:	4f 90       	pop	r4
    20de:	08 95       	ret

000020e0 <ActivateTask>:
    20e0:	ff 92       	push	r15
    20e2:	0f 93       	push	r16
    20e4:	1f 93       	push	r17
    20e6:	cf 93       	push	r28
    20e8:	df 93       	push	r29
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	20 91 e6 01 	lds	r18, 0x01E6	; 0x8001e6 <osEE_kdb_var+0x4>
    20f0:	30 91 e7 01 	lds	r19, 0x01E7	; 0x8001e7 <osEE_kdb_var+0x5>
    20f4:	82 17       	cp	r24, r18
    20f6:	93 07       	cpc	r25, r19
    20f8:	f0 f4       	brcc	.+60     	; 0x2136 <ActivateTask+0x56>
    20fa:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <osEE_kdb_var+0x2>
    20fe:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <osEE_kdb_var+0x3>
    2102:	88 0f       	add	r24, r24
    2104:	99 1f       	adc	r25, r25
    2106:	e8 0f       	add	r30, r24
    2108:	f9 1f       	adc	r31, r25
    210a:	00 81       	ld	r16, Z
    210c:	11 81       	ldd	r17, Z+1	; 0x01
    210e:	f8 01       	movw	r30, r16
    2110:	87 81       	ldd	r24, Z+7	; 0x07
    2112:	90 85       	ldd	r25, Z+8	; 0x08
    2114:	02 97       	sbiw	r24, 0x02	; 2
    2116:	78 f4       	brcc	.+30     	; 0x2136 <ActivateTask+0x56>
    2118:	ff b6       	in	r15, 0x3f	; 63
    211a:	f8 94       	cli
    211c:	c8 01       	movw	r24, r16
    211e:	0e 94 c2 11 	call	0x2384	; 0x2384 <osEE_task_activated>
    2122:	ec 01       	movw	r28, r24
    2124:	89 2b       	or	r24, r25
    2126:	29 f4       	brne	.+10     	; 0x2132 <ActivateTask+0x52>
    2128:	b8 01       	movw	r22, r16
    212a:	82 ee       	ldi	r24, 0xE2	; 226
    212c:	91 e0       	ldi	r25, 0x01	; 1
    212e:	0e 94 03 12 	call	0x2406	; 0x2406 <osEE_scheduler_task_activated>
    2132:	ff be       	out	0x3f, r15	; 63
    2134:	02 c0       	rjmp	.+4      	; 0x213a <ActivateTask+0x5a>
    2136:	c3 e0       	ldi	r28, 0x03	; 3
    2138:	d0 e0       	ldi	r29, 0x00	; 0
    213a:	ce 01       	movw	r24, r28
    213c:	df 91       	pop	r29
    213e:	cf 91       	pop	r28
    2140:	1f 91       	pop	r17
    2142:	0f 91       	pop	r16
    2144:	ff 90       	pop	r15
    2146:	08 95       	ret

00002148 <osEE_scheduler_task_wrapper_restore>:
    2148:	dc 01       	movw	r26, r24
    214a:	14 96       	adiw	r26, 0x04	; 4
    214c:	ed 91       	ld	r30, X+
    214e:	fc 91       	ld	r31, X
    2150:	15 97       	sbiw	r26, 0x05	; 5
    2152:	84 e0       	ldi	r24, 0x04	; 4
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	93 83       	std	Z+3, r25	; 0x03
    2158:	82 83       	std	Z+2, r24	; 0x02
    215a:	08 95       	ret

0000215c <osEE_scheduler_task_wrapper_run>:
    215c:	ec 01       	movw	r28, r24
    215e:	ec 81       	ldd	r30, Y+4	; 0x04
    2160:	fd 81       	ldd	r31, Y+5	; 0x05
    2162:	81 81       	ldd	r24, Z+1	; 0x01
    2164:	24 e0       	ldi	r18, 0x04	; 4
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	33 83       	std	Z+3, r19	; 0x03
    216a:	22 83       	std	Z+2, r18	; 0x02
    216c:	8f 3f       	cpi	r24, 0xFF	; 255
    216e:	09 f0       	breq	.+2      	; 0x2172 <osEE_scheduler_task_wrapper_run+0x16>
    2170:	78 94       	sei
    2172:	e9 85       	ldd	r30, Y+9	; 0x09
    2174:	fa 85       	ldd	r31, Y+10	; 0x0a
    2176:	09 95       	icall
    2178:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    217c:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    2180:	10 8a       	std	Z+16, r1	; 0x10
    2182:	87 85       	ldd	r24, Z+15	; 0x0f
    2184:	88 23       	and	r24, r24
    2186:	19 f0       	breq	.+6      	; 0x218e <osEE_scheduler_task_wrapper_run+0x32>
    2188:	17 86       	std	Z+15, r1	; 0x0f
    218a:	85 85       	ldd	r24, Z+13	; 0x0d
    218c:	8f bf       	out	0x3f, r24	; 63
    218e:	81 89       	ldd	r24, Z+17	; 0x11
    2190:	88 23       	and	r24, r24
    2192:	11 f0       	breq	.+4      	; 0x2198 <osEE_scheduler_task_wrapper_run+0x3c>
    2194:	11 8a       	std	Z+17, r1	; 0x11
    2196:	78 94       	sei
    2198:	8f b7       	in	r24, 0x3f	; 63
    219a:	f8 94       	cli
    219c:	60 e6       	ldi	r22, 0x60	; 96
    219e:	73 e1       	ldi	r23, 0x13	; 19
    21a0:	8a 81       	ldd	r24, Y+2	; 0x02
    21a2:	9b 81       	ldd	r25, Y+3	; 0x03
    21a4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <osEE_hal_terminate_ctx>

000021a8 <osEE_idle_hook_wrapper>:
    21a8:	0f 93       	push	r16
    21aa:	1f 93       	push	r17
    21ac:	cf 93       	push	r28
    21ae:	df 93       	push	r29
    21b0:	cf b7       	in	r28, 0x3f	; 63
    21b2:	f8 94       	cli
    21b4:	82 ee       	ldi	r24, 0xE2	; 226
    21b6:	91 e0       	ldi	r25, 0x01	; 1
    21b8:	0e 94 c9 12 	call	0x2592	; 0x2592 <osEE_scheduler_task_preemption_point>
    21bc:	cf bf       	out	0x3f, r28	; 63
    21be:	00 91 e8 01 	lds	r16, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    21c2:	10 91 e9 01 	lds	r17, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    21c6:	c0 91 ea 01 	lds	r28, 0x01EA	; 0x8001ea <osEE_cdb_var+0x2>
    21ca:	d0 91 eb 01 	lds	r29, 0x01EB	; 0x8001eb <osEE_cdb_var+0x3>
    21ce:	f8 01       	movw	r30, r16
    21d0:	80 85       	ldd	r24, Z+8	; 0x08
    21d2:	91 85       	ldd	r25, Z+9	; 0x09
    21d4:	02 97       	sbiw	r24, 0x02	; 2
    21d6:	29 f4       	brne	.+10     	; 0x21e2 <osEE_idle_hook_wrapper+0x3a>
    21d8:	20 97       	sbiw	r28, 0x00	; 0
    21da:	c9 f3       	breq	.-14     	; 0x21ce <osEE_idle_hook_wrapper+0x26>
    21dc:	fe 01       	movw	r30, r28
    21de:	09 95       	icall
    21e0:	f6 cf       	rjmp	.-20     	; 0x21ce <osEE_idle_hook_wrapper+0x26>
    21e2:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <osEE_cdb_var+0x4>
    21e6:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <osEE_cdb_var+0x5>
    21ea:	df 91       	pop	r29
    21ec:	cf 91       	pop	r28
    21ee:	1f 91       	pop	r17
    21f0:	0f 91       	pop	r16
    21f2:	0c 94 45 13 	jmp	0x268a	; 0x268a <osEE_idle_task_terminate>

000021f6 <osEE_scheduler_core_rq_preempt_stk>:
    21f6:	0f 93       	push	r16
    21f8:	1f 93       	push	r17
    21fa:	cf 93       	push	r28
    21fc:	df 93       	push	r29
    21fe:	ec 01       	movw	r28, r24
    2200:	a8 81       	ld	r26, Y
    2202:	b9 81       	ldd	r27, Y+1	; 0x01
    2204:	eb 01       	movw	r28, r22
    2206:	e8 81       	ld	r30, Y
    2208:	f9 81       	ldd	r31, Y+1	; 0x01
    220a:	16 96       	adiw	r26, 0x06	; 6
    220c:	cd 91       	ld	r28, X+
    220e:	dc 91       	ld	r29, X
    2210:	17 97       	sbiw	r26, 0x07	; 7
    2212:	20 97       	sbiw	r28, 0x00	; 0
    2214:	b1 f0       	breq	.+44     	; 0x2242 <osEE_scheduler_core_rq_preempt_stk+0x4c>
    2216:	8a 81       	ldd	r24, Y+2	; 0x02
    2218:	9b 81       	ldd	r25, Y+3	; 0x03
    221a:	30 97       	sbiw	r30, 0x00	; 0
    221c:	e1 f1       	breq	.+120    	; 0x2296 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    221e:	ec 01       	movw	r28, r24
    2220:	0c 81       	ldd	r16, Y+4	; 0x04
    2222:	1d 81       	ldd	r17, Y+5	; 0x05
    2224:	22 81       	ldd	r18, Z+2	; 0x02
    2226:	33 81       	ldd	r19, Z+3	; 0x03
    2228:	e9 01       	movw	r28, r18
    222a:	4c 81       	ldd	r20, Y+4	; 0x04
    222c:	5d 81       	ldd	r21, Y+5	; 0x05
    222e:	e8 01       	movw	r28, r16
    2230:	39 81       	ldd	r19, Y+1	; 0x01
    2232:	ea 01       	movw	r28, r20
    2234:	29 81       	ldd	r18, Y+1	; 0x01
    2236:	32 17       	cp	r19, r18
    2238:	70 f5       	brcc	.+92     	; 0x2296 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    223a:	22 e0       	ldi	r18, 0x02	; 2
    223c:	30 e0       	ldi	r19, 0x00	; 0
    223e:	e8 01       	movw	r28, r16
    2240:	0b c0       	rjmp	.+22     	; 0x2258 <osEE_scheduler_core_rq_preempt_stk+0x62>
    2242:	30 97       	sbiw	r30, 0x00	; 0
    2244:	41 f1       	breq	.+80     	; 0x2296 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    2246:	ec 01       	movw	r28, r24
    2248:	8c 81       	ldd	r24, Y+4	; 0x04
    224a:	9d 81       	ldd	r25, Y+5	; 0x05
    224c:	ec 01       	movw	r28, r24
    224e:	4c 81       	ldd	r20, Y+4	; 0x04
    2250:	5d 81       	ldd	r21, Y+5	; 0x05
    2252:	22 e0       	ldi	r18, 0x02	; 2
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	ea 01       	movw	r28, r20
    2258:	3b 83       	std	Y+3, r19	; 0x03
    225a:	2a 83       	std	Y+2, r18	; 0x02
    225c:	20 81       	ld	r18, Z
    225e:	31 81       	ldd	r19, Z+1	; 0x01
    2260:	eb 01       	movw	r28, r22
    2262:	39 83       	std	Y+1, r19	; 0x01
    2264:	28 83       	st	Y, r18
    2266:	c2 81       	ldd	r28, Z+2	; 0x02
    2268:	d3 81       	ldd	r29, Z+3	; 0x03
    226a:	4c 81       	ldd	r20, Y+4	; 0x04
    226c:	5d 81       	ldd	r21, Y+5	; 0x05
    226e:	16 96       	adiw	r26, 0x06	; 6
    2270:	2d 91       	ld	r18, X+
    2272:	3c 91       	ld	r19, X
    2274:	17 97       	sbiw	r26, 0x07	; 7
    2276:	31 83       	std	Z+1, r19	; 0x01
    2278:	20 83       	st	Z, r18
    227a:	17 96       	adiw	r26, 0x07	; 7
    227c:	fc 93       	st	X, r31
    227e:	ee 93       	st	-X, r30
    2280:	16 97       	sbiw	r26, 0x06	; 6
    2282:	cd 93       	st	X+, r28
    2284:	dc 93       	st	X, r29
    2286:	2c 85       	ldd	r18, Y+12	; 0x0c
    2288:	fa 01       	movw	r30, r20
    228a:	31 81       	ldd	r19, Z+1	; 0x01
    228c:	32 17       	cp	r19, r18
    228e:	28 f4       	brcc	.+10     	; 0x229a <osEE_scheduler_core_rq_preempt_stk+0xa4>
    2290:	fa 01       	movw	r30, r20
    2292:	21 83       	std	Z+1, r18	; 0x01
    2294:	02 c0       	rjmp	.+4      	; 0x229a <osEE_scheduler_core_rq_preempt_stk+0xa4>
    2296:	80 e0       	ldi	r24, 0x00	; 0
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	df 91       	pop	r29
    229c:	cf 91       	pop	r28
    229e:	1f 91       	pop	r17
    22a0:	0f 91       	pop	r16
    22a2:	08 95       	ret

000022a4 <osEE_sn_priority_insert>:
    22a4:	0f 93       	push	r16
    22a6:	1f 93       	push	r17
    22a8:	cf 93       	push	r28
    22aa:	df 93       	push	r29
    22ac:	db 01       	movw	r26, r22
    22ae:	12 96       	adiw	r26, 0x02	; 2
    22b0:	ed 91       	ld	r30, X+
    22b2:	fc 91       	ld	r31, X
    22b4:	13 97       	sbiw	r26, 0x03	; 3
    22b6:	a4 81       	ldd	r26, Z+4	; 0x04
    22b8:	b5 81       	ldd	r27, Z+5	; 0x05
    22ba:	41 15       	cp	r20, r1
    22bc:	51 05       	cpc	r21, r1
    22be:	11 f0       	breq	.+4      	; 0x22c4 <osEE_sn_priority_insert+0x20>
    22c0:	23 85       	ldd	r18, Z+11	; 0x0b
    22c2:	02 c0       	rjmp	.+4      	; 0x22c8 <osEE_sn_priority_insert+0x24>
    22c4:	11 96       	adiw	r26, 0x01	; 1
    22c6:	2c 91       	ld	r18, X
    22c8:	ec 01       	movw	r28, r24
    22ca:	e8 81       	ld	r30, Y
    22cc:	f9 81       	ldd	r31, Y+1	; 0x01
    22ce:	a0 e0       	ldi	r26, 0x00	; 0
    22d0:	b0 e0       	ldi	r27, 0x00	; 0
    22d2:	30 97       	sbiw	r30, 0x00	; 0
    22d4:	91 f0       	breq	.+36     	; 0x22fa <osEE_sn_priority_insert+0x56>
    22d6:	c2 81       	ldd	r28, Z+2	; 0x02
    22d8:	d3 81       	ldd	r29, Z+3	; 0x03
    22da:	0c 81       	ldd	r16, Y+4	; 0x04
    22dc:	1d 81       	ldd	r17, Y+5	; 0x05
    22de:	41 15       	cp	r20, r1
    22e0:	51 05       	cpc	r21, r1
    22e2:	11 f0       	breq	.+4      	; 0x22e8 <osEE_sn_priority_insert+0x44>
    22e4:	3b 85       	ldd	r19, Y+11	; 0x0b
    22e6:	02 c0       	rjmp	.+4      	; 0x22ec <osEE_sn_priority_insert+0x48>
    22e8:	e8 01       	movw	r28, r16
    22ea:	39 81       	ldd	r19, Y+1	; 0x01
    22ec:	32 17       	cp	r19, r18
    22ee:	28 f0       	brcs	.+10     	; 0x22fa <osEE_sn_priority_insert+0x56>
    22f0:	df 01       	movw	r26, r30
    22f2:	01 90       	ld	r0, Z+
    22f4:	f0 81       	ld	r31, Z
    22f6:	e0 2d       	mov	r30, r0
    22f8:	ec cf       	rjmp	.-40     	; 0x22d2 <osEE_sn_priority_insert+0x2e>
    22fa:	10 97       	sbiw	r26, 0x00	; 0
    22fc:	29 f0       	breq	.+10     	; 0x2308 <osEE_sn_priority_insert+0x64>
    22fe:	6d 93       	st	X+, r22
    2300:	7c 93       	st	X, r23
    2302:	80 e0       	ldi	r24, 0x00	; 0
    2304:	90 e0       	ldi	r25, 0x00	; 0
    2306:	05 c0       	rjmp	.+10     	; 0x2312 <osEE_sn_priority_insert+0x6e>
    2308:	dc 01       	movw	r26, r24
    230a:	6d 93       	st	X+, r22
    230c:	7c 93       	st	X, r23
    230e:	81 e0       	ldi	r24, 0x01	; 1
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	eb 01       	movw	r28, r22
    2314:	f9 83       	std	Y+1, r31	; 0x01
    2316:	e8 83       	st	Y, r30
    2318:	df 91       	pop	r29
    231a:	cf 91       	pop	r28
    231c:	1f 91       	pop	r17
    231e:	0f 91       	pop	r16
    2320:	08 95       	ret

00002322 <osEE_scheduler_rq_insert>:
    2322:	fb 01       	movw	r30, r22
    2324:	53 83       	std	Z+3, r21	; 0x03
    2326:	42 83       	std	Z+2, r20	; 0x02
    2328:	41 e0       	ldi	r20, 0x01	; 1
    232a:	50 e0       	ldi	r21, 0x00	; 0
    232c:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <osEE_sn_priority_insert>

00002330 <osEE_scheduler_core_pop_running>:
    2330:	ef 92       	push	r14
    2332:	ff 92       	push	r15
    2334:	0f 93       	push	r16
    2336:	1f 93       	push	r17
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
    233c:	8c 01       	movw	r16, r24
    233e:	fc 01       	movw	r30, r24
    2340:	c0 81       	ld	r28, Z
    2342:	d1 81       	ldd	r29, Z+1	; 0x01
    2344:	ee 80       	ldd	r14, Y+6	; 0x06
    2346:	ff 80       	ldd	r15, Y+7	; 0x07
    2348:	f7 01       	movw	r30, r14
    234a:	80 81       	ld	r24, Z
    234c:	91 81       	ldd	r25, Z+1	; 0x01
    234e:	9f 83       	std	Y+7, r25	; 0x07
    2350:	8e 83       	std	Y+6, r24	; 0x06
    2352:	c8 01       	movw	r24, r16
    2354:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <osEE_scheduler_core_rq_preempt_stk>
    2358:	ee 81       	ldd	r30, Y+6	; 0x06
    235a:	ff 81       	ldd	r31, Y+7	; 0x07
    235c:	89 2b       	or	r24, r25
    235e:	51 f4       	brne	.+20     	; 0x2374 <osEE_scheduler_core_pop_running+0x44>
    2360:	30 97       	sbiw	r30, 0x00	; 0
    2362:	19 f0       	breq	.+6      	; 0x236a <osEE_scheduler_core_pop_running+0x3a>
    2364:	82 81       	ldd	r24, Z+2	; 0x02
    2366:	93 81       	ldd	r25, Z+3	; 0x03
    2368:	03 c0       	rjmp	.+6      	; 0x2370 <osEE_scheduler_core_pop_running+0x40>
    236a:	f8 01       	movw	r30, r16
    236c:	84 81       	ldd	r24, Z+4	; 0x04
    236e:	95 81       	ldd	r25, Z+5	; 0x05
    2370:	99 83       	std	Y+1, r25	; 0x01
    2372:	88 83       	st	Y, r24
    2374:	c7 01       	movw	r24, r14
    2376:	df 91       	pop	r29
    2378:	cf 91       	pop	r28
    237a:	1f 91       	pop	r17
    237c:	0f 91       	pop	r16
    237e:	ff 90       	pop	r15
    2380:	ef 90       	pop	r14
    2382:	08 95       	ret

00002384 <osEE_task_activated>:
    2384:	dc 01       	movw	r26, r24
    2386:	14 96       	adiw	r26, 0x04	; 4
    2388:	ed 91       	ld	r30, X+
    238a:	fc 91       	ld	r31, X
    238c:	15 97       	sbiw	r26, 0x05	; 5
    238e:	90 81       	ld	r25, Z
    2390:	1d 96       	adiw	r26, 0x0d	; 13
    2392:	8c 91       	ld	r24, X
    2394:	98 17       	cp	r25, r24
    2396:	28 f4       	brcc	.+10     	; 0x23a2 <osEE_task_activated+0x1e>
    2398:	9f 5f       	subi	r25, 0xFF	; 255
    239a:	90 83       	st	Z, r25
    239c:	80 e0       	ldi	r24, 0x00	; 0
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	08 95       	ret
    23a2:	84 e0       	ldi	r24, 0x04	; 4
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	08 95       	ret

000023a8 <osEE_task_end>:
    23a8:	dc 01       	movw	r26, r24
    23aa:	14 96       	adiw	r26, 0x04	; 4
    23ac:	ed 91       	ld	r30, X+
    23ae:	fc 91       	ld	r31, X
    23b0:	15 97       	sbiw	r26, 0x05	; 5
    23b2:	1b 96       	adiw	r26, 0x0b	; 11
    23b4:	8c 91       	ld	r24, X
    23b6:	81 83       	std	Z+1, r24	; 0x01
    23b8:	80 81       	ld	r24, Z
    23ba:	81 50       	subi	r24, 0x01	; 1
    23bc:	80 83       	st	Z, r24
    23be:	81 11       	cpse	r24, r1
    23c0:	03 c0       	rjmp	.+6      	; 0x23c8 <osEE_task_end+0x20>
    23c2:	13 82       	std	Z+3, r1	; 0x03
    23c4:	12 82       	std	Z+2, r1	; 0x02
    23c6:	08 95       	ret
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	93 83       	std	Z+3, r25	; 0x03
    23ce:	82 83       	std	Z+2, r24	; 0x02
    23d0:	08 95       	ret

000023d2 <osEE_activate_isr2>:
    23d2:	20 91 e4 01 	lds	r18, 0x01E4	; 0x8001e4 <osEE_kdb_var+0x2>
    23d6:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <osEE_kdb_var+0x3>
    23da:	e2 2f       	mov	r30, r18
    23dc:	f9 2f       	mov	r31, r25
    23de:	e8 0f       	add	r30, r24
    23e0:	f1 1d       	adc	r31, r1
    23e2:	e8 0f       	add	r30, r24
    23e4:	f1 1d       	adc	r31, r1
    23e6:	60 81       	ld	r22, Z
    23e8:	71 81       	ldd	r23, Z+1	; 0x01
    23ea:	db 01       	movw	r26, r22
    23ec:	14 96       	adiw	r26, 0x04	; 4
    23ee:	ed 91       	ld	r30, X+
    23f0:	fc 91       	ld	r31, X
    23f2:	15 97       	sbiw	r26, 0x05	; 5
    23f4:	80 81       	ld	r24, Z
    23f6:	8f 5f       	subi	r24, 0xFF	; 255
    23f8:	80 83       	st	Z, r24
    23fa:	40 e0       	ldi	r20, 0x00	; 0
    23fc:	50 e0       	ldi	r21, 0x00	; 0
    23fe:	82 ee       	ldi	r24, 0xE2	; 226
    2400:	91 e0       	ldi	r25, 0x01	; 1
    2402:	0c 94 e4 12 	jmp	0x25c8	; 0x25c8 <osEE_scheduler_task_set_running>

00002406 <osEE_scheduler_task_activated>:
    2406:	cf 93       	push	r28
    2408:	df 93       	push	r29
    240a:	db 01       	movw	r26, r22
    240c:	14 96       	adiw	r26, 0x04	; 4
    240e:	cd 91       	ld	r28, X+
    2410:	dc 91       	ld	r29, X
    2412:	15 97       	sbiw	r26, 0x05	; 5
    2414:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    2418:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	dc 01       	movw	r26, r24
    2422:	14 96       	adiw	r26, 0x04	; 4
    2424:	2d 91       	ld	r18, X+
    2426:	3c 91       	ld	r19, X
    2428:	15 97       	sbiw	r26, 0x05	; 5
    242a:	d9 01       	movw	r26, r18
    242c:	11 96       	adiw	r26, 0x01	; 1
    242e:	5c 91       	ld	r21, X
    2430:	49 81       	ldd	r20, Y+1	; 0x01
    2432:	a4 81       	ldd	r26, Z+4	; 0x04
    2434:	b5 81       	ldd	r27, Z+5	; 0x05
    2436:	54 17       	cp	r21, r20
    2438:	18 f5       	brcc	.+70     	; 0x2480 <osEE_scheduler_task_activated+0x7a>
    243a:	4d 91       	ld	r20, X+
    243c:	5c 91       	ld	r21, X
    243e:	11 97       	sbiw	r26, 0x01	; 1
    2440:	55 83       	std	Z+5, r21	; 0x05
    2442:	44 83       	std	Z+4, r20	; 0x04
    2444:	42 e0       	ldi	r20, 0x02	; 2
    2446:	50 e0       	ldi	r21, 0x00	; 0
    2448:	e9 01       	movw	r28, r18
    244a:	5b 83       	std	Y+3, r21	; 0x03
    244c:	4a 83       	std	Y+2, r20	; 0x02
    244e:	13 96       	adiw	r26, 0x03	; 3
    2450:	7c 93       	st	X, r23
    2452:	6e 93       	st	-X, r22
    2454:	12 97       	sbiw	r26, 0x02	; 2
    2456:	26 81       	ldd	r18, Z+6	; 0x06
    2458:	37 81       	ldd	r19, Z+7	; 0x07
    245a:	11 96       	adiw	r26, 0x01	; 1
    245c:	3c 93       	st	X, r19
    245e:	2e 93       	st	-X, r18
    2460:	b7 83       	std	Z+7, r27	; 0x07
    2462:	a6 83       	std	Z+6, r26	; 0x06
    2464:	71 83       	std	Z+1, r23	; 0x01
    2466:	60 83       	st	Z, r22
    2468:	db 01       	movw	r26, r22
    246a:	14 96       	adiw	r26, 0x04	; 4
    246c:	ed 91       	ld	r30, X+
    246e:	fc 91       	ld	r31, X
    2470:	15 97       	sbiw	r26, 0x05	; 5
    2472:	17 82       	std	Z+7, r1	; 0x07
    2474:	16 82       	std	Z+6, r1	; 0x06
    2476:	0e 94 1c 13 	call	0x2638	; 0x2638 <osEE_change_context_from_running>
    247a:	81 e0       	ldi	r24, 0x01	; 1
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	1a c0       	rjmp	.+52     	; 0x24b4 <osEE_scheduler_task_activated+0xae>
    2480:	8a 81       	ldd	r24, Y+2	; 0x02
    2482:	9b 81       	ldd	r25, Y+3	; 0x03
    2484:	89 2b       	or	r24, r25
    2486:	31 f4       	brne	.+12     	; 0x2494 <osEE_scheduler_task_activated+0x8e>
    2488:	81 e0       	ldi	r24, 0x01	; 1
    248a:	90 e0       	ldi	r25, 0x00	; 0
    248c:	9b 83       	std	Y+3, r25	; 0x03
    248e:	8a 83       	std	Y+2, r24	; 0x02
    2490:	1f 82       	std	Y+7, r1	; 0x07
    2492:	1e 82       	std	Y+6, r1	; 0x06
    2494:	8d 91       	ld	r24, X+
    2496:	9c 91       	ld	r25, X
    2498:	11 97       	sbiw	r26, 0x01	; 1
    249a:	95 83       	std	Z+5, r25	; 0x05
    249c:	84 83       	std	Z+4, r24	; 0x04
    249e:	11 96       	adiw	r26, 0x01	; 1
    24a0:	1c 92       	st	X, r1
    24a2:	1e 92       	st	-X, r1
    24a4:	ab 01       	movw	r20, r22
    24a6:	bd 01       	movw	r22, r26
    24a8:	cf 01       	movw	r24, r30
    24aa:	02 96       	adiw	r24, 0x02	; 2
    24ac:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_rq_insert>
    24b0:	80 e0       	ldi	r24, 0x00	; 0
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	df 91       	pop	r29
    24b6:	cf 91       	pop	r28
    24b8:	08 95       	ret

000024ba <osEE_scheduler_task_terminated>:
    24ba:	af 92       	push	r10
    24bc:	bf 92       	push	r11
    24be:	cf 92       	push	r12
    24c0:	df 92       	push	r13
    24c2:	ef 92       	push	r14
    24c4:	ff 92       	push	r15
    24c6:	0f 93       	push	r16
    24c8:	1f 93       	push	r17
    24ca:	cf 93       	push	r28
    24cc:	df 93       	push	r29
    24ce:	c0 91 e8 01 	lds	r28, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    24d2:	d0 91 e9 01 	lds	r29, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    24d6:	fe 01       	movw	r30, r28
    24d8:	e1 90       	ld	r14, Z+
    24da:	f1 90       	ld	r15, Z+
    24dc:	6f 01       	movw	r12, r30
    24de:	f7 01       	movw	r30, r14
    24e0:	04 81       	ldd	r16, Z+4	; 0x04
    24e2:	15 81       	ldd	r17, Z+5	; 0x05
    24e4:	fb 01       	movw	r30, r22
    24e6:	f1 82       	std	Z+1, r15	; 0x01
    24e8:	e0 82       	st	Z, r14
    24ea:	f8 01       	movw	r30, r16
    24ec:	82 81       	ldd	r24, Z+2	; 0x02
    24ee:	93 81       	ldd	r25, Z+3	; 0x03
    24f0:	04 97       	sbiw	r24, 0x04	; 4
    24f2:	d9 f4       	brne	.+54     	; 0x252a <osEE_scheduler_task_terminated+0x70>
    24f4:	b6 01       	movw	r22, r12
    24f6:	88 ee       	ldi	r24, 0xE8	; 232
    24f8:	91 e0       	ldi	r25, 0x01	; 1
    24fa:	0e 94 98 11 	call	0x2330	; 0x2330 <osEE_scheduler_core_pop_running>
    24fe:	5c 01       	movw	r10, r24
    2500:	c8 80       	ld	r12, Y
    2502:	d9 80       	ldd	r13, Y+1	; 0x01
    2504:	ec 14       	cp	r14, r12
    2506:	fd 04       	cpc	r15, r13
    2508:	21 f0       	breq	.+8      	; 0x2512 <osEE_scheduler_task_terminated+0x58>
    250a:	c7 01       	movw	r24, r14
    250c:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <osEE_task_end>
    2510:	04 c0       	rjmp	.+8      	; 0x251a <osEE_scheduler_task_terminated+0x60>
    2512:	f8 01       	movw	r30, r16
    2514:	90 81       	ld	r25, Z
    2516:	91 50       	subi	r25, 0x01	; 1
    2518:	90 83       	st	Z, r25
    251a:	8c 81       	ldd	r24, Y+4	; 0x04
    251c:	9d 81       	ldd	r25, Y+5	; 0x05
    251e:	f5 01       	movw	r30, r10
    2520:	91 83       	std	Z+1, r25	; 0x01
    2522:	80 83       	st	Z, r24
    2524:	bd 82       	std	Y+5, r11	; 0x05
    2526:	ac 82       	std	Y+4, r10	; 0x04
    2528:	28 c0       	rjmp	.+80     	; 0x257a <osEE_scheduler_task_terminated+0xc0>
    252a:	6e 81       	ldd	r22, Y+6	; 0x06
    252c:	7f 81       	ldd	r23, Y+7	; 0x07
    252e:	fb 01       	movw	r30, r22
    2530:	80 81       	ld	r24, Z
    2532:	91 81       	ldd	r25, Z+1	; 0x01
    2534:	9f 83       	std	Y+7, r25	; 0x07
    2536:	8e 83       	std	Y+6, r24	; 0x06
    2538:	f7 01       	movw	r30, r14
    253a:	83 85       	ldd	r24, Z+11	; 0x0b
    253c:	f8 01       	movw	r30, r16
    253e:	81 83       	std	Z+1, r24	; 0x01
    2540:	81 e0       	ldi	r24, 0x01	; 1
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	93 83       	std	Z+3, r25	; 0x03
    2546:	82 83       	std	Z+2, r24	; 0x02
    2548:	80 81       	ld	r24, Z
    254a:	81 30       	cpi	r24, 0x01	; 1
    254c:	11 f4       	brne	.+4      	; 0x2552 <osEE_scheduler_task_terminated+0x98>
    254e:	17 82       	std	Z+7, r1	; 0x07
    2550:	16 82       	std	Z+6, r1	; 0x06
    2552:	a7 01       	movw	r20, r14
    2554:	c6 01       	movw	r24, r12
    2556:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_rq_insert>
    255a:	b6 01       	movw	r22, r12
    255c:	88 ee       	ldi	r24, 0xE8	; 232
    255e:	91 e0       	ldi	r25, 0x01	; 1
    2560:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <osEE_scheduler_core_rq_preempt_stk>
    2564:	89 2b       	or	r24, r25
    2566:	39 f4       	brne	.+14     	; 0x2576 <osEE_scheduler_task_terminated+0xbc>
    2568:	ee 81       	ldd	r30, Y+6	; 0x06
    256a:	ff 81       	ldd	r31, Y+7	; 0x07
    256c:	c2 80       	ldd	r12, Z+2	; 0x02
    256e:	d3 80       	ldd	r13, Z+3	; 0x03
    2570:	d9 82       	std	Y+1, r13	; 0x01
    2572:	c8 82       	st	Y, r12
    2574:	02 c0       	rjmp	.+4      	; 0x257a <osEE_scheduler_task_terminated+0xc0>
    2576:	c8 80       	ld	r12, Y
    2578:	d9 80       	ldd	r13, Y+1	; 0x01
    257a:	c6 01       	movw	r24, r12
    257c:	df 91       	pop	r29
    257e:	cf 91       	pop	r28
    2580:	1f 91       	pop	r17
    2582:	0f 91       	pop	r16
    2584:	ff 90       	pop	r15
    2586:	ef 90       	pop	r14
    2588:	df 90       	pop	r13
    258a:	cf 90       	pop	r12
    258c:	bf 90       	pop	r11
    258e:	af 90       	pop	r10
    2590:	08 95       	ret

00002592 <osEE_scheduler_task_preemption_point>:
    2592:	cf 93       	push	r28
    2594:	df 93       	push	r29
    2596:	c0 91 e8 01 	lds	r28, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    259a:	d0 91 e9 01 	lds	r29, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    259e:	be 01       	movw	r22, r28
    25a0:	6e 5f       	subi	r22, 0xFE	; 254
    25a2:	7f 4f       	sbci	r23, 0xFF	; 255
    25a4:	88 ee       	ldi	r24, 0xE8	; 232
    25a6:	91 e0       	ldi	r25, 0x01	; 1
    25a8:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <osEE_scheduler_core_rq_preempt_stk>
    25ac:	00 97       	sbiw	r24, 0x00	; 0
    25ae:	39 f0       	breq	.+14     	; 0x25be <osEE_scheduler_task_preemption_point+0x2c>
    25b0:	68 81       	ld	r22, Y
    25b2:	79 81       	ldd	r23, Y+1	; 0x01
    25b4:	0e 94 1c 13 	call	0x2638	; 0x2638 <osEE_change_context_from_running>
    25b8:	81 e0       	ldi	r24, 0x01	; 1
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	02 c0       	rjmp	.+4      	; 0x25c2 <osEE_scheduler_task_preemption_point+0x30>
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	df 91       	pop	r29
    25c4:	cf 91       	pop	r28
    25c6:	08 95       	ret

000025c8 <osEE_scheduler_task_set_running>:
    25c8:	cf 93       	push	r28
    25ca:	df 93       	push	r29
    25cc:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    25d0:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    25d4:	80 81       	ld	r24, Z
    25d6:	91 81       	ldd	r25, Z+1	; 0x01
    25d8:	26 81       	ldd	r18, Z+6	; 0x06
    25da:	37 81       	ldd	r19, Z+7	; 0x07
    25dc:	ec 01       	movw	r28, r24
    25de:	ac 81       	ldd	r26, Y+4	; 0x04
    25e0:	bd 81       	ldd	r27, Y+5	; 0x05
    25e2:	12 96       	adiw	r26, 0x02	; 2
    25e4:	cd 91       	ld	r28, X+
    25e6:	dc 91       	ld	r29, X
    25e8:	13 97       	sbiw	r26, 0x03	; 3
    25ea:	24 97       	sbiw	r28, 0x04	; 4
    25ec:	31 f4       	brne	.+12     	; 0x25fa <osEE_scheduler_task_set_running+0x32>
    25ee:	c2 e0       	ldi	r28, 0x02	; 2
    25f0:	d0 e0       	ldi	r29, 0x00	; 0
    25f2:	13 96       	adiw	r26, 0x03	; 3
    25f4:	dc 93       	st	X, r29
    25f6:	ce 93       	st	-X, r28
    25f8:	12 97       	sbiw	r26, 0x02	; 2
    25fa:	71 83       	std	Z+1, r23	; 0x01
    25fc:	60 83       	st	Z, r22
    25fe:	41 15       	cp	r20, r1
    2600:	51 05       	cpc	r21, r1
    2602:	69 f4       	brne	.+26     	; 0x261e <osEE_scheduler_task_set_running+0x56>
    2604:	a4 81       	ldd	r26, Z+4	; 0x04
    2606:	b5 81       	ldd	r27, Z+5	; 0x05
    2608:	4d 91       	ld	r20, X+
    260a:	5c 91       	ld	r21, X
    260c:	11 97       	sbiw	r26, 0x01	; 1
    260e:	55 83       	std	Z+5, r21	; 0x05
    2610:	44 83       	std	Z+4, r20	; 0x04
    2612:	11 96       	adiw	r26, 0x01	; 1
    2614:	1c 92       	st	X, r1
    2616:	1e 92       	st	-X, r1
    2618:	b7 83       	std	Z+7, r27	; 0x07
    261a:	a6 83       	std	Z+6, r26	; 0x06
    261c:	02 c0       	rjmp	.+4      	; 0x2622 <osEE_scheduler_task_set_running+0x5a>
    261e:	57 83       	std	Z+7, r21	; 0x07
    2620:	46 83       	std	Z+6, r20	; 0x06
    2622:	06 80       	ldd	r0, Z+6	; 0x06
    2624:	f7 81       	ldd	r31, Z+7	; 0x07
    2626:	e0 2d       	mov	r30, r0
    2628:	73 83       	std	Z+3, r23	; 0x03
    262a:	62 83       	std	Z+2, r22	; 0x02
    262c:	31 83       	std	Z+1, r19	; 0x01
    262e:	20 83       	st	Z, r18
    2630:	df 91       	pop	r29
    2632:	cf 91       	pop	r28
    2634:	0c 94 1c 13 	jmp	0x2638	; 0x2638 <osEE_change_context_from_running>

00002638 <osEE_change_context_from_running>:
    2638:	fb 01       	movw	r30, r22
    263a:	a4 81       	ldd	r26, Z+4	; 0x04
    263c:	b5 81       	ldd	r27, Z+5	; 0x05
    263e:	12 96       	adiw	r26, 0x02	; 2
    2640:	2d 91       	ld	r18, X+
    2642:	3c 91       	ld	r19, X
    2644:	13 97       	sbiw	r26, 0x03	; 3
    2646:	dc 01       	movw	r26, r24
    2648:	12 96       	adiw	r26, 0x02	; 2
    264a:	4d 91       	ld	r20, X+
    264c:	5c 91       	ld	r21, X
    264e:	13 97       	sbiw	r26, 0x03	; 3
    2650:	62 81       	ldd	r22, Z+2	; 0x02
    2652:	73 81       	ldd	r23, Z+3	; 0x03
    2654:	cf 01       	movw	r24, r30
    2656:	22 30       	cpi	r18, 0x02	; 2
    2658:	31 05       	cpc	r19, r1
    265a:	11 f4       	brne	.+4      	; 0x2660 <osEE_change_context_from_running+0x28>
    265c:	0c 94 88 00 	jmp	0x110	; 0x110 <osEE_hal_save_ctx_and_restore_ctx>
    2660:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>

00002664 <osEE_change_context_from_task_end>:
    2664:	cb 01       	movw	r24, r22
    2666:	db 01       	movw	r26, r22
    2668:	14 96       	adiw	r26, 0x04	; 4
    266a:	ed 91       	ld	r30, X+
    266c:	fc 91       	ld	r31, X
    266e:	15 97       	sbiw	r26, 0x05	; 5
    2670:	22 81       	ldd	r18, Z+2	; 0x02
    2672:	33 81       	ldd	r19, Z+3	; 0x03
    2674:	12 96       	adiw	r26, 0x02	; 2
    2676:	6d 91       	ld	r22, X+
    2678:	7c 91       	ld	r23, X
    267a:	13 97       	sbiw	r26, 0x03	; 3
    267c:	22 30       	cpi	r18, 0x02	; 2
    267e:	31 05       	cpc	r19, r1
    2680:	11 f4       	brne	.+4      	; 0x2686 <osEE_change_context_from_task_end+0x22>
    2682:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    2686:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

0000268a <osEE_idle_task_terminate>:
    268a:	dc 01       	movw	r26, r24
    268c:	12 96       	adiw	r26, 0x02	; 2
    268e:	6d 91       	ld	r22, X+
    2690:	7c 91       	ld	r23, X
    2692:	13 97       	sbiw	r26, 0x03	; 3
    2694:	ed 91       	ld	r30, X+
    2696:	fc 91       	ld	r31, X
    2698:	40 81       	ld	r20, Z
    269a:	51 81       	ldd	r21, Z+1	; 0x01
    269c:	db 01       	movw	r26, r22
    269e:	ed 91       	ld	r30, X+
    26a0:	fc 91       	ld	r31, X
    26a2:	22 89       	ldd	r18, Z+18	; 0x12
    26a4:	33 89       	ldd	r19, Z+19	; 0x13
    26a6:	21 15       	cp	r18, r1
    26a8:	31 05       	cpc	r19, r1
    26aa:	29 f4       	brne	.+10     	; 0x26b6 <osEE_idle_task_terminate+0x2c>
    26ac:	db 01       	movw	r26, r22
    26ae:	ed 93       	st	X+, r30
    26b0:	fc 93       	st	X, r31
    26b2:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    26b6:	24 17       	cp	r18, r20
    26b8:	35 07       	cpc	r19, r21
    26ba:	c1 f3       	breq	.-16     	; 0x26ac <osEE_idle_task_terminate+0x22>
    26bc:	f9 01       	movw	r30, r18
    26be:	f1 cf       	rjmp	.-30     	; 0x26a2 <osEE_idle_task_terminate+0x18>

000026c0 <osEE_scheduler_task_end>:
    26c0:	cf 93       	push	r28
    26c2:	df 93       	push	r29
    26c4:	00 d0       	rcall	.+0      	; 0x26c6 <osEE_scheduler_task_end+0x6>
    26c6:	cd b7       	in	r28, 0x3d	; 61
    26c8:	de b7       	in	r29, 0x3e	; 62
    26ca:	be 01       	movw	r22, r28
    26cc:	6f 5f       	subi	r22, 0xFF	; 255
    26ce:	7f 4f       	sbci	r23, 0xFF	; 255
    26d0:	82 ee       	ldi	r24, 0xE2	; 226
    26d2:	91 e0       	ldi	r25, 0x01	; 1
    26d4:	0e 94 5d 12 	call	0x24ba	; 0x24ba <osEE_scheduler_task_terminated>
    26d8:	bc 01       	movw	r22, r24
    26da:	89 81       	ldd	r24, Y+1	; 0x01
    26dc:	9a 81       	ldd	r25, Y+2	; 0x02
    26de:	0e 94 32 13 	call	0x2664	; 0x2664 <osEE_change_context_from_task_end>
    26e2:	0f 90       	pop	r0
    26e4:	0f 90       	pop	r0
    26e6:	df 91       	pop	r29
    26e8:	cf 91       	pop	r28
    26ea:	08 95       	ret

000026ec <__vector_default>:
    26ec:	f8 94       	cli
    26ee:	ff cf       	rjmp	.-2      	; 0x26ee <__vector_default+0x2>

000026f0 <osEE_atmega_intvect>:
    26f0:	ec ee       	ldi	r30, 0xEC	; 236
    26f2:	08 95       	ret

000026f4 <__vector_11>:
    26f4:	8f 93       	push	r24
    26f6:	9f 93       	push	r25
    26f8:	80 e0       	ldi	r24, 0x00	; 0
    26fa:	0e 94 82 13 	call	0x2704	; 0x2704 <osEE_avr8_isr2_stub>
    26fe:	9f 91       	pop	r25
    2700:	8f 91       	pop	r24
    2702:	18 95       	reti

00002704 <osEE_avr8_isr2_stub>:
    2704:	1f 92       	push	r1
    2706:	0f 92       	push	r0
    2708:	0f b6       	in	r0, 0x3f	; 63
    270a:	0f 92       	push	r0
    270c:	11 24       	eor	r1, r1
    270e:	2f 93       	push	r18
    2710:	3f 93       	push	r19
    2712:	4f 93       	push	r20
    2714:	5f 93       	push	r21
    2716:	6f 93       	push	r22
    2718:	7f 93       	push	r23
    271a:	af 93       	push	r26
    271c:	bf 93       	push	r27
    271e:	ef 93       	push	r30
    2720:	ff 93       	push	r31
    2722:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <osEE_activate_isr2>
    2726:	ff 91       	pop	r31
    2728:	ef 91       	pop	r30
    272a:	bf 91       	pop	r27
    272c:	af 91       	pop	r26
    272e:	7f 91       	pop	r23
    2730:	6f 91       	pop	r22
    2732:	5f 91       	pop	r21
    2734:	4f 91       	pop	r20
    2736:	3f 91       	pop	r19
    2738:	2f 91       	pop	r18
    273a:	0f 90       	pop	r0
    273c:	0f be       	out	0x3f, r0	; 63
    273e:	0f 90       	pop	r0
    2740:	1f 90       	pop	r1
    2742:	08 95       	ret

00002744 <__subsf3>:
    2744:	50 58       	subi	r21, 0x80	; 128

00002746 <__addsf3>:
    2746:	bb 27       	eor	r27, r27
    2748:	aa 27       	eor	r26, r26
    274a:	0e 94 ba 13 	call	0x2774	; 0x2774 <__addsf3x>
    274e:	0c 94 f7 14 	jmp	0x29ee	; 0x29ee <__fp_round>
    2752:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <__fp_pscA>
    2756:	38 f0       	brcs	.+14     	; 0x2766 <__addsf3+0x20>
    2758:	0e 94 f0 14 	call	0x29e0	; 0x29e0 <__fp_pscB>
    275c:	20 f0       	brcs	.+8      	; 0x2766 <__addsf3+0x20>
    275e:	39 f4       	brne	.+14     	; 0x276e <__addsf3+0x28>
    2760:	9f 3f       	cpi	r25, 0xFF	; 255
    2762:	19 f4       	brne	.+6      	; 0x276a <__addsf3+0x24>
    2764:	26 f4       	brtc	.+8      	; 0x276e <__addsf3+0x28>
    2766:	0c 94 e6 14 	jmp	0x29cc	; 0x29cc <__fp_nan>
    276a:	0e f4       	brtc	.+2      	; 0x276e <__addsf3+0x28>
    276c:	e0 95       	com	r30
    276e:	e7 fb       	bst	r30, 7
    2770:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__fp_inf>

00002774 <__addsf3x>:
    2774:	e9 2f       	mov	r30, r25
    2776:	0e 94 08 15 	call	0x2a10	; 0x2a10 <__fp_split3>
    277a:	58 f3       	brcs	.-42     	; 0x2752 <__addsf3+0xc>
    277c:	ba 17       	cp	r27, r26
    277e:	62 07       	cpc	r22, r18
    2780:	73 07       	cpc	r23, r19
    2782:	84 07       	cpc	r24, r20
    2784:	95 07       	cpc	r25, r21
    2786:	20 f0       	brcs	.+8      	; 0x2790 <__addsf3x+0x1c>
    2788:	79 f4       	brne	.+30     	; 0x27a8 <__addsf3x+0x34>
    278a:	a6 f5       	brtc	.+104    	; 0x27f4 <__addsf3x+0x80>
    278c:	0c 94 2a 15 	jmp	0x2a54	; 0x2a54 <__fp_zero>
    2790:	0e f4       	brtc	.+2      	; 0x2794 <__addsf3x+0x20>
    2792:	e0 95       	com	r30
    2794:	0b 2e       	mov	r0, r27
    2796:	ba 2f       	mov	r27, r26
    2798:	a0 2d       	mov	r26, r0
    279a:	0b 01       	movw	r0, r22
    279c:	b9 01       	movw	r22, r18
    279e:	90 01       	movw	r18, r0
    27a0:	0c 01       	movw	r0, r24
    27a2:	ca 01       	movw	r24, r20
    27a4:	a0 01       	movw	r20, r0
    27a6:	11 24       	eor	r1, r1
    27a8:	ff 27       	eor	r31, r31
    27aa:	59 1b       	sub	r21, r25
    27ac:	99 f0       	breq	.+38     	; 0x27d4 <__addsf3x+0x60>
    27ae:	59 3f       	cpi	r21, 0xF9	; 249
    27b0:	50 f4       	brcc	.+20     	; 0x27c6 <__addsf3x+0x52>
    27b2:	50 3e       	cpi	r21, 0xE0	; 224
    27b4:	68 f1       	brcs	.+90     	; 0x2810 <__addsf3x+0x9c>
    27b6:	1a 16       	cp	r1, r26
    27b8:	f0 40       	sbci	r31, 0x00	; 0
    27ba:	a2 2f       	mov	r26, r18
    27bc:	23 2f       	mov	r18, r19
    27be:	34 2f       	mov	r19, r20
    27c0:	44 27       	eor	r20, r20
    27c2:	58 5f       	subi	r21, 0xF8	; 248
    27c4:	f3 cf       	rjmp	.-26     	; 0x27ac <__addsf3x+0x38>
    27c6:	46 95       	lsr	r20
    27c8:	37 95       	ror	r19
    27ca:	27 95       	ror	r18
    27cc:	a7 95       	ror	r26
    27ce:	f0 40       	sbci	r31, 0x00	; 0
    27d0:	53 95       	inc	r21
    27d2:	c9 f7       	brne	.-14     	; 0x27c6 <__addsf3x+0x52>
    27d4:	7e f4       	brtc	.+30     	; 0x27f4 <__addsf3x+0x80>
    27d6:	1f 16       	cp	r1, r31
    27d8:	ba 0b       	sbc	r27, r26
    27da:	62 0b       	sbc	r22, r18
    27dc:	73 0b       	sbc	r23, r19
    27de:	84 0b       	sbc	r24, r20
    27e0:	ba f0       	brmi	.+46     	; 0x2810 <__addsf3x+0x9c>
    27e2:	91 50       	subi	r25, 0x01	; 1
    27e4:	a1 f0       	breq	.+40     	; 0x280e <__addsf3x+0x9a>
    27e6:	ff 0f       	add	r31, r31
    27e8:	bb 1f       	adc	r27, r27
    27ea:	66 1f       	adc	r22, r22
    27ec:	77 1f       	adc	r23, r23
    27ee:	88 1f       	adc	r24, r24
    27f0:	c2 f7       	brpl	.-16     	; 0x27e2 <__addsf3x+0x6e>
    27f2:	0e c0       	rjmp	.+28     	; 0x2810 <__addsf3x+0x9c>
    27f4:	ba 0f       	add	r27, r26
    27f6:	62 1f       	adc	r22, r18
    27f8:	73 1f       	adc	r23, r19
    27fa:	84 1f       	adc	r24, r20
    27fc:	48 f4       	brcc	.+18     	; 0x2810 <__addsf3x+0x9c>
    27fe:	87 95       	ror	r24
    2800:	77 95       	ror	r23
    2802:	67 95       	ror	r22
    2804:	b7 95       	ror	r27
    2806:	f7 95       	ror	r31
    2808:	9e 3f       	cpi	r25, 0xFE	; 254
    280a:	08 f0       	brcs	.+2      	; 0x280e <__addsf3x+0x9a>
    280c:	b0 cf       	rjmp	.-160    	; 0x276e <__addsf3+0x28>
    280e:	93 95       	inc	r25
    2810:	88 0f       	add	r24, r24
    2812:	08 f0       	brcs	.+2      	; 0x2816 <__addsf3x+0xa2>
    2814:	99 27       	eor	r25, r25
    2816:	ee 0f       	add	r30, r30
    2818:	97 95       	ror	r25
    281a:	87 95       	ror	r24
    281c:	08 95       	ret

0000281e <__cmpsf2>:
    281e:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fp_cmp>
    2822:	08 f4       	brcc	.+2      	; 0x2826 <__cmpsf2+0x8>
    2824:	81 e0       	ldi	r24, 0x01	; 1
    2826:	08 95       	ret

00002828 <__divsf3>:
    2828:	0e 94 28 14 	call	0x2850	; 0x2850 <__divsf3x>
    282c:	0c 94 f7 14 	jmp	0x29ee	; 0x29ee <__fp_round>
    2830:	0e 94 f0 14 	call	0x29e0	; 0x29e0 <__fp_pscB>
    2834:	58 f0       	brcs	.+22     	; 0x284c <__divsf3+0x24>
    2836:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <__fp_pscA>
    283a:	40 f0       	brcs	.+16     	; 0x284c <__divsf3+0x24>
    283c:	29 f4       	brne	.+10     	; 0x2848 <__divsf3+0x20>
    283e:	5f 3f       	cpi	r21, 0xFF	; 255
    2840:	29 f0       	breq	.+10     	; 0x284c <__divsf3+0x24>
    2842:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__fp_inf>
    2846:	51 11       	cpse	r21, r1
    2848:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__fp_szero>
    284c:	0c 94 e6 14 	jmp	0x29cc	; 0x29cc <__fp_nan>

00002850 <__divsf3x>:
    2850:	0e 94 08 15 	call	0x2a10	; 0x2a10 <__fp_split3>
    2854:	68 f3       	brcs	.-38     	; 0x2830 <__divsf3+0x8>

00002856 <__divsf3_pse>:
    2856:	99 23       	and	r25, r25
    2858:	b1 f3       	breq	.-20     	; 0x2846 <__divsf3+0x1e>
    285a:	55 23       	and	r21, r21
    285c:	91 f3       	breq	.-28     	; 0x2842 <__divsf3+0x1a>
    285e:	95 1b       	sub	r25, r21
    2860:	55 0b       	sbc	r21, r21
    2862:	bb 27       	eor	r27, r27
    2864:	aa 27       	eor	r26, r26
    2866:	62 17       	cp	r22, r18
    2868:	73 07       	cpc	r23, r19
    286a:	84 07       	cpc	r24, r20
    286c:	38 f0       	brcs	.+14     	; 0x287c <__divsf3_pse+0x26>
    286e:	9f 5f       	subi	r25, 0xFF	; 255
    2870:	5f 4f       	sbci	r21, 0xFF	; 255
    2872:	22 0f       	add	r18, r18
    2874:	33 1f       	adc	r19, r19
    2876:	44 1f       	adc	r20, r20
    2878:	aa 1f       	adc	r26, r26
    287a:	a9 f3       	breq	.-22     	; 0x2866 <__divsf3_pse+0x10>
    287c:	35 d0       	rcall	.+106    	; 0x28e8 <__divsf3_pse+0x92>
    287e:	0e 2e       	mov	r0, r30
    2880:	3a f0       	brmi	.+14     	; 0x2890 <__divsf3_pse+0x3a>
    2882:	e0 e8       	ldi	r30, 0x80	; 128
    2884:	32 d0       	rcall	.+100    	; 0x28ea <__divsf3_pse+0x94>
    2886:	91 50       	subi	r25, 0x01	; 1
    2888:	50 40       	sbci	r21, 0x00	; 0
    288a:	e6 95       	lsr	r30
    288c:	00 1c       	adc	r0, r0
    288e:	ca f7       	brpl	.-14     	; 0x2882 <__divsf3_pse+0x2c>
    2890:	2b d0       	rcall	.+86     	; 0x28e8 <__divsf3_pse+0x92>
    2892:	fe 2f       	mov	r31, r30
    2894:	29 d0       	rcall	.+82     	; 0x28e8 <__divsf3_pse+0x92>
    2896:	66 0f       	add	r22, r22
    2898:	77 1f       	adc	r23, r23
    289a:	88 1f       	adc	r24, r24
    289c:	bb 1f       	adc	r27, r27
    289e:	26 17       	cp	r18, r22
    28a0:	37 07       	cpc	r19, r23
    28a2:	48 07       	cpc	r20, r24
    28a4:	ab 07       	cpc	r26, r27
    28a6:	b0 e8       	ldi	r27, 0x80	; 128
    28a8:	09 f0       	breq	.+2      	; 0x28ac <__divsf3_pse+0x56>
    28aa:	bb 0b       	sbc	r27, r27
    28ac:	80 2d       	mov	r24, r0
    28ae:	bf 01       	movw	r22, r30
    28b0:	ff 27       	eor	r31, r31
    28b2:	93 58       	subi	r25, 0x83	; 131
    28b4:	5f 4f       	sbci	r21, 0xFF	; 255
    28b6:	3a f0       	brmi	.+14     	; 0x28c6 <__divsf3_pse+0x70>
    28b8:	9e 3f       	cpi	r25, 0xFE	; 254
    28ba:	51 05       	cpc	r21, r1
    28bc:	78 f0       	brcs	.+30     	; 0x28dc <__divsf3_pse+0x86>
    28be:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__fp_inf>
    28c2:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__fp_szero>
    28c6:	5f 3f       	cpi	r21, 0xFF	; 255
    28c8:	e4 f3       	brlt	.-8      	; 0x28c2 <__divsf3_pse+0x6c>
    28ca:	98 3e       	cpi	r25, 0xE8	; 232
    28cc:	d4 f3       	brlt	.-12     	; 0x28c2 <__divsf3_pse+0x6c>
    28ce:	86 95       	lsr	r24
    28d0:	77 95       	ror	r23
    28d2:	67 95       	ror	r22
    28d4:	b7 95       	ror	r27
    28d6:	f7 95       	ror	r31
    28d8:	9f 5f       	subi	r25, 0xFF	; 255
    28da:	c9 f7       	brne	.-14     	; 0x28ce <__divsf3_pse+0x78>
    28dc:	88 0f       	add	r24, r24
    28de:	91 1d       	adc	r25, r1
    28e0:	96 95       	lsr	r25
    28e2:	87 95       	ror	r24
    28e4:	97 f9       	bld	r25, 7
    28e6:	08 95       	ret
    28e8:	e1 e0       	ldi	r30, 0x01	; 1
    28ea:	66 0f       	add	r22, r22
    28ec:	77 1f       	adc	r23, r23
    28ee:	88 1f       	adc	r24, r24
    28f0:	bb 1f       	adc	r27, r27
    28f2:	62 17       	cp	r22, r18
    28f4:	73 07       	cpc	r23, r19
    28f6:	84 07       	cpc	r24, r20
    28f8:	ba 07       	cpc	r27, r26
    28fa:	20 f0       	brcs	.+8      	; 0x2904 <__divsf3_pse+0xae>
    28fc:	62 1b       	sub	r22, r18
    28fe:	73 0b       	sbc	r23, r19
    2900:	84 0b       	sbc	r24, r20
    2902:	ba 0b       	sbc	r27, r26
    2904:	ee 1f       	adc	r30, r30
    2906:	88 f7       	brcc	.-30     	; 0x28ea <__divsf3_pse+0x94>
    2908:	e0 95       	com	r30
    290a:	08 95       	ret

0000290c <__fixsfsi>:
    290c:	0e 94 8d 14 	call	0x291a	; 0x291a <__fixunssfsi>
    2910:	68 94       	set
    2912:	b1 11       	cpse	r27, r1
    2914:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__fp_szero>
    2918:	08 95       	ret

0000291a <__fixunssfsi>:
    291a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <__fp_splitA>
    291e:	88 f0       	brcs	.+34     	; 0x2942 <__fixunssfsi+0x28>
    2920:	9f 57       	subi	r25, 0x7F	; 127
    2922:	98 f0       	brcs	.+38     	; 0x294a <__fixunssfsi+0x30>
    2924:	b9 2f       	mov	r27, r25
    2926:	99 27       	eor	r25, r25
    2928:	b7 51       	subi	r27, 0x17	; 23
    292a:	b0 f0       	brcs	.+44     	; 0x2958 <__fixunssfsi+0x3e>
    292c:	e1 f0       	breq	.+56     	; 0x2966 <__fixunssfsi+0x4c>
    292e:	66 0f       	add	r22, r22
    2930:	77 1f       	adc	r23, r23
    2932:	88 1f       	adc	r24, r24
    2934:	99 1f       	adc	r25, r25
    2936:	1a f0       	brmi	.+6      	; 0x293e <__fixunssfsi+0x24>
    2938:	ba 95       	dec	r27
    293a:	c9 f7       	brne	.-14     	; 0x292e <__fixunssfsi+0x14>
    293c:	14 c0       	rjmp	.+40     	; 0x2966 <__fixunssfsi+0x4c>
    293e:	b1 30       	cpi	r27, 0x01	; 1
    2940:	91 f0       	breq	.+36     	; 0x2966 <__fixunssfsi+0x4c>
    2942:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <__fp_zero>
    2946:	b1 e0       	ldi	r27, 0x01	; 1
    2948:	08 95       	ret
    294a:	0c 94 2a 15 	jmp	0x2a54	; 0x2a54 <__fp_zero>
    294e:	67 2f       	mov	r22, r23
    2950:	78 2f       	mov	r23, r24
    2952:	88 27       	eor	r24, r24
    2954:	b8 5f       	subi	r27, 0xF8	; 248
    2956:	39 f0       	breq	.+14     	; 0x2966 <__fixunssfsi+0x4c>
    2958:	b9 3f       	cpi	r27, 0xF9	; 249
    295a:	cc f3       	brlt	.-14     	; 0x294e <__fixunssfsi+0x34>
    295c:	86 95       	lsr	r24
    295e:	77 95       	ror	r23
    2960:	67 95       	ror	r22
    2962:	b3 95       	inc	r27
    2964:	d9 f7       	brne	.-10     	; 0x295c <__fixunssfsi+0x42>
    2966:	3e f4       	brtc	.+14     	; 0x2976 <__fixunssfsi+0x5c>
    2968:	90 95       	com	r25
    296a:	80 95       	com	r24
    296c:	70 95       	com	r23
    296e:	61 95       	neg	r22
    2970:	7f 4f       	sbci	r23, 0xFF	; 255
    2972:	8f 4f       	sbci	r24, 0xFF	; 255
    2974:	9f 4f       	sbci	r25, 0xFF	; 255
    2976:	08 95       	ret

00002978 <__fp_cmp>:
    2978:	99 0f       	add	r25, r25
    297a:	00 08       	sbc	r0, r0
    297c:	55 0f       	add	r21, r21
    297e:	aa 0b       	sbc	r26, r26
    2980:	e0 e8       	ldi	r30, 0x80	; 128
    2982:	fe ef       	ldi	r31, 0xFE	; 254
    2984:	16 16       	cp	r1, r22
    2986:	17 06       	cpc	r1, r23
    2988:	e8 07       	cpc	r30, r24
    298a:	f9 07       	cpc	r31, r25
    298c:	c0 f0       	brcs	.+48     	; 0x29be <__fp_cmp+0x46>
    298e:	12 16       	cp	r1, r18
    2990:	13 06       	cpc	r1, r19
    2992:	e4 07       	cpc	r30, r20
    2994:	f5 07       	cpc	r31, r21
    2996:	98 f0       	brcs	.+38     	; 0x29be <__fp_cmp+0x46>
    2998:	62 1b       	sub	r22, r18
    299a:	73 0b       	sbc	r23, r19
    299c:	84 0b       	sbc	r24, r20
    299e:	95 0b       	sbc	r25, r21
    29a0:	39 f4       	brne	.+14     	; 0x29b0 <__fp_cmp+0x38>
    29a2:	0a 26       	eor	r0, r26
    29a4:	61 f0       	breq	.+24     	; 0x29be <__fp_cmp+0x46>
    29a6:	23 2b       	or	r18, r19
    29a8:	24 2b       	or	r18, r20
    29aa:	25 2b       	or	r18, r21
    29ac:	21 f4       	brne	.+8      	; 0x29b6 <__fp_cmp+0x3e>
    29ae:	08 95       	ret
    29b0:	0a 26       	eor	r0, r26
    29b2:	09 f4       	brne	.+2      	; 0x29b6 <__fp_cmp+0x3e>
    29b4:	a1 40       	sbci	r26, 0x01	; 1
    29b6:	a6 95       	lsr	r26
    29b8:	8f ef       	ldi	r24, 0xFF	; 255
    29ba:	81 1d       	adc	r24, r1
    29bc:	81 1d       	adc	r24, r1
    29be:	08 95       	ret

000029c0 <__fp_inf>:
    29c0:	97 f9       	bld	r25, 7
    29c2:	9f 67       	ori	r25, 0x7F	; 127
    29c4:	80 e8       	ldi	r24, 0x80	; 128
    29c6:	70 e0       	ldi	r23, 0x00	; 0
    29c8:	60 e0       	ldi	r22, 0x00	; 0
    29ca:	08 95       	ret

000029cc <__fp_nan>:
    29cc:	9f ef       	ldi	r25, 0xFF	; 255
    29ce:	80 ec       	ldi	r24, 0xC0	; 192
    29d0:	08 95       	ret

000029d2 <__fp_pscA>:
    29d2:	00 24       	eor	r0, r0
    29d4:	0a 94       	dec	r0
    29d6:	16 16       	cp	r1, r22
    29d8:	17 06       	cpc	r1, r23
    29da:	18 06       	cpc	r1, r24
    29dc:	09 06       	cpc	r0, r25
    29de:	08 95       	ret

000029e0 <__fp_pscB>:
    29e0:	00 24       	eor	r0, r0
    29e2:	0a 94       	dec	r0
    29e4:	12 16       	cp	r1, r18
    29e6:	13 06       	cpc	r1, r19
    29e8:	14 06       	cpc	r1, r20
    29ea:	05 06       	cpc	r0, r21
    29ec:	08 95       	ret

000029ee <__fp_round>:
    29ee:	09 2e       	mov	r0, r25
    29f0:	03 94       	inc	r0
    29f2:	00 0c       	add	r0, r0
    29f4:	11 f4       	brne	.+4      	; 0x29fa <__fp_round+0xc>
    29f6:	88 23       	and	r24, r24
    29f8:	52 f0       	brmi	.+20     	; 0x2a0e <__fp_round+0x20>
    29fa:	bb 0f       	add	r27, r27
    29fc:	40 f4       	brcc	.+16     	; 0x2a0e <__fp_round+0x20>
    29fe:	bf 2b       	or	r27, r31
    2a00:	11 f4       	brne	.+4      	; 0x2a06 <__fp_round+0x18>
    2a02:	60 ff       	sbrs	r22, 0
    2a04:	04 c0       	rjmp	.+8      	; 0x2a0e <__fp_round+0x20>
    2a06:	6f 5f       	subi	r22, 0xFF	; 255
    2a08:	7f 4f       	sbci	r23, 0xFF	; 255
    2a0a:	8f 4f       	sbci	r24, 0xFF	; 255
    2a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a0e:	08 95       	ret

00002a10 <__fp_split3>:
    2a10:	57 fd       	sbrc	r21, 7
    2a12:	90 58       	subi	r25, 0x80	; 128
    2a14:	44 0f       	add	r20, r20
    2a16:	55 1f       	adc	r21, r21
    2a18:	59 f0       	breq	.+22     	; 0x2a30 <__fp_splitA+0x10>
    2a1a:	5f 3f       	cpi	r21, 0xFF	; 255
    2a1c:	71 f0       	breq	.+28     	; 0x2a3a <__fp_splitA+0x1a>
    2a1e:	47 95       	ror	r20

00002a20 <__fp_splitA>:
    2a20:	88 0f       	add	r24, r24
    2a22:	97 fb       	bst	r25, 7
    2a24:	99 1f       	adc	r25, r25
    2a26:	61 f0       	breq	.+24     	; 0x2a40 <__fp_splitA+0x20>
    2a28:	9f 3f       	cpi	r25, 0xFF	; 255
    2a2a:	79 f0       	breq	.+30     	; 0x2a4a <__fp_splitA+0x2a>
    2a2c:	87 95       	ror	r24
    2a2e:	08 95       	ret
    2a30:	12 16       	cp	r1, r18
    2a32:	13 06       	cpc	r1, r19
    2a34:	14 06       	cpc	r1, r20
    2a36:	55 1f       	adc	r21, r21
    2a38:	f2 cf       	rjmp	.-28     	; 0x2a1e <__fp_split3+0xe>
    2a3a:	46 95       	lsr	r20
    2a3c:	f1 df       	rcall	.-30     	; 0x2a20 <__fp_splitA>
    2a3e:	08 c0       	rjmp	.+16     	; 0x2a50 <__fp_splitA+0x30>
    2a40:	16 16       	cp	r1, r22
    2a42:	17 06       	cpc	r1, r23
    2a44:	18 06       	cpc	r1, r24
    2a46:	99 1f       	adc	r25, r25
    2a48:	f1 cf       	rjmp	.-30     	; 0x2a2c <__fp_splitA+0xc>
    2a4a:	86 95       	lsr	r24
    2a4c:	71 05       	cpc	r23, r1
    2a4e:	61 05       	cpc	r22, r1
    2a50:	08 94       	sec
    2a52:	08 95       	ret

00002a54 <__fp_zero>:
    2a54:	e8 94       	clt

00002a56 <__fp_szero>:
    2a56:	bb 27       	eor	r27, r27
    2a58:	66 27       	eor	r22, r22
    2a5a:	77 27       	eor	r23, r23
    2a5c:	cb 01       	movw	r24, r22
    2a5e:	97 f9       	bld	r25, 7
    2a60:	08 95       	ret

00002a62 <__gesf2>:
    2a62:	0e 94 bc 14 	call	0x2978	; 0x2978 <__fp_cmp>
    2a66:	08 f4       	brcc	.+2      	; 0x2a6a <__gesf2+0x8>
    2a68:	8f ef       	ldi	r24, 0xFF	; 255
    2a6a:	08 95       	ret

00002a6c <__mulsf3>:
    2a6c:	0e 94 49 15 	call	0x2a92	; 0x2a92 <__mulsf3x>
    2a70:	0c 94 f7 14 	jmp	0x29ee	; 0x29ee <__fp_round>
    2a74:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <__fp_pscA>
    2a78:	38 f0       	brcs	.+14     	; 0x2a88 <__mulsf3+0x1c>
    2a7a:	0e 94 f0 14 	call	0x29e0	; 0x29e0 <__fp_pscB>
    2a7e:	20 f0       	brcs	.+8      	; 0x2a88 <__mulsf3+0x1c>
    2a80:	95 23       	and	r25, r21
    2a82:	11 f0       	breq	.+4      	; 0x2a88 <__mulsf3+0x1c>
    2a84:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__fp_inf>
    2a88:	0c 94 e6 14 	jmp	0x29cc	; 0x29cc <__fp_nan>
    2a8c:	11 24       	eor	r1, r1
    2a8e:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__fp_szero>

00002a92 <__mulsf3x>:
    2a92:	0e 94 08 15 	call	0x2a10	; 0x2a10 <__fp_split3>
    2a96:	70 f3       	brcs	.-36     	; 0x2a74 <__mulsf3+0x8>

00002a98 <__mulsf3_pse>:
    2a98:	95 9f       	mul	r25, r21
    2a9a:	c1 f3       	breq	.-16     	; 0x2a8c <__mulsf3+0x20>
    2a9c:	95 0f       	add	r25, r21
    2a9e:	50 e0       	ldi	r21, 0x00	; 0
    2aa0:	55 1f       	adc	r21, r21
    2aa2:	62 9f       	mul	r22, r18
    2aa4:	f0 01       	movw	r30, r0
    2aa6:	72 9f       	mul	r23, r18
    2aa8:	bb 27       	eor	r27, r27
    2aaa:	f0 0d       	add	r31, r0
    2aac:	b1 1d       	adc	r27, r1
    2aae:	63 9f       	mul	r22, r19
    2ab0:	aa 27       	eor	r26, r26
    2ab2:	f0 0d       	add	r31, r0
    2ab4:	b1 1d       	adc	r27, r1
    2ab6:	aa 1f       	adc	r26, r26
    2ab8:	64 9f       	mul	r22, r20
    2aba:	66 27       	eor	r22, r22
    2abc:	b0 0d       	add	r27, r0
    2abe:	a1 1d       	adc	r26, r1
    2ac0:	66 1f       	adc	r22, r22
    2ac2:	82 9f       	mul	r24, r18
    2ac4:	22 27       	eor	r18, r18
    2ac6:	b0 0d       	add	r27, r0
    2ac8:	a1 1d       	adc	r26, r1
    2aca:	62 1f       	adc	r22, r18
    2acc:	73 9f       	mul	r23, r19
    2ace:	b0 0d       	add	r27, r0
    2ad0:	a1 1d       	adc	r26, r1
    2ad2:	62 1f       	adc	r22, r18
    2ad4:	83 9f       	mul	r24, r19
    2ad6:	a0 0d       	add	r26, r0
    2ad8:	61 1d       	adc	r22, r1
    2ada:	22 1f       	adc	r18, r18
    2adc:	74 9f       	mul	r23, r20
    2ade:	33 27       	eor	r19, r19
    2ae0:	a0 0d       	add	r26, r0
    2ae2:	61 1d       	adc	r22, r1
    2ae4:	23 1f       	adc	r18, r19
    2ae6:	84 9f       	mul	r24, r20
    2ae8:	60 0d       	add	r22, r0
    2aea:	21 1d       	adc	r18, r1
    2aec:	82 2f       	mov	r24, r18
    2aee:	76 2f       	mov	r23, r22
    2af0:	6a 2f       	mov	r22, r26
    2af2:	11 24       	eor	r1, r1
    2af4:	9f 57       	subi	r25, 0x7F	; 127
    2af6:	50 40       	sbci	r21, 0x00	; 0
    2af8:	9a f0       	brmi	.+38     	; 0x2b20 <__mulsf3_pse+0x88>
    2afa:	f1 f0       	breq	.+60     	; 0x2b38 <__mulsf3_pse+0xa0>
    2afc:	88 23       	and	r24, r24
    2afe:	4a f0       	brmi	.+18     	; 0x2b12 <__mulsf3_pse+0x7a>
    2b00:	ee 0f       	add	r30, r30
    2b02:	ff 1f       	adc	r31, r31
    2b04:	bb 1f       	adc	r27, r27
    2b06:	66 1f       	adc	r22, r22
    2b08:	77 1f       	adc	r23, r23
    2b0a:	88 1f       	adc	r24, r24
    2b0c:	91 50       	subi	r25, 0x01	; 1
    2b0e:	50 40       	sbci	r21, 0x00	; 0
    2b10:	a9 f7       	brne	.-22     	; 0x2afc <__mulsf3_pse+0x64>
    2b12:	9e 3f       	cpi	r25, 0xFE	; 254
    2b14:	51 05       	cpc	r21, r1
    2b16:	80 f0       	brcs	.+32     	; 0x2b38 <__mulsf3_pse+0xa0>
    2b18:	0c 94 e0 14 	jmp	0x29c0	; 0x29c0 <__fp_inf>
    2b1c:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__fp_szero>
    2b20:	5f 3f       	cpi	r21, 0xFF	; 255
    2b22:	e4 f3       	brlt	.-8      	; 0x2b1c <__mulsf3_pse+0x84>
    2b24:	98 3e       	cpi	r25, 0xE8	; 232
    2b26:	d4 f3       	brlt	.-12     	; 0x2b1c <__mulsf3_pse+0x84>
    2b28:	86 95       	lsr	r24
    2b2a:	77 95       	ror	r23
    2b2c:	67 95       	ror	r22
    2b2e:	b7 95       	ror	r27
    2b30:	f7 95       	ror	r31
    2b32:	e7 95       	ror	r30
    2b34:	9f 5f       	subi	r25, 0xFF	; 255
    2b36:	c1 f7       	brne	.-16     	; 0x2b28 <__mulsf3_pse+0x90>
    2b38:	fe 2b       	or	r31, r30
    2b3a:	88 0f       	add	r24, r24
    2b3c:	91 1d       	adc	r25, r1
    2b3e:	96 95       	lsr	r25
    2b40:	87 95       	ror	r24
    2b42:	97 f9       	bld	r25, 7
    2b44:	08 95       	ret

00002b46 <__divmodhi4>:
    2b46:	97 fb       	bst	r25, 7
    2b48:	07 2e       	mov	r0, r23
    2b4a:	16 f4       	brtc	.+4      	; 0x2b50 <__divmodhi4+0xa>
    2b4c:	00 94       	com	r0
    2b4e:	07 d0       	rcall	.+14     	; 0x2b5e <__divmodhi4_neg1>
    2b50:	77 fd       	sbrc	r23, 7
    2b52:	09 d0       	rcall	.+18     	; 0x2b66 <__divmodhi4_neg2>
    2b54:	0e 94 d9 15 	call	0x2bb2	; 0x2bb2 <__udivmodhi4>
    2b58:	07 fc       	sbrc	r0, 7
    2b5a:	05 d0       	rcall	.+10     	; 0x2b66 <__divmodhi4_neg2>
    2b5c:	3e f4       	brtc	.+14     	; 0x2b6c <__divmodhi4_exit>

00002b5e <__divmodhi4_neg1>:
    2b5e:	90 95       	com	r25
    2b60:	81 95       	neg	r24
    2b62:	9f 4f       	sbci	r25, 0xFF	; 255
    2b64:	08 95       	ret

00002b66 <__divmodhi4_neg2>:
    2b66:	70 95       	com	r23
    2b68:	61 95       	neg	r22
    2b6a:	7f 4f       	sbci	r23, 0xFF	; 255

00002b6c <__divmodhi4_exit>:
    2b6c:	08 95       	ret

00002b6e <__udivmodsi4>:
    2b6e:	a1 e2       	ldi	r26, 0x21	; 33
    2b70:	1a 2e       	mov	r1, r26
    2b72:	aa 1b       	sub	r26, r26
    2b74:	bb 1b       	sub	r27, r27
    2b76:	fd 01       	movw	r30, r26
    2b78:	0d c0       	rjmp	.+26     	; 0x2b94 <__udivmodsi4_ep>

00002b7a <__udivmodsi4_loop>:
    2b7a:	aa 1f       	adc	r26, r26
    2b7c:	bb 1f       	adc	r27, r27
    2b7e:	ee 1f       	adc	r30, r30
    2b80:	ff 1f       	adc	r31, r31
    2b82:	a2 17       	cp	r26, r18
    2b84:	b3 07       	cpc	r27, r19
    2b86:	e4 07       	cpc	r30, r20
    2b88:	f5 07       	cpc	r31, r21
    2b8a:	20 f0       	brcs	.+8      	; 0x2b94 <__udivmodsi4_ep>
    2b8c:	a2 1b       	sub	r26, r18
    2b8e:	b3 0b       	sbc	r27, r19
    2b90:	e4 0b       	sbc	r30, r20
    2b92:	f5 0b       	sbc	r31, r21

00002b94 <__udivmodsi4_ep>:
    2b94:	66 1f       	adc	r22, r22
    2b96:	77 1f       	adc	r23, r23
    2b98:	88 1f       	adc	r24, r24
    2b9a:	99 1f       	adc	r25, r25
    2b9c:	1a 94       	dec	r1
    2b9e:	69 f7       	brne	.-38     	; 0x2b7a <__udivmodsi4_loop>
    2ba0:	60 95       	com	r22
    2ba2:	70 95       	com	r23
    2ba4:	80 95       	com	r24
    2ba6:	90 95       	com	r25
    2ba8:	9b 01       	movw	r18, r22
    2baa:	ac 01       	movw	r20, r24
    2bac:	bd 01       	movw	r22, r26
    2bae:	cf 01       	movw	r24, r30
    2bb0:	08 95       	ret

00002bb2 <__udivmodhi4>:
    2bb2:	aa 1b       	sub	r26, r26
    2bb4:	bb 1b       	sub	r27, r27
    2bb6:	51 e1       	ldi	r21, 0x11	; 17
    2bb8:	07 c0       	rjmp	.+14     	; 0x2bc8 <__udivmodhi4_ep>

00002bba <__udivmodhi4_loop>:
    2bba:	aa 1f       	adc	r26, r26
    2bbc:	bb 1f       	adc	r27, r27
    2bbe:	a6 17       	cp	r26, r22
    2bc0:	b7 07       	cpc	r27, r23
    2bc2:	10 f0       	brcs	.+4      	; 0x2bc8 <__udivmodhi4_ep>
    2bc4:	a6 1b       	sub	r26, r22
    2bc6:	b7 0b       	sbc	r27, r23

00002bc8 <__udivmodhi4_ep>:
    2bc8:	88 1f       	adc	r24, r24
    2bca:	99 1f       	adc	r25, r25
    2bcc:	5a 95       	dec	r21
    2bce:	a9 f7       	brne	.-22     	; 0x2bba <__udivmodhi4_loop>
    2bd0:	80 95       	com	r24
    2bd2:	90 95       	com	r25
    2bd4:	bc 01       	movw	r22, r24
    2bd6:	cd 01       	movw	r24, r26
    2bd8:	08 95       	ret

00002bda <__tablejump2__>:
    2bda:	ee 0f       	add	r30, r30
    2bdc:	ff 1f       	adc	r31, r31
    2bde:	05 90       	lpm	r0, Z+
    2be0:	f4 91       	lpm	r31, Z
    2be2:	e0 2d       	mov	r30, r0
    2be4:	09 94       	ijmp

00002be6 <snprintf>:
    2be6:	ae e0       	ldi	r26, 0x0E	; 14
    2be8:	b0 e0       	ldi	r27, 0x00	; 0
    2bea:	e9 ef       	ldi	r30, 0xF9	; 249
    2bec:	f5 e1       	ldi	r31, 0x15	; 21
    2bee:	0c 94 af 18 	jmp	0x315e	; 0x315e <__prologue_saves__+0x1c>
    2bf2:	0d 89       	ldd	r16, Y+21	; 0x15
    2bf4:	1e 89       	ldd	r17, Y+22	; 0x16
    2bf6:	8f 89       	ldd	r24, Y+23	; 0x17
    2bf8:	98 8d       	ldd	r25, Y+24	; 0x18
    2bfa:	26 e0       	ldi	r18, 0x06	; 6
    2bfc:	2c 83       	std	Y+4, r18	; 0x04
    2bfe:	1a 83       	std	Y+2, r17	; 0x02
    2c00:	09 83       	std	Y+1, r16	; 0x01
    2c02:	97 ff       	sbrs	r25, 7
    2c04:	02 c0       	rjmp	.+4      	; 0x2c0a <snprintf+0x24>
    2c06:	80 e0       	ldi	r24, 0x00	; 0
    2c08:	90 e8       	ldi	r25, 0x80	; 128
    2c0a:	01 97       	sbiw	r24, 0x01	; 1
    2c0c:	9e 83       	std	Y+6, r25	; 0x06
    2c0e:	8d 83       	std	Y+5, r24	; 0x05
    2c10:	ae 01       	movw	r20, r28
    2c12:	45 5e       	subi	r20, 0xE5	; 229
    2c14:	5f 4f       	sbci	r21, 0xFF	; 255
    2c16:	69 8d       	ldd	r22, Y+25	; 0x19
    2c18:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2c1a:	ce 01       	movw	r24, r28
    2c1c:	01 96       	adiw	r24, 0x01	; 1
    2c1e:	0e 94 23 16 	call	0x2c46	; 0x2c46 <vfprintf>
    2c22:	4d 81       	ldd	r20, Y+5	; 0x05
    2c24:	5e 81       	ldd	r21, Y+6	; 0x06
    2c26:	57 fd       	sbrc	r21, 7
    2c28:	0a c0       	rjmp	.+20     	; 0x2c3e <snprintf+0x58>
    2c2a:	2f 81       	ldd	r18, Y+7	; 0x07
    2c2c:	38 85       	ldd	r19, Y+8	; 0x08
    2c2e:	42 17       	cp	r20, r18
    2c30:	53 07       	cpc	r21, r19
    2c32:	0c f4       	brge	.+2      	; 0x2c36 <snprintf+0x50>
    2c34:	9a 01       	movw	r18, r20
    2c36:	f8 01       	movw	r30, r16
    2c38:	e2 0f       	add	r30, r18
    2c3a:	f3 1f       	adc	r31, r19
    2c3c:	10 82       	st	Z, r1
    2c3e:	2e 96       	adiw	r28, 0x0e	; 14
    2c40:	e4 e0       	ldi	r30, 0x04	; 4
    2c42:	0c 94 cb 18 	jmp	0x3196	; 0x3196 <__epilogue_restores__+0x1c>

00002c46 <vfprintf>:
    2c46:	ac e0       	ldi	r26, 0x0C	; 12
    2c48:	b0 e0       	ldi	r27, 0x00	; 0
    2c4a:	e9 e2       	ldi	r30, 0x29	; 41
    2c4c:	f6 e1       	ldi	r31, 0x16	; 22
    2c4e:	0c 94 a1 18 	jmp	0x3142	; 0x3142 <__prologue_saves__>
    2c52:	7c 01       	movw	r14, r24
    2c54:	6b 01       	movw	r12, r22
    2c56:	8a 01       	movw	r16, r20
    2c58:	fc 01       	movw	r30, r24
    2c5a:	17 82       	std	Z+7, r1	; 0x07
    2c5c:	16 82       	std	Z+6, r1	; 0x06
    2c5e:	83 81       	ldd	r24, Z+3	; 0x03
    2c60:	81 ff       	sbrs	r24, 1
    2c62:	bd c1       	rjmp	.+890    	; 0x2fde <vfprintf+0x398>
    2c64:	ce 01       	movw	r24, r28
    2c66:	01 96       	adiw	r24, 0x01	; 1
    2c68:	4c 01       	movw	r8, r24
    2c6a:	f7 01       	movw	r30, r14
    2c6c:	93 81       	ldd	r25, Z+3	; 0x03
    2c6e:	f6 01       	movw	r30, r12
    2c70:	93 fd       	sbrc	r25, 3
    2c72:	85 91       	lpm	r24, Z+
    2c74:	93 ff       	sbrs	r25, 3
    2c76:	81 91       	ld	r24, Z+
    2c78:	6f 01       	movw	r12, r30
    2c7a:	88 23       	and	r24, r24
    2c7c:	09 f4       	brne	.+2      	; 0x2c80 <vfprintf+0x3a>
    2c7e:	ab c1       	rjmp	.+854    	; 0x2fd6 <vfprintf+0x390>
    2c80:	85 32       	cpi	r24, 0x25	; 37
    2c82:	39 f4       	brne	.+14     	; 0x2c92 <vfprintf+0x4c>
    2c84:	93 fd       	sbrc	r25, 3
    2c86:	85 91       	lpm	r24, Z+
    2c88:	93 ff       	sbrs	r25, 3
    2c8a:	81 91       	ld	r24, Z+
    2c8c:	6f 01       	movw	r12, r30
    2c8e:	85 32       	cpi	r24, 0x25	; 37
    2c90:	29 f4       	brne	.+10     	; 0x2c9c <vfprintf+0x56>
    2c92:	b7 01       	movw	r22, r14
    2c94:	90 e0       	ldi	r25, 0x00	; 0
    2c96:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c9a:	e7 cf       	rjmp	.-50     	; 0x2c6a <vfprintf+0x24>
    2c9c:	51 2c       	mov	r5, r1
    2c9e:	31 2c       	mov	r3, r1
    2ca0:	20 e0       	ldi	r18, 0x00	; 0
    2ca2:	20 32       	cpi	r18, 0x20	; 32
    2ca4:	a0 f4       	brcc	.+40     	; 0x2cce <vfprintf+0x88>
    2ca6:	8b 32       	cpi	r24, 0x2B	; 43
    2ca8:	69 f0       	breq	.+26     	; 0x2cc4 <vfprintf+0x7e>
    2caa:	30 f4       	brcc	.+12     	; 0x2cb8 <vfprintf+0x72>
    2cac:	80 32       	cpi	r24, 0x20	; 32
    2cae:	59 f0       	breq	.+22     	; 0x2cc6 <vfprintf+0x80>
    2cb0:	83 32       	cpi	r24, 0x23	; 35
    2cb2:	69 f4       	brne	.+26     	; 0x2cce <vfprintf+0x88>
    2cb4:	20 61       	ori	r18, 0x10	; 16
    2cb6:	2c c0       	rjmp	.+88     	; 0x2d10 <vfprintf+0xca>
    2cb8:	8d 32       	cpi	r24, 0x2D	; 45
    2cba:	39 f0       	breq	.+14     	; 0x2cca <vfprintf+0x84>
    2cbc:	80 33       	cpi	r24, 0x30	; 48
    2cbe:	39 f4       	brne	.+14     	; 0x2cce <vfprintf+0x88>
    2cc0:	21 60       	ori	r18, 0x01	; 1
    2cc2:	26 c0       	rjmp	.+76     	; 0x2d10 <vfprintf+0xca>
    2cc4:	22 60       	ori	r18, 0x02	; 2
    2cc6:	24 60       	ori	r18, 0x04	; 4
    2cc8:	23 c0       	rjmp	.+70     	; 0x2d10 <vfprintf+0xca>
    2cca:	28 60       	ori	r18, 0x08	; 8
    2ccc:	21 c0       	rjmp	.+66     	; 0x2d10 <vfprintf+0xca>
    2cce:	27 fd       	sbrc	r18, 7
    2cd0:	27 c0       	rjmp	.+78     	; 0x2d20 <vfprintf+0xda>
    2cd2:	30 ed       	ldi	r19, 0xD0	; 208
    2cd4:	38 0f       	add	r19, r24
    2cd6:	3a 30       	cpi	r19, 0x0A	; 10
    2cd8:	78 f4       	brcc	.+30     	; 0x2cf8 <vfprintf+0xb2>
    2cda:	26 ff       	sbrs	r18, 6
    2cdc:	06 c0       	rjmp	.+12     	; 0x2cea <vfprintf+0xa4>
    2cde:	fa e0       	ldi	r31, 0x0A	; 10
    2ce0:	5f 9e       	mul	r5, r31
    2ce2:	30 0d       	add	r19, r0
    2ce4:	11 24       	eor	r1, r1
    2ce6:	53 2e       	mov	r5, r19
    2ce8:	13 c0       	rjmp	.+38     	; 0x2d10 <vfprintf+0xca>
    2cea:	8a e0       	ldi	r24, 0x0A	; 10
    2cec:	38 9e       	mul	r3, r24
    2cee:	30 0d       	add	r19, r0
    2cf0:	11 24       	eor	r1, r1
    2cf2:	33 2e       	mov	r3, r19
    2cf4:	20 62       	ori	r18, 0x20	; 32
    2cf6:	0c c0       	rjmp	.+24     	; 0x2d10 <vfprintf+0xca>
    2cf8:	8e 32       	cpi	r24, 0x2E	; 46
    2cfa:	21 f4       	brne	.+8      	; 0x2d04 <vfprintf+0xbe>
    2cfc:	26 fd       	sbrc	r18, 6
    2cfe:	6b c1       	rjmp	.+726    	; 0x2fd6 <vfprintf+0x390>
    2d00:	20 64       	ori	r18, 0x40	; 64
    2d02:	06 c0       	rjmp	.+12     	; 0x2d10 <vfprintf+0xca>
    2d04:	8c 36       	cpi	r24, 0x6C	; 108
    2d06:	11 f4       	brne	.+4      	; 0x2d0c <vfprintf+0xc6>
    2d08:	20 68       	ori	r18, 0x80	; 128
    2d0a:	02 c0       	rjmp	.+4      	; 0x2d10 <vfprintf+0xca>
    2d0c:	88 36       	cpi	r24, 0x68	; 104
    2d0e:	41 f4       	brne	.+16     	; 0x2d20 <vfprintf+0xda>
    2d10:	f6 01       	movw	r30, r12
    2d12:	93 fd       	sbrc	r25, 3
    2d14:	85 91       	lpm	r24, Z+
    2d16:	93 ff       	sbrs	r25, 3
    2d18:	81 91       	ld	r24, Z+
    2d1a:	6f 01       	movw	r12, r30
    2d1c:	81 11       	cpse	r24, r1
    2d1e:	c1 cf       	rjmp	.-126    	; 0x2ca2 <vfprintf+0x5c>
    2d20:	98 2f       	mov	r25, r24
    2d22:	9f 7d       	andi	r25, 0xDF	; 223
    2d24:	95 54       	subi	r25, 0x45	; 69
    2d26:	93 30       	cpi	r25, 0x03	; 3
    2d28:	28 f4       	brcc	.+10     	; 0x2d34 <vfprintf+0xee>
    2d2a:	0c 5f       	subi	r16, 0xFC	; 252
    2d2c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d2e:	ff e3       	ldi	r31, 0x3F	; 63
    2d30:	f9 83       	std	Y+1, r31	; 0x01
    2d32:	0d c0       	rjmp	.+26     	; 0x2d4e <vfprintf+0x108>
    2d34:	83 36       	cpi	r24, 0x63	; 99
    2d36:	31 f0       	breq	.+12     	; 0x2d44 <vfprintf+0xfe>
    2d38:	83 37       	cpi	r24, 0x73	; 115
    2d3a:	71 f0       	breq	.+28     	; 0x2d58 <vfprintf+0x112>
    2d3c:	83 35       	cpi	r24, 0x53	; 83
    2d3e:	09 f0       	breq	.+2      	; 0x2d42 <vfprintf+0xfc>
    2d40:	5b c0       	rjmp	.+182    	; 0x2df8 <vfprintf+0x1b2>
    2d42:	22 c0       	rjmp	.+68     	; 0x2d88 <vfprintf+0x142>
    2d44:	f8 01       	movw	r30, r16
    2d46:	80 81       	ld	r24, Z
    2d48:	89 83       	std	Y+1, r24	; 0x01
    2d4a:	0e 5f       	subi	r16, 0xFE	; 254
    2d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d4e:	44 24       	eor	r4, r4
    2d50:	43 94       	inc	r4
    2d52:	51 2c       	mov	r5, r1
    2d54:	54 01       	movw	r10, r8
    2d56:	15 c0       	rjmp	.+42     	; 0x2d82 <vfprintf+0x13c>
    2d58:	38 01       	movw	r6, r16
    2d5a:	f2 e0       	ldi	r31, 0x02	; 2
    2d5c:	6f 0e       	add	r6, r31
    2d5e:	71 1c       	adc	r7, r1
    2d60:	f8 01       	movw	r30, r16
    2d62:	a0 80       	ld	r10, Z
    2d64:	b1 80       	ldd	r11, Z+1	; 0x01
    2d66:	26 ff       	sbrs	r18, 6
    2d68:	03 c0       	rjmp	.+6      	; 0x2d70 <vfprintf+0x12a>
    2d6a:	65 2d       	mov	r22, r5
    2d6c:	70 e0       	ldi	r23, 0x00	; 0
    2d6e:	02 c0       	rjmp	.+4      	; 0x2d74 <vfprintf+0x12e>
    2d70:	6f ef       	ldi	r22, 0xFF	; 255
    2d72:	7f ef       	ldi	r23, 0xFF	; 255
    2d74:	c5 01       	movw	r24, r10
    2d76:	2c 87       	std	Y+12, r18	; 0x0c
    2d78:	0e 94 00 18 	call	0x3000	; 0x3000 <strnlen>
    2d7c:	2c 01       	movw	r4, r24
    2d7e:	83 01       	movw	r16, r6
    2d80:	2c 85       	ldd	r18, Y+12	; 0x0c
    2d82:	2f 77       	andi	r18, 0x7F	; 127
    2d84:	22 2e       	mov	r2, r18
    2d86:	17 c0       	rjmp	.+46     	; 0x2db6 <vfprintf+0x170>
    2d88:	38 01       	movw	r6, r16
    2d8a:	f2 e0       	ldi	r31, 0x02	; 2
    2d8c:	6f 0e       	add	r6, r31
    2d8e:	71 1c       	adc	r7, r1
    2d90:	f8 01       	movw	r30, r16
    2d92:	a0 80       	ld	r10, Z
    2d94:	b1 80       	ldd	r11, Z+1	; 0x01
    2d96:	26 ff       	sbrs	r18, 6
    2d98:	03 c0       	rjmp	.+6      	; 0x2da0 <vfprintf+0x15a>
    2d9a:	65 2d       	mov	r22, r5
    2d9c:	70 e0       	ldi	r23, 0x00	; 0
    2d9e:	02 c0       	rjmp	.+4      	; 0x2da4 <vfprintf+0x15e>
    2da0:	6f ef       	ldi	r22, 0xFF	; 255
    2da2:	7f ef       	ldi	r23, 0xFF	; 255
    2da4:	c5 01       	movw	r24, r10
    2da6:	2c 87       	std	Y+12, r18	; 0x0c
    2da8:	0e 94 f5 17 	call	0x2fea	; 0x2fea <strnlen_P>
    2dac:	2c 01       	movw	r4, r24
    2dae:	2c 85       	ldd	r18, Y+12	; 0x0c
    2db0:	20 68       	ori	r18, 0x80	; 128
    2db2:	22 2e       	mov	r2, r18
    2db4:	83 01       	movw	r16, r6
    2db6:	23 fc       	sbrc	r2, 3
    2db8:	1b c0       	rjmp	.+54     	; 0x2df0 <vfprintf+0x1aa>
    2dba:	83 2d       	mov	r24, r3
    2dbc:	90 e0       	ldi	r25, 0x00	; 0
    2dbe:	48 16       	cp	r4, r24
    2dc0:	59 06       	cpc	r5, r25
    2dc2:	b0 f4       	brcc	.+44     	; 0x2df0 <vfprintf+0x1aa>
    2dc4:	b7 01       	movw	r22, r14
    2dc6:	80 e2       	ldi	r24, 0x20	; 32
    2dc8:	90 e0       	ldi	r25, 0x00	; 0
    2dca:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2dce:	3a 94       	dec	r3
    2dd0:	f4 cf       	rjmp	.-24     	; 0x2dba <vfprintf+0x174>
    2dd2:	f5 01       	movw	r30, r10
    2dd4:	27 fc       	sbrc	r2, 7
    2dd6:	85 91       	lpm	r24, Z+
    2dd8:	27 fe       	sbrs	r2, 7
    2dda:	81 91       	ld	r24, Z+
    2ddc:	5f 01       	movw	r10, r30
    2dde:	b7 01       	movw	r22, r14
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2de6:	31 10       	cpse	r3, r1
    2de8:	3a 94       	dec	r3
    2dea:	f1 e0       	ldi	r31, 0x01	; 1
    2dec:	4f 1a       	sub	r4, r31
    2dee:	51 08       	sbc	r5, r1
    2df0:	41 14       	cp	r4, r1
    2df2:	51 04       	cpc	r5, r1
    2df4:	71 f7       	brne	.-36     	; 0x2dd2 <vfprintf+0x18c>
    2df6:	e5 c0       	rjmp	.+458    	; 0x2fc2 <vfprintf+0x37c>
    2df8:	84 36       	cpi	r24, 0x64	; 100
    2dfa:	11 f0       	breq	.+4      	; 0x2e00 <vfprintf+0x1ba>
    2dfc:	89 36       	cpi	r24, 0x69	; 105
    2dfe:	39 f5       	brne	.+78     	; 0x2e4e <vfprintf+0x208>
    2e00:	f8 01       	movw	r30, r16
    2e02:	27 ff       	sbrs	r18, 7
    2e04:	07 c0       	rjmp	.+14     	; 0x2e14 <vfprintf+0x1ce>
    2e06:	60 81       	ld	r22, Z
    2e08:	71 81       	ldd	r23, Z+1	; 0x01
    2e0a:	82 81       	ldd	r24, Z+2	; 0x02
    2e0c:	93 81       	ldd	r25, Z+3	; 0x03
    2e0e:	0c 5f       	subi	r16, 0xFC	; 252
    2e10:	1f 4f       	sbci	r17, 0xFF	; 255
    2e12:	08 c0       	rjmp	.+16     	; 0x2e24 <vfprintf+0x1de>
    2e14:	60 81       	ld	r22, Z
    2e16:	71 81       	ldd	r23, Z+1	; 0x01
    2e18:	07 2e       	mov	r0, r23
    2e1a:	00 0c       	add	r0, r0
    2e1c:	88 0b       	sbc	r24, r24
    2e1e:	99 0b       	sbc	r25, r25
    2e20:	0e 5f       	subi	r16, 0xFE	; 254
    2e22:	1f 4f       	sbci	r17, 0xFF	; 255
    2e24:	2f 76       	andi	r18, 0x6F	; 111
    2e26:	72 2e       	mov	r7, r18
    2e28:	97 ff       	sbrs	r25, 7
    2e2a:	09 c0       	rjmp	.+18     	; 0x2e3e <vfprintf+0x1f8>
    2e2c:	90 95       	com	r25
    2e2e:	80 95       	com	r24
    2e30:	70 95       	com	r23
    2e32:	61 95       	neg	r22
    2e34:	7f 4f       	sbci	r23, 0xFF	; 255
    2e36:	8f 4f       	sbci	r24, 0xFF	; 255
    2e38:	9f 4f       	sbci	r25, 0xFF	; 255
    2e3a:	20 68       	ori	r18, 0x80	; 128
    2e3c:	72 2e       	mov	r7, r18
    2e3e:	2a e0       	ldi	r18, 0x0A	; 10
    2e40:	30 e0       	ldi	r19, 0x00	; 0
    2e42:	a4 01       	movw	r20, r8
    2e44:	0e 94 43 18 	call	0x3086	; 0x3086 <__ultoa_invert>
    2e48:	a8 2e       	mov	r10, r24
    2e4a:	a8 18       	sub	r10, r8
    2e4c:	44 c0       	rjmp	.+136    	; 0x2ed6 <vfprintf+0x290>
    2e4e:	85 37       	cpi	r24, 0x75	; 117
    2e50:	29 f4       	brne	.+10     	; 0x2e5c <vfprintf+0x216>
    2e52:	2f 7e       	andi	r18, 0xEF	; 239
    2e54:	b2 2e       	mov	r11, r18
    2e56:	2a e0       	ldi	r18, 0x0A	; 10
    2e58:	30 e0       	ldi	r19, 0x00	; 0
    2e5a:	25 c0       	rjmp	.+74     	; 0x2ea6 <vfprintf+0x260>
    2e5c:	f2 2f       	mov	r31, r18
    2e5e:	f9 7f       	andi	r31, 0xF9	; 249
    2e60:	bf 2e       	mov	r11, r31
    2e62:	8f 36       	cpi	r24, 0x6F	; 111
    2e64:	c1 f0       	breq	.+48     	; 0x2e96 <vfprintf+0x250>
    2e66:	18 f4       	brcc	.+6      	; 0x2e6e <vfprintf+0x228>
    2e68:	88 35       	cpi	r24, 0x58	; 88
    2e6a:	79 f0       	breq	.+30     	; 0x2e8a <vfprintf+0x244>
    2e6c:	b4 c0       	rjmp	.+360    	; 0x2fd6 <vfprintf+0x390>
    2e6e:	80 37       	cpi	r24, 0x70	; 112
    2e70:	19 f0       	breq	.+6      	; 0x2e78 <vfprintf+0x232>
    2e72:	88 37       	cpi	r24, 0x78	; 120
    2e74:	21 f0       	breq	.+8      	; 0x2e7e <vfprintf+0x238>
    2e76:	af c0       	rjmp	.+350    	; 0x2fd6 <vfprintf+0x390>
    2e78:	2f 2f       	mov	r18, r31
    2e7a:	20 61       	ori	r18, 0x10	; 16
    2e7c:	b2 2e       	mov	r11, r18
    2e7e:	b4 fe       	sbrs	r11, 4
    2e80:	0d c0       	rjmp	.+26     	; 0x2e9c <vfprintf+0x256>
    2e82:	8b 2d       	mov	r24, r11
    2e84:	84 60       	ori	r24, 0x04	; 4
    2e86:	b8 2e       	mov	r11, r24
    2e88:	09 c0       	rjmp	.+18     	; 0x2e9c <vfprintf+0x256>
    2e8a:	24 ff       	sbrs	r18, 4
    2e8c:	0a c0       	rjmp	.+20     	; 0x2ea2 <vfprintf+0x25c>
    2e8e:	9f 2f       	mov	r25, r31
    2e90:	96 60       	ori	r25, 0x06	; 6
    2e92:	b9 2e       	mov	r11, r25
    2e94:	06 c0       	rjmp	.+12     	; 0x2ea2 <vfprintf+0x25c>
    2e96:	28 e0       	ldi	r18, 0x08	; 8
    2e98:	30 e0       	ldi	r19, 0x00	; 0
    2e9a:	05 c0       	rjmp	.+10     	; 0x2ea6 <vfprintf+0x260>
    2e9c:	20 e1       	ldi	r18, 0x10	; 16
    2e9e:	30 e0       	ldi	r19, 0x00	; 0
    2ea0:	02 c0       	rjmp	.+4      	; 0x2ea6 <vfprintf+0x260>
    2ea2:	20 e1       	ldi	r18, 0x10	; 16
    2ea4:	32 e0       	ldi	r19, 0x02	; 2
    2ea6:	f8 01       	movw	r30, r16
    2ea8:	b7 fe       	sbrs	r11, 7
    2eaa:	07 c0       	rjmp	.+14     	; 0x2eba <vfprintf+0x274>
    2eac:	60 81       	ld	r22, Z
    2eae:	71 81       	ldd	r23, Z+1	; 0x01
    2eb0:	82 81       	ldd	r24, Z+2	; 0x02
    2eb2:	93 81       	ldd	r25, Z+3	; 0x03
    2eb4:	0c 5f       	subi	r16, 0xFC	; 252
    2eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    2eb8:	06 c0       	rjmp	.+12     	; 0x2ec6 <vfprintf+0x280>
    2eba:	60 81       	ld	r22, Z
    2ebc:	71 81       	ldd	r23, Z+1	; 0x01
    2ebe:	80 e0       	ldi	r24, 0x00	; 0
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	0e 5f       	subi	r16, 0xFE	; 254
    2ec4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ec6:	a4 01       	movw	r20, r8
    2ec8:	0e 94 43 18 	call	0x3086	; 0x3086 <__ultoa_invert>
    2ecc:	a8 2e       	mov	r10, r24
    2ece:	a8 18       	sub	r10, r8
    2ed0:	fb 2d       	mov	r31, r11
    2ed2:	ff 77       	andi	r31, 0x7F	; 127
    2ed4:	7f 2e       	mov	r7, r31
    2ed6:	76 fe       	sbrs	r7, 6
    2ed8:	0b c0       	rjmp	.+22     	; 0x2ef0 <vfprintf+0x2aa>
    2eda:	37 2d       	mov	r19, r7
    2edc:	3e 7f       	andi	r19, 0xFE	; 254
    2ede:	a5 14       	cp	r10, r5
    2ee0:	50 f4       	brcc	.+20     	; 0x2ef6 <vfprintf+0x2b0>
    2ee2:	74 fe       	sbrs	r7, 4
    2ee4:	0a c0       	rjmp	.+20     	; 0x2efa <vfprintf+0x2b4>
    2ee6:	72 fc       	sbrc	r7, 2
    2ee8:	08 c0       	rjmp	.+16     	; 0x2efa <vfprintf+0x2b4>
    2eea:	37 2d       	mov	r19, r7
    2eec:	3e 7e       	andi	r19, 0xEE	; 238
    2eee:	05 c0       	rjmp	.+10     	; 0x2efa <vfprintf+0x2b4>
    2ef0:	ba 2c       	mov	r11, r10
    2ef2:	37 2d       	mov	r19, r7
    2ef4:	03 c0       	rjmp	.+6      	; 0x2efc <vfprintf+0x2b6>
    2ef6:	ba 2c       	mov	r11, r10
    2ef8:	01 c0       	rjmp	.+2      	; 0x2efc <vfprintf+0x2b6>
    2efa:	b5 2c       	mov	r11, r5
    2efc:	34 ff       	sbrs	r19, 4
    2efe:	0d c0       	rjmp	.+26     	; 0x2f1a <vfprintf+0x2d4>
    2f00:	fe 01       	movw	r30, r28
    2f02:	ea 0d       	add	r30, r10
    2f04:	f1 1d       	adc	r31, r1
    2f06:	80 81       	ld	r24, Z
    2f08:	80 33       	cpi	r24, 0x30	; 48
    2f0a:	11 f4       	brne	.+4      	; 0x2f10 <vfprintf+0x2ca>
    2f0c:	39 7e       	andi	r19, 0xE9	; 233
    2f0e:	09 c0       	rjmp	.+18     	; 0x2f22 <vfprintf+0x2dc>
    2f10:	32 ff       	sbrs	r19, 2
    2f12:	06 c0       	rjmp	.+12     	; 0x2f20 <vfprintf+0x2da>
    2f14:	b3 94       	inc	r11
    2f16:	b3 94       	inc	r11
    2f18:	04 c0       	rjmp	.+8      	; 0x2f22 <vfprintf+0x2dc>
    2f1a:	83 2f       	mov	r24, r19
    2f1c:	86 78       	andi	r24, 0x86	; 134
    2f1e:	09 f0       	breq	.+2      	; 0x2f22 <vfprintf+0x2dc>
    2f20:	b3 94       	inc	r11
    2f22:	33 fd       	sbrc	r19, 3
    2f24:	13 c0       	rjmp	.+38     	; 0x2f4c <vfprintf+0x306>
    2f26:	30 ff       	sbrs	r19, 0
    2f28:	06 c0       	rjmp	.+12     	; 0x2f36 <vfprintf+0x2f0>
    2f2a:	5a 2c       	mov	r5, r10
    2f2c:	b3 14       	cp	r11, r3
    2f2e:	18 f4       	brcc	.+6      	; 0x2f36 <vfprintf+0x2f0>
    2f30:	53 0c       	add	r5, r3
    2f32:	5b 18       	sub	r5, r11
    2f34:	b3 2c       	mov	r11, r3
    2f36:	b3 14       	cp	r11, r3
    2f38:	68 f4       	brcc	.+26     	; 0x2f54 <vfprintf+0x30e>
    2f3a:	b7 01       	movw	r22, r14
    2f3c:	80 e2       	ldi	r24, 0x20	; 32
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	3c 87       	std	Y+12, r19	; 0x0c
    2f42:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2f46:	b3 94       	inc	r11
    2f48:	3c 85       	ldd	r19, Y+12	; 0x0c
    2f4a:	f5 cf       	rjmp	.-22     	; 0x2f36 <vfprintf+0x2f0>
    2f4c:	b3 14       	cp	r11, r3
    2f4e:	10 f4       	brcc	.+4      	; 0x2f54 <vfprintf+0x30e>
    2f50:	3b 18       	sub	r3, r11
    2f52:	01 c0       	rjmp	.+2      	; 0x2f56 <vfprintf+0x310>
    2f54:	31 2c       	mov	r3, r1
    2f56:	34 ff       	sbrs	r19, 4
    2f58:	12 c0       	rjmp	.+36     	; 0x2f7e <vfprintf+0x338>
    2f5a:	b7 01       	movw	r22, r14
    2f5c:	80 e3       	ldi	r24, 0x30	; 48
    2f5e:	90 e0       	ldi	r25, 0x00	; 0
    2f60:	3c 87       	std	Y+12, r19	; 0x0c
    2f62:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2f66:	3c 85       	ldd	r19, Y+12	; 0x0c
    2f68:	32 ff       	sbrs	r19, 2
    2f6a:	17 c0       	rjmp	.+46     	; 0x2f9a <vfprintf+0x354>
    2f6c:	31 fd       	sbrc	r19, 1
    2f6e:	03 c0       	rjmp	.+6      	; 0x2f76 <vfprintf+0x330>
    2f70:	88 e7       	ldi	r24, 0x78	; 120
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	02 c0       	rjmp	.+4      	; 0x2f7a <vfprintf+0x334>
    2f76:	88 e5       	ldi	r24, 0x58	; 88
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	b7 01       	movw	r22, r14
    2f7c:	0c c0       	rjmp	.+24     	; 0x2f96 <vfprintf+0x350>
    2f7e:	83 2f       	mov	r24, r19
    2f80:	86 78       	andi	r24, 0x86	; 134
    2f82:	59 f0       	breq	.+22     	; 0x2f9a <vfprintf+0x354>
    2f84:	31 ff       	sbrs	r19, 1
    2f86:	02 c0       	rjmp	.+4      	; 0x2f8c <vfprintf+0x346>
    2f88:	8b e2       	ldi	r24, 0x2B	; 43
    2f8a:	01 c0       	rjmp	.+2      	; 0x2f8e <vfprintf+0x348>
    2f8c:	80 e2       	ldi	r24, 0x20	; 32
    2f8e:	37 fd       	sbrc	r19, 7
    2f90:	8d e2       	ldi	r24, 0x2D	; 45
    2f92:	b7 01       	movw	r22, r14
    2f94:	90 e0       	ldi	r25, 0x00	; 0
    2f96:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2f9a:	a5 14       	cp	r10, r5
    2f9c:	38 f4       	brcc	.+14     	; 0x2fac <vfprintf+0x366>
    2f9e:	b7 01       	movw	r22, r14
    2fa0:	80 e3       	ldi	r24, 0x30	; 48
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2fa8:	5a 94       	dec	r5
    2faa:	f7 cf       	rjmp	.-18     	; 0x2f9a <vfprintf+0x354>
    2fac:	aa 94       	dec	r10
    2fae:	f4 01       	movw	r30, r8
    2fb0:	ea 0d       	add	r30, r10
    2fb2:	f1 1d       	adc	r31, r1
    2fb4:	80 81       	ld	r24, Z
    2fb6:	b7 01       	movw	r22, r14
    2fb8:	90 e0       	ldi	r25, 0x00	; 0
    2fba:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2fbe:	a1 10       	cpse	r10, r1
    2fc0:	f5 cf       	rjmp	.-22     	; 0x2fac <vfprintf+0x366>
    2fc2:	33 20       	and	r3, r3
    2fc4:	09 f4       	brne	.+2      	; 0x2fc8 <vfprintf+0x382>
    2fc6:	51 ce       	rjmp	.-862    	; 0x2c6a <vfprintf+0x24>
    2fc8:	b7 01       	movw	r22, r14
    2fca:	80 e2       	ldi	r24, 0x20	; 32
    2fcc:	90 e0       	ldi	r25, 0x00	; 0
    2fce:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2fd2:	3a 94       	dec	r3
    2fd4:	f6 cf       	rjmp	.-20     	; 0x2fc2 <vfprintf+0x37c>
    2fd6:	f7 01       	movw	r30, r14
    2fd8:	86 81       	ldd	r24, Z+6	; 0x06
    2fda:	97 81       	ldd	r25, Z+7	; 0x07
    2fdc:	02 c0       	rjmp	.+4      	; 0x2fe2 <vfprintf+0x39c>
    2fde:	8f ef       	ldi	r24, 0xFF	; 255
    2fe0:	9f ef       	ldi	r25, 0xFF	; 255
    2fe2:	2c 96       	adiw	r28, 0x0c	; 12
    2fe4:	e2 e1       	ldi	r30, 0x12	; 18
    2fe6:	0c 94 bd 18 	jmp	0x317a	; 0x317a <__epilogue_restores__>

00002fea <strnlen_P>:
    2fea:	fc 01       	movw	r30, r24
    2fec:	05 90       	lpm	r0, Z+
    2fee:	61 50       	subi	r22, 0x01	; 1
    2ff0:	70 40       	sbci	r23, 0x00	; 0
    2ff2:	01 10       	cpse	r0, r1
    2ff4:	d8 f7       	brcc	.-10     	; 0x2fec <strnlen_P+0x2>
    2ff6:	80 95       	com	r24
    2ff8:	90 95       	com	r25
    2ffa:	8e 0f       	add	r24, r30
    2ffc:	9f 1f       	adc	r25, r31
    2ffe:	08 95       	ret

00003000 <strnlen>:
    3000:	fc 01       	movw	r30, r24
    3002:	61 50       	subi	r22, 0x01	; 1
    3004:	70 40       	sbci	r23, 0x00	; 0
    3006:	01 90       	ld	r0, Z+
    3008:	01 10       	cpse	r0, r1
    300a:	d8 f7       	brcc	.-10     	; 0x3002 <strnlen+0x2>
    300c:	80 95       	com	r24
    300e:	90 95       	com	r25
    3010:	8e 0f       	add	r24, r30
    3012:	9f 1f       	adc	r25, r31
    3014:	08 95       	ret

00003016 <fputc>:
    3016:	0f 93       	push	r16
    3018:	1f 93       	push	r17
    301a:	cf 93       	push	r28
    301c:	df 93       	push	r29
    301e:	fb 01       	movw	r30, r22
    3020:	23 81       	ldd	r18, Z+3	; 0x03
    3022:	21 fd       	sbrc	r18, 1
    3024:	03 c0       	rjmp	.+6      	; 0x302c <fputc+0x16>
    3026:	8f ef       	ldi	r24, 0xFF	; 255
    3028:	9f ef       	ldi	r25, 0xFF	; 255
    302a:	28 c0       	rjmp	.+80     	; 0x307c <fputc+0x66>
    302c:	22 ff       	sbrs	r18, 2
    302e:	16 c0       	rjmp	.+44     	; 0x305c <fputc+0x46>
    3030:	46 81       	ldd	r20, Z+6	; 0x06
    3032:	57 81       	ldd	r21, Z+7	; 0x07
    3034:	24 81       	ldd	r18, Z+4	; 0x04
    3036:	35 81       	ldd	r19, Z+5	; 0x05
    3038:	42 17       	cp	r20, r18
    303a:	53 07       	cpc	r21, r19
    303c:	44 f4       	brge	.+16     	; 0x304e <fputc+0x38>
    303e:	a0 81       	ld	r26, Z
    3040:	b1 81       	ldd	r27, Z+1	; 0x01
    3042:	9d 01       	movw	r18, r26
    3044:	2f 5f       	subi	r18, 0xFF	; 255
    3046:	3f 4f       	sbci	r19, 0xFF	; 255
    3048:	31 83       	std	Z+1, r19	; 0x01
    304a:	20 83       	st	Z, r18
    304c:	8c 93       	st	X, r24
    304e:	26 81       	ldd	r18, Z+6	; 0x06
    3050:	37 81       	ldd	r19, Z+7	; 0x07
    3052:	2f 5f       	subi	r18, 0xFF	; 255
    3054:	3f 4f       	sbci	r19, 0xFF	; 255
    3056:	37 83       	std	Z+7, r19	; 0x07
    3058:	26 83       	std	Z+6, r18	; 0x06
    305a:	10 c0       	rjmp	.+32     	; 0x307c <fputc+0x66>
    305c:	eb 01       	movw	r28, r22
    305e:	09 2f       	mov	r16, r25
    3060:	18 2f       	mov	r17, r24
    3062:	00 84       	ldd	r0, Z+8	; 0x08
    3064:	f1 85       	ldd	r31, Z+9	; 0x09
    3066:	e0 2d       	mov	r30, r0
    3068:	09 95       	icall
    306a:	89 2b       	or	r24, r25
    306c:	e1 f6       	brne	.-72     	; 0x3026 <fputc+0x10>
    306e:	8e 81       	ldd	r24, Y+6	; 0x06
    3070:	9f 81       	ldd	r25, Y+7	; 0x07
    3072:	01 96       	adiw	r24, 0x01	; 1
    3074:	9f 83       	std	Y+7, r25	; 0x07
    3076:	8e 83       	std	Y+6, r24	; 0x06
    3078:	81 2f       	mov	r24, r17
    307a:	90 2f       	mov	r25, r16
    307c:	df 91       	pop	r29
    307e:	cf 91       	pop	r28
    3080:	1f 91       	pop	r17
    3082:	0f 91       	pop	r16
    3084:	08 95       	ret

00003086 <__ultoa_invert>:
    3086:	fa 01       	movw	r30, r20
    3088:	aa 27       	eor	r26, r26
    308a:	28 30       	cpi	r18, 0x08	; 8
    308c:	51 f1       	breq	.+84     	; 0x30e2 <__ultoa_invert+0x5c>
    308e:	20 31       	cpi	r18, 0x10	; 16
    3090:	81 f1       	breq	.+96     	; 0x30f2 <__ultoa_invert+0x6c>
    3092:	e8 94       	clt
    3094:	6f 93       	push	r22
    3096:	6e 7f       	andi	r22, 0xFE	; 254
    3098:	6e 5f       	subi	r22, 0xFE	; 254
    309a:	7f 4f       	sbci	r23, 0xFF	; 255
    309c:	8f 4f       	sbci	r24, 0xFF	; 255
    309e:	9f 4f       	sbci	r25, 0xFF	; 255
    30a0:	af 4f       	sbci	r26, 0xFF	; 255
    30a2:	b1 e0       	ldi	r27, 0x01	; 1
    30a4:	3e d0       	rcall	.+124    	; 0x3122 <__ultoa_invert+0x9c>
    30a6:	b4 e0       	ldi	r27, 0x04	; 4
    30a8:	3c d0       	rcall	.+120    	; 0x3122 <__ultoa_invert+0x9c>
    30aa:	67 0f       	add	r22, r23
    30ac:	78 1f       	adc	r23, r24
    30ae:	89 1f       	adc	r24, r25
    30b0:	9a 1f       	adc	r25, r26
    30b2:	a1 1d       	adc	r26, r1
    30b4:	68 0f       	add	r22, r24
    30b6:	79 1f       	adc	r23, r25
    30b8:	8a 1f       	adc	r24, r26
    30ba:	91 1d       	adc	r25, r1
    30bc:	a1 1d       	adc	r26, r1
    30be:	6a 0f       	add	r22, r26
    30c0:	71 1d       	adc	r23, r1
    30c2:	81 1d       	adc	r24, r1
    30c4:	91 1d       	adc	r25, r1
    30c6:	a1 1d       	adc	r26, r1
    30c8:	20 d0       	rcall	.+64     	; 0x310a <__ultoa_invert+0x84>
    30ca:	09 f4       	brne	.+2      	; 0x30ce <__ultoa_invert+0x48>
    30cc:	68 94       	set
    30ce:	3f 91       	pop	r19
    30d0:	2a e0       	ldi	r18, 0x0A	; 10
    30d2:	26 9f       	mul	r18, r22
    30d4:	11 24       	eor	r1, r1
    30d6:	30 19       	sub	r19, r0
    30d8:	30 5d       	subi	r19, 0xD0	; 208
    30da:	31 93       	st	Z+, r19
    30dc:	de f6       	brtc	.-74     	; 0x3094 <__ultoa_invert+0xe>
    30de:	cf 01       	movw	r24, r30
    30e0:	08 95       	ret
    30e2:	46 2f       	mov	r20, r22
    30e4:	47 70       	andi	r20, 0x07	; 7
    30e6:	40 5d       	subi	r20, 0xD0	; 208
    30e8:	41 93       	st	Z+, r20
    30ea:	b3 e0       	ldi	r27, 0x03	; 3
    30ec:	0f d0       	rcall	.+30     	; 0x310c <__ultoa_invert+0x86>
    30ee:	c9 f7       	brne	.-14     	; 0x30e2 <__ultoa_invert+0x5c>
    30f0:	f6 cf       	rjmp	.-20     	; 0x30de <__ultoa_invert+0x58>
    30f2:	46 2f       	mov	r20, r22
    30f4:	4f 70       	andi	r20, 0x0F	; 15
    30f6:	40 5d       	subi	r20, 0xD0	; 208
    30f8:	4a 33       	cpi	r20, 0x3A	; 58
    30fa:	18 f0       	brcs	.+6      	; 0x3102 <__ultoa_invert+0x7c>
    30fc:	49 5d       	subi	r20, 0xD9	; 217
    30fe:	31 fd       	sbrc	r19, 1
    3100:	40 52       	subi	r20, 0x20	; 32
    3102:	41 93       	st	Z+, r20
    3104:	02 d0       	rcall	.+4      	; 0x310a <__ultoa_invert+0x84>
    3106:	a9 f7       	brne	.-22     	; 0x30f2 <__ultoa_invert+0x6c>
    3108:	ea cf       	rjmp	.-44     	; 0x30de <__ultoa_invert+0x58>
    310a:	b4 e0       	ldi	r27, 0x04	; 4
    310c:	a6 95       	lsr	r26
    310e:	97 95       	ror	r25
    3110:	87 95       	ror	r24
    3112:	77 95       	ror	r23
    3114:	67 95       	ror	r22
    3116:	ba 95       	dec	r27
    3118:	c9 f7       	brne	.-14     	; 0x310c <__ultoa_invert+0x86>
    311a:	00 97       	sbiw	r24, 0x00	; 0
    311c:	61 05       	cpc	r22, r1
    311e:	71 05       	cpc	r23, r1
    3120:	08 95       	ret
    3122:	9b 01       	movw	r18, r22
    3124:	ac 01       	movw	r20, r24
    3126:	0a 2e       	mov	r0, r26
    3128:	06 94       	lsr	r0
    312a:	57 95       	ror	r21
    312c:	47 95       	ror	r20
    312e:	37 95       	ror	r19
    3130:	27 95       	ror	r18
    3132:	ba 95       	dec	r27
    3134:	c9 f7       	brne	.-14     	; 0x3128 <__ultoa_invert+0xa2>
    3136:	62 0f       	add	r22, r18
    3138:	73 1f       	adc	r23, r19
    313a:	84 1f       	adc	r24, r20
    313c:	95 1f       	adc	r25, r21
    313e:	a0 1d       	adc	r26, r0
    3140:	08 95       	ret

00003142 <__prologue_saves__>:
    3142:	2f 92       	push	r2
    3144:	3f 92       	push	r3
    3146:	4f 92       	push	r4
    3148:	5f 92       	push	r5
    314a:	6f 92       	push	r6
    314c:	7f 92       	push	r7
    314e:	8f 92       	push	r8
    3150:	9f 92       	push	r9
    3152:	af 92       	push	r10
    3154:	bf 92       	push	r11
    3156:	cf 92       	push	r12
    3158:	df 92       	push	r13
    315a:	ef 92       	push	r14
    315c:	ff 92       	push	r15
    315e:	0f 93       	push	r16
    3160:	1f 93       	push	r17
    3162:	cf 93       	push	r28
    3164:	df 93       	push	r29
    3166:	cd b7       	in	r28, 0x3d	; 61
    3168:	de b7       	in	r29, 0x3e	; 62
    316a:	ca 1b       	sub	r28, r26
    316c:	db 0b       	sbc	r29, r27
    316e:	0f b6       	in	r0, 0x3f	; 63
    3170:	f8 94       	cli
    3172:	de bf       	out	0x3e, r29	; 62
    3174:	0f be       	out	0x3f, r0	; 63
    3176:	cd bf       	out	0x3d, r28	; 61
    3178:	09 94       	ijmp

0000317a <__epilogue_restores__>:
    317a:	2a 88       	ldd	r2, Y+18	; 0x12
    317c:	39 88       	ldd	r3, Y+17	; 0x11
    317e:	48 88       	ldd	r4, Y+16	; 0x10
    3180:	5f 84       	ldd	r5, Y+15	; 0x0f
    3182:	6e 84       	ldd	r6, Y+14	; 0x0e
    3184:	7d 84       	ldd	r7, Y+13	; 0x0d
    3186:	8c 84       	ldd	r8, Y+12	; 0x0c
    3188:	9b 84       	ldd	r9, Y+11	; 0x0b
    318a:	aa 84       	ldd	r10, Y+10	; 0x0a
    318c:	b9 84       	ldd	r11, Y+9	; 0x09
    318e:	c8 84       	ldd	r12, Y+8	; 0x08
    3190:	df 80       	ldd	r13, Y+7	; 0x07
    3192:	ee 80       	ldd	r14, Y+6	; 0x06
    3194:	fd 80       	ldd	r15, Y+5	; 0x05
    3196:	0c 81       	ldd	r16, Y+4	; 0x04
    3198:	1b 81       	ldd	r17, Y+3	; 0x03
    319a:	aa 81       	ldd	r26, Y+2	; 0x02
    319c:	b9 81       	ldd	r27, Y+1	; 0x01
    319e:	ce 0f       	add	r28, r30
    31a0:	d1 1d       	adc	r29, r1
    31a2:	0f b6       	in	r0, 0x3f	; 63
    31a4:	f8 94       	cli
    31a6:	de bf       	out	0x3e, r29	; 62
    31a8:	0f be       	out	0x3f, r0	; 63
    31aa:	cd bf       	out	0x3d, r28	; 61
    31ac:	ed 01       	movw	r28, r26
    31ae:	08 95       	ret

000031b0 <_exit>:
    31b0:	f8 94       	cli

000031b2 <__stop_program>:
    31b2:	ff cf       	rjmp	.-2      	; 0x31b2 <__stop_program>
