
arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000186  00800100  000032e0  00003374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000032e0  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000251  00800286  00800286  000034fa  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000034fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000350c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a8  00000000  00000000  00003550  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000eab0  00000000  00000000  000039f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002b29  00000000  00000000  000124a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000030fb  00000000  00000000  00014fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c80  00000000  00000000  000180cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000030d7  00000000  00000000  00018d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005124  00000000  00000000  0001be23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004b0  00000000  00000000  00020f47  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
       4:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       8:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
       c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      10:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      18:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      20:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      24:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      28:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      2c:	0c 94 10 14 	jmp	0x2820	; 0x2820 <__vector_11>
      30:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      34:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      38:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      3c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      40:	0c 94 d3 0c 	jmp	0x19a6	; 0x19a6 <__vector_16>
      44:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      48:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__vector_18>
      4c:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__vector_19>
      50:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      58:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      5c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      60:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>
      64:	0c 94 85 00 	jmp	0x10a	; 0x10a <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 08       	sbc	r0, r0
      6c:	00 02       	muls	r16, r16
      6e:	01 00       	.word	0x0001	; ????
      70:	00 03       	mulsu	r16, r16
      72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_output_PGM>:
      a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ae <port_to_mode_PGM>:
      ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000b8 <__ctors_start>:
      b8:	89 0f       	add	r24, r25

000000ba <__ctors_end>:
      ba:	11 24       	eor	r1, r1
      bc:	1f be       	out	0x3f, r1	; 63
      be:	cf ef       	ldi	r28, 0xFF	; 255
      c0:	d8 e0       	ldi	r29, 0x08	; 8
      c2:	de bf       	out	0x3e, r29	; 62
      c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
      c6:	12 e0       	ldi	r17, 0x02	; 2
      c8:	a0 e0       	ldi	r26, 0x00	; 0
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	e0 ee       	ldi	r30, 0xE0	; 224
      ce:	f2 e3       	ldi	r31, 0x32	; 50
      d0:	02 c0       	rjmp	.+4      	; 0xd6 <__do_copy_data+0x10>
      d2:	05 90       	lpm	r0, Z+
      d4:	0d 92       	st	X+, r0
      d6:	a6 38       	cpi	r26, 0x86	; 134
      d8:	b1 07       	cpc	r27, r17
      da:	d9 f7       	brne	.-10     	; 0xd2 <__do_copy_data+0xc>

000000dc <__do_clear_bss>:
      dc:	24 e0       	ldi	r18, 0x04	; 4
      de:	a6 e8       	ldi	r26, 0x86	; 134
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	01 c0       	rjmp	.+2      	; 0xe6 <.do_clear_bss_start>

000000e4 <.do_clear_bss_loop>:
      e4:	1d 92       	st	X+, r1

000000e6 <.do_clear_bss_start>:
      e6:	a7 3d       	cpi	r26, 0xD7	; 215
      e8:	b2 07       	cpc	r27, r18
      ea:	e1 f7       	brne	.-8      	; 0xe4 <.do_clear_bss_loop>

000000ec <__do_global_ctors>:
      ec:	10 e0       	ldi	r17, 0x00	; 0
      ee:	cd e5       	ldi	r28, 0x5D	; 93
      f0:	d0 e0       	ldi	r29, 0x00	; 0
      f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_global_ctors+0x10>
      f4:	21 97       	sbiw	r28, 0x01	; 1
      f6:	fe 01       	movw	r30, r28
      f8:	0e 94 83 16 	call	0x2d06	; 0x2d06 <__tablejump2__>
      fc:	cc 35       	cpi	r28, 0x5C	; 92
      fe:	d1 07       	cpc	r29, r17
     100:	c9 f7       	brne	.-14     	; 0xf4 <__do_global_ctors+0x8>
     102:	0e 94 08 0c 	call	0x1810	; 0x1810 <main>
     106:	0c 94 6e 19 	jmp	0x32dc	; 0x32dc <_exit>

0000010a <__bad_interrupt>:
     10a:	0c 94 0c 14 	jmp	0x2818	; 0x2818 <__vector_default>
	...

00000110 <osEE_hal_save_ctx_and_restore_ctx>:
     110:	2f 92       	push	r2
     112:	3f 92       	push	r3
     114:	4f 92       	push	r4
     116:	5f 92       	push	r5
     118:	6f 92       	push	r6
     11a:	7f 92       	push	r7
     11c:	8f 92       	push	r8
     11e:	9f 92       	push	r9
     120:	af 92       	push	r10
     122:	bf 92       	push	r11
     124:	cf 92       	push	r12
     126:	df 92       	push	r13
     128:	ef 92       	push	r14
     12a:	ff 92       	push	r15
     12c:	0f 93       	push	r16
     12e:	1f 93       	push	r17
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	e4 2f       	mov	r30, r20
     136:	f5 2f       	mov	r31, r21
     138:	41 90       	ld	r4, Z+
     13a:	50 80       	ld	r5, Z
     13c:	4f 92       	push	r4
     13e:	5f 92       	push	r5
     140:	e4 2f       	mov	r30, r20
     142:	f5 2f       	mov	r31, r21
     144:	4d b6       	in	r4, 0x3d	; 61
     146:	5e b6       	in	r5, 0x3e	; 62
     148:	41 92       	st	Z+, r4
     14a:	50 82       	st	Z, r5
     14c:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>

00000150 <osEE_hal_restore_ctx>:
     150:	e6 2f       	mov	r30, r22
     152:	f7 2f       	mov	r31, r23
     154:	41 90       	ld	r4, Z+
     156:	50 80       	ld	r5, Z
     158:	4d be       	out	0x3d, r4	; 61
     15a:	5e be       	out	0x3e, r5	; 62
     15c:	5f 90       	pop	r5
     15e:	4f 90       	pop	r4
     160:	e6 2f       	mov	r30, r22
     162:	f7 2f       	mov	r31, r23
     164:	41 92       	st	Z+, r4
     166:	50 82       	st	Z, r5
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	ff 90       	pop	r15
     172:	ef 90       	pop	r14
     174:	df 90       	pop	r13
     176:	cf 90       	pop	r12
     178:	bf 90       	pop	r11
     17a:	af 90       	pop	r10
     17c:	9f 90       	pop	r9
     17e:	8f 90       	pop	r8
     180:	7f 90       	pop	r7
     182:	6f 90       	pop	r6
     184:	5f 90       	pop	r5
     186:	4f 90       	pop	r4
     188:	3f 90       	pop	r3
     18a:	2f 90       	pop	r2
     18c:	0c 94 3a 11 	jmp	0x2274	; 0x2274 <osEE_scheduler_task_wrapper_restore>

00000190 <osEE_hal_ready2stacked>:
     190:	e6 2f       	mov	r30, r22
     192:	f7 2f       	mov	r31, r23
     194:	41 91       	ld	r20, Z+
     196:	50 81       	ld	r21, Z
     198:	4d bf       	out	0x3d, r20	; 61
     19a:	5e bf       	out	0x3e, r21	; 62
     19c:	0c 94 44 11 	jmp	0x2288	; 0x2288 <osEE_scheduler_task_wrapper_run>

000001a0 <osEE_hal_save_ctx_and_ready2stacked>:
     1a0:	2f 92       	push	r2
     1a2:	3f 92       	push	r3
     1a4:	4f 92       	push	r4
     1a6:	5f 92       	push	r5
     1a8:	6f 92       	push	r6
     1aa:	7f 92       	push	r7
     1ac:	8f 92       	push	r8
     1ae:	9f 92       	push	r9
     1b0:	af 92       	push	r10
     1b2:	bf 92       	push	r11
     1b4:	cf 92       	push	r12
     1b6:	df 92       	push	r13
     1b8:	ef 92       	push	r14
     1ba:	ff 92       	push	r15
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	e4 2f       	mov	r30, r20
     1c6:	f5 2f       	mov	r31, r21
     1c8:	41 90       	ld	r4, Z+
     1ca:	50 80       	ld	r5, Z
     1cc:	4f 92       	push	r4
     1ce:	5f 92       	push	r5
     1d0:	e4 2f       	mov	r30, r20
     1d2:	f5 2f       	mov	r31, r21
     1d4:	4d b6       	in	r4, 0x3d	; 61
     1d6:	5e b6       	in	r5, 0x3e	; 62
     1d8:	41 92       	st	Z+, r4
     1da:	50 82       	st	Z, r5
     1dc:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

000001e0 <osEE_hal_terminate_ctx>:
     1e0:	e8 2f       	mov	r30, r24
     1e2:	f9 2f       	mov	r31, r25
     1e4:	41 91       	ld	r20, Z+
     1e6:	50 81       	ld	r21, Z
     1e8:	4d bf       	out	0x3d, r20	; 61
     1ea:	5e bf       	out	0x3e, r21	; 62
     1ec:	e6 2f       	mov	r30, r22
     1ee:	f7 2f       	mov	r31, r23
     1f0:	09 94       	ijmp
	...

000001f4 <Check_Enable_of_SubFeatures>:
     1f4:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <Status_Accel_Decel>
     1f8:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <Status_Accel_Decel+0x1>
     1fc:	85 30       	cpi	r24, 0x05	; 5
     1fe:	91 05       	cpc	r25, r1
     200:	f9 f4       	brne	.+62     	; 0x240 <Check_Enable_of_SubFeatures+0x4c>
     202:	80 91 ba 04 	lds	r24, 0x04BA	; 0x8004ba <CC_Enable>
     206:	90 91 bb 04 	lds	r25, 0x04BB	; 0x8004bb <CC_Enable+0x1>
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	71 f1       	breq	.+92     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     20e:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <ACC_Enable>
     212:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <ACC_Enable+0x1>
     216:	01 97       	sbiw	r24, 0x01	; 1
     218:	41 f1       	breq	.+80     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     21a:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     21e:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     222:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     226:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     22a:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     22e:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     23a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     23e:	08 95       	ret
     240:	84 30       	cpi	r24, 0x04	; 4
     242:	91 05       	cpc	r25, r1
     244:	21 f3       	breq	.-56     	; 0x20e <Check_Enable_of_SubFeatures+0x1a>
     246:	83 30       	cpi	r24, 0x03	; 3
     248:	91 05       	cpc	r25, r1
     24a:	39 f4       	brne	.+14     	; 0x25a <Check_Enable_of_SubFeatures+0x66>
     24c:	80 91 bc 04 	lds	r24, 0x04BC	; 0x8004bc <CWAS_Enable>
     250:	90 91 bd 04 	lds	r25, 0x04BD	; 0x8004bd <CWAS_Enable+0x1>
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	09 f7       	brne	.-62     	; 0x21a <Check_Enable_of_SubFeatures+0x26>
     258:	08 95       	ret
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	02 97       	sbiw	r24, 0x02	; 2
     25e:	28 f4       	brcc	.+10     	; 0x26a <Check_Enable_of_SubFeatures+0x76>
     260:	80 91 b2 04 	lds	r24, 0x04B2	; 0x8004b2 <EBS_Enable>
     264:	90 91 b3 04 	lds	r25, 0x04B3	; 0x8004b3 <EBS_Enable+0x1>
     268:	d6 cf       	rjmp	.-84     	; 0x216 <Check_Enable_of_SubFeatures+0x22>
     26a:	08 95       	ret

0000026c <Acc_Dec_Dtrmn_Sys>:
     26c:	4f 92       	push	r4
     26e:	5f 92       	push	r5
     270:	6f 92       	push	r6
     272:	7f 92       	push	r7
     274:	8f 92       	push	r8
     276:	9f 92       	push	r9
     278:	af 92       	push	r10
     27a:	bf 92       	push	r11
     27c:	cf 92       	push	r12
     27e:	df 92       	push	r13
     280:	ef 92       	push	r14
     282:	ff 92       	push	r15
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	6c 97       	sbiw	r28, 0x1c	; 28
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	f8 94       	cli
     292:	de bf       	out	0x3e, r29	; 62
     294:	0f be       	out	0x3f, r0	; 63
     296:	cd bf       	out	0x3d, r28	; 61
     298:	80 91 ba 04 	lds	r24, 0x04BA	; 0x8004ba <CC_Enable>
     29c:	90 91 bb 04 	lds	r25, 0x04BB	; 0x8004bb <CC_Enable+0x1>
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	99 f0       	breq	.+38     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2a4:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <ACC_Enable>
     2a8:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <ACC_Enable+0x1>
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	69 f0       	breq	.+26     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2b0:	80 91 bc 04 	lds	r24, 0x04BC	; 0x8004bc <CWAS_Enable>
     2b4:	90 91 bd 04 	lds	r25, 0x04BD	; 0x8004bd <CWAS_Enable+0x1>
     2b8:	01 97       	sbiw	r24, 0x01	; 1
     2ba:	39 f0       	breq	.+14     	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2bc:	80 91 b2 04 	lds	r24, 0x04B2	; 0x8004b2 <EBS_Enable>
     2c0:	90 91 b3 04 	lds	r25, 0x04B3	; 0x8004b3 <EBS_Enable+0x1>
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	09 f0       	breq	.+2      	; 0x2ca <Acc_Dec_Dtrmn_Sys+0x5e>
     2c8:	4e c4       	rjmp	.+2204   	; 0xb66 <__stack+0x267>
     2ca:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <skip_first_two_dat>
     2ce:	82 30       	cpi	r24, 0x02	; 2
     2d0:	24 f4       	brge	.+8      	; 0x2da <Acc_Dec_Dtrmn_Sys+0x6e>
     2d2:	8f 5f       	subi	r24, 0xFF	; 255
     2d4:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <skip_first_two_dat>
     2d8:	3a c0       	rjmp	.+116    	; 0x34e <Acc_Dec_Dtrmn_Sys+0xe2>
     2da:	20 91 ca 02 	lds	r18, 0x02CA	; 0x8002ca <Vehicle_Speed_Prev>
     2de:	30 91 cb 02 	lds	r19, 0x02CB	; 0x8002cb <Vehicle_Speed_Prev+0x1>
     2e2:	40 91 cc 02 	lds	r20, 0x02CC	; 0x8002cc <Vehicle_Speed_Prev+0x2>
     2e6:	50 91 cd 02 	lds	r21, 0x02CD	; 0x8002cd <Vehicle_Speed_Prev+0x3>
     2ea:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     2ee:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     2f2:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     2f6:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     2fa:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     2fe:	6b 01       	movw	r12, r22
     300:	7c 01       	movw	r14, r24
     302:	20 91 d6 02 	lds	r18, 0x02D6	; 0x8002d6 <Relative_Speed>
     306:	30 91 d7 02 	lds	r19, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
     30a:	40 91 d8 02 	lds	r20, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
     30e:	50 91 d9 02 	lds	r21, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
     312:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <Relative_Speed_Prev>
     316:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <Relative_Speed_Prev+0x1>
     31a:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <Relative_Speed_Prev+0x2>
     31e:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <Relative_Speed_Prev+0x3>
     322:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     326:	9b 01       	movw	r18, r22
     328:	ac 01       	movw	r20, r24
     32a:	c7 01       	movw	r24, r14
     32c:	b6 01       	movw	r22, r12
     32e:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     332:	2d ec       	ldi	r18, 0xCD	; 205
     334:	3c ec       	ldi	r19, 0xCC	; 204
     336:	4c ec       	ldi	r20, 0xCC	; 204
     338:	5d e3       	ldi	r21, 0x3D	; 61
     33a:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     33e:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <Target_Veh_Accel>
     342:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <Target_Veh_Accel+0x1>
     346:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <Target_Veh_Accel+0x2>
     34a:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <Target_Veh_Accel+0x3>
     34e:	40 90 b4 04 	lds	r4, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     352:	50 90 b5 04 	lds	r5, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     356:	60 90 b6 04 	lds	r6, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     35a:	70 90 b7 04 	lds	r7, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     35e:	40 92 ca 02 	sts	0x02CA, r4	; 0x8002ca <Vehicle_Speed_Prev>
     362:	50 92 cb 02 	sts	0x02CB, r5	; 0x8002cb <Vehicle_Speed_Prev+0x1>
     366:	60 92 cc 02 	sts	0x02CC, r6	; 0x8002cc <Vehicle_Speed_Prev+0x2>
     36a:	70 92 cd 02 	sts	0x02CD, r7	; 0x8002cd <Vehicle_Speed_Prev+0x3>
     36e:	c0 90 d6 02 	lds	r12, 0x02D6	; 0x8002d6 <Relative_Speed>
     372:	d0 90 d7 02 	lds	r13, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
     376:	e0 90 d8 02 	lds	r14, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
     37a:	f0 90 d9 02 	lds	r15, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
     37e:	c0 92 c6 02 	sts	0x02C6, r12	; 0x8002c6 <Relative_Speed_Prev>
     382:	d0 92 c7 02 	sts	0x02C7, r13	; 0x8002c7 <Relative_Speed_Prev+0x1>
     386:	e0 92 c8 02 	sts	0x02C8, r14	; 0x8002c8 <Relative_Speed_Prev+0x2>
     38a:	f0 92 c9 02 	sts	0x02C9, r15	; 0x8002c9 <Relative_Speed_Prev+0x3>
     38e:	28 ee       	ldi	r18, 0xE8	; 232
     390:	36 ef       	ldi	r19, 0xF6	; 246
     392:	42 e1       	ldi	r20, 0x12	; 18
     394:	5d e3       	ldi	r21, 0x3D	; 61
     396:	c7 01       	movw	r24, r14
     398:	b6 01       	movw	r22, r12
     39a:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     39e:	26 e6       	ldi	r18, 0x66	; 102
     3a0:	36 e6       	ldi	r19, 0x66	; 102
     3a2:	46 e6       	ldi	r20, 0x66	; 102
     3a4:	50 e4       	ldi	r21, 0x40	; 64
     3a6:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     3aa:	9b 01       	movw	r18, r22
     3ac:	ac 01       	movw	r20, r24
     3ae:	6d ed       	ldi	r22, 0xDD	; 221
     3b0:	74 e2       	ldi	r23, 0x24	; 36
     3b2:	86 eb       	ldi	r24, 0xB6	; 182
     3b4:	9f e3       	ldi	r25, 0x3F	; 63
     3b6:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     3ba:	4b 01       	movw	r8, r22
     3bc:	5c 01       	movw	r10, r24
     3be:	24 e7       	ldi	r18, 0x74	; 116
     3c0:	34 e2       	ldi	r19, 0x24	; 36
     3c2:	47 e1       	ldi	r20, 0x17	; 23
     3c4:	5d e3       	ldi	r21, 0x3D	; 61
     3c6:	60 91 c2 02 	lds	r22, 0x02C2	; 0x8002c2 <Target_Veh_Accel>
     3ca:	70 91 c3 02 	lds	r23, 0x02C3	; 0x8002c3 <Target_Veh_Accel+0x1>
     3ce:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <Target_Veh_Accel+0x2>
     3d2:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <Target_Veh_Accel+0x3>
     3d6:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     3da:	9b 01       	movw	r18, r22
     3dc:	ac 01       	movw	r20, r24
     3de:	c5 01       	movw	r24, r10
     3e0:	b4 01       	movw	r22, r8
     3e2:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     3e6:	4b 01       	movw	r8, r22
     3e8:	5c 01       	movw	r10, r24
     3ea:	2d ec       	ldi	r18, 0xCD	; 205
     3ec:	3c ec       	ldi	r19, 0xCC	; 204
     3ee:	4c e0       	ldi	r20, 0x0C	; 12
     3f0:	50 e4       	ldi	r21, 0x40	; 64
     3f2:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     3f6:	18 16       	cp	r1, r24
     3f8:	9c f0       	brlt	.+38     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3fa:	2d ec       	ldi	r18, 0xCD	; 205
     3fc:	3c ec       	ldi	r19, 0xCC	; 204
     3fe:	4c e4       	ldi	r20, 0x4C	; 76
     400:	5e e3       	ldi	r21, 0x3E	; 62
     402:	c5 01       	movw	r24, r10
     404:	b4 01       	movw	r22, r8
     406:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     40a:	18 16       	cp	r1, r24
     40c:	8c f0       	brlt	.+34     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     40e:	9d ec       	ldi	r25, 0xCD	; 205
     410:	89 2e       	mov	r8, r25
     412:	9c ec       	ldi	r25, 0xCC	; 204
     414:	99 2e       	mov	r9, r25
     416:	9c e4       	ldi	r25, 0x4C	; 76
     418:	a9 2e       	mov	r10, r25
     41a:	9e e3       	ldi	r25, 0x3E	; 62
     41c:	b9 2e       	mov	r11, r25
     41e:	08 c0       	rjmp	.+16     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     420:	8d ec       	ldi	r24, 0xCD	; 205
     422:	88 2e       	mov	r8, r24
     424:	8c ec       	ldi	r24, 0xCC	; 204
     426:	98 2e       	mov	r9, r24
     428:	8c e0       	ldi	r24, 0x0C	; 12
     42a:	a8 2e       	mov	r10, r24
     42c:	80 e4       	ldi	r24, 0x40	; 64
     42e:	b8 2e       	mov	r11, r24
     430:	26 e6       	ldi	r18, 0x66	; 102
     432:	36 e6       	ldi	r19, 0x66	; 102
     434:	46 e6       	ldi	r20, 0x66	; 102
     436:	50 e4       	ldi	r21, 0x40	; 64
     438:	c3 01       	movw	r24, r6
     43a:	b2 01       	movw	r22, r4
     43c:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     440:	69 83       	std	Y+1, r22	; 0x01
     442:	7a 83       	std	Y+2, r23	; 0x02
     444:	8b 83       	std	Y+3, r24	; 0x03
     446:	9c 83       	std	Y+4, r25	; 0x04
     448:	a5 01       	movw	r20, r10
     44a:	94 01       	movw	r18, r8
     44c:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     450:	20 e0       	ldi	r18, 0x00	; 0
     452:	30 e0       	ldi	r19, 0x00	; 0
     454:	40 ea       	ldi	r20, 0xA0	; 160
     456:	50 e4       	ldi	r21, 0x40	; 64
     458:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     45c:	6d 83       	std	Y+5, r22	; 0x05
     45e:	7e 83       	std	Y+6, r23	; 0x06
     460:	8f 83       	std	Y+7, r24	; 0x07
     462:	98 87       	std	Y+8, r25	; 0x08
     464:	60 93 be 02 	sts	0x02BE, r22	; 0x8002be <Safety_Distance_VTH>
     468:	70 93 bf 02 	sts	0x02BF, r23	; 0x8002bf <Safety_Distance_VTH+0x1>
     46c:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <Safety_Distance_VTH+0x2>
     470:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <Safety_Distance_VTH+0x3>
     474:	dc 01       	movw	r26, r24
     476:	cb 01       	movw	r24, r22
     478:	80 93 aa 04 	sts	0x04AA, r24	; 0x8004aa <Safety_Distance>
     47c:	90 93 ab 04 	sts	0x04AB, r25	; 0x8004ab <Safety_Distance+0x1>
     480:	a0 93 ac 04 	sts	0x04AC, r26	; 0x8004ac <Safety_Distance+0x2>
     484:	b0 93 ad 04 	sts	0x04AD, r27	; 0x8004ad <Safety_Distance+0x3>
     488:	29 81       	ldd	r18, Y+1	; 0x01
     48a:	3a 81       	ldd	r19, Y+2	; 0x02
     48c:	4b 81       	ldd	r20, Y+3	; 0x03
     48e:	5c 81       	ldd	r21, Y+4	; 0x04
     490:	ca 01       	movw	r24, r20
     492:	b9 01       	movw	r22, r18
     494:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     498:	4b 01       	movw	r8, r22
     49a:	5c 01       	movw	r10, r24
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	40 e4       	ldi	r20, 0x40	; 64
     4a2:	51 e4       	ldi	r21, 0x41	; 65
     4a4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     4a8:	69 83       	std	Y+1, r22	; 0x01
     4aa:	7a 83       	std	Y+2, r23	; 0x02
     4ac:	8b 83       	std	Y+3, r24	; 0x03
     4ae:	9c 83       	std	Y+4, r25	; 0x04
     4b0:	60 93 9a 02 	sts	0x029A, r22	; 0x80029a <SafetyDistance_HalfBrake>
     4b4:	70 93 9b 02 	sts	0x029B, r23	; 0x80029b <SafetyDistance_HalfBrake+0x1>
     4b8:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <SafetyDistance_HalfBrake+0x2>
     4bc:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <SafetyDistance_HalfBrake+0x3>
     4c0:	20 e0       	ldi	r18, 0x00	; 0
     4c2:	30 e0       	ldi	r19, 0x00	; 0
     4c4:	40 e6       	ldi	r20, 0x60	; 96
     4c6:	51 e4       	ldi	r21, 0x41	; 65
     4c8:	c5 01       	movw	r24, r10
     4ca:	b4 01       	movw	r22, r8
     4cc:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     4d0:	69 87       	std	Y+9, r22	; 0x09
     4d2:	7a 87       	std	Y+10, r23	; 0x0a
     4d4:	8b 87       	std	Y+11, r24	; 0x0b
     4d6:	9c 87       	std	Y+12, r25	; 0x0c
     4d8:	60 93 92 02 	sts	0x0292, r22	; 0x800292 <SafetyDistance_HalfFullBrake>
     4dc:	70 93 93 02 	sts	0x0293, r23	; 0x800293 <SafetyDistance_HalfFullBrake+0x1>
     4e0:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <SafetyDistance_HalfFullBrake+0x2>
     4e4:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <SafetyDistance_HalfFullBrake+0x3>
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	40 e8       	ldi	r20, 0x80	; 128
     4ee:	5d e3       	ldi	r21, 0x3D	; 61
     4f0:	c5 01       	movw	r24, r10
     4f2:	b4 01       	movw	r22, r8
     4f4:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     4f8:	6d 87       	std	Y+13, r22	; 0x0d
     4fa:	7e 87       	std	Y+14, r23	; 0x0e
     4fc:	8f 87       	std	Y+15, r24	; 0x0f
     4fe:	98 8b       	std	Y+16, r25	; 0x10
     500:	60 93 96 02 	sts	0x0296, r22	; 0x800296 <SafetyDistance_FullBrake>
     504:	70 93 97 02 	sts	0x0297, r23	; 0x800297 <SafetyDistance_FullBrake+0x1>
     508:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <SafetyDistance_FullBrake+0x2>
     50c:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <SafetyDistance_FullBrake+0x3>
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	40 ec       	ldi	r20, 0xC0	; 192
     516:	50 e4       	ldi	r21, 0x40	; 64
     518:	c5 01       	movw	r24, r10
     51a:	b4 01       	movw	r22, r8
     51c:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     520:	69 8b       	std	Y+17, r22	; 0x11
     522:	7a 8b       	std	Y+18, r23	; 0x12
     524:	8b 8b       	std	Y+19, r24	; 0x13
     526:	9c 8b       	std	Y+20, r25	; 0x14
     528:	60 93 8e 02 	sts	0x028E, r22	; 0x80028e <SafetyDistance_AccDisabled>
     52c:	70 93 8f 02 	sts	0x028F, r23	; 0x80028f <SafetyDistance_AccDisabled+0x1>
     530:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <SafetyDistance_AccDisabled+0x2>
     534:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <SafetyDistance_AccDisabled+0x3>
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	40 ea       	ldi	r20, 0xA0	; 160
     53e:	50 e4       	ldi	r21, 0x40	; 64
     540:	c5 01       	movw	r24, r10
     542:	b4 01       	movw	r22, r8
     544:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     548:	6d 8b       	std	Y+21, r22	; 0x15
     54a:	7e 8b       	std	Y+22, r23	; 0x16
     54c:	8f 8b       	std	Y+23, r24	; 0x17
     54e:	98 8f       	std	Y+24, r25	; 0x18
     550:	60 93 8a 02 	sts	0x028A, r22	; 0x80028a <SafetyDistance_AccMin>
     554:	70 93 8b 02 	sts	0x028B, r23	; 0x80028b <SafetyDistance_AccMin+0x1>
     558:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <SafetyDistance_AccMin+0x2>
     55c:	90 93 8d 02 	sts	0x028D, r25	; 0x80028d <SafetyDistance_AccMin+0x3>
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	40 e8       	ldi	r20, 0x80	; 128
     566:	5e e3       	ldi	r21, 0x3E	; 62
     568:	c5 01       	movw	r24, r10
     56a:	b4 01       	movw	r22, r8
     56c:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     570:	69 8f       	std	Y+25, r22	; 0x19
     572:	7a 8f       	std	Y+26, r23	; 0x1a
     574:	8b 8f       	std	Y+27, r24	; 0x1b
     576:	9c 8f       	std	Y+28, r25	; 0x1c
     578:	60 93 86 02 	sts	0x0286, r22	; 0x800286 <__data_end>
     57c:	70 93 87 02 	sts	0x0287, r23	; 0x800287 <__data_end+0x1>
     580:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <__data_end+0x2>
     584:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <__data_end+0x3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	a9 01       	movw	r20, r18
     58e:	c7 01       	movw	r24, r14
     590:	b6 01       	movw	r22, r12
     592:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     596:	88 23       	and	r24, r24
     598:	09 f4       	brne	.+2      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     59a:	8f c0       	rjmp	.+286    	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
     59c:	26 e6       	ldi	r18, 0x66	; 102
     59e:	36 e6       	ldi	r19, 0x66	; 102
     5a0:	46 e6       	ldi	r20, 0x66	; 102
     5a2:	50 e4       	ldi	r21, 0x40	; 64
     5a4:	c7 01       	movw	r24, r14
     5a6:	b6 01       	movw	r22, r12
     5a8:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     5ac:	4b 01       	movw	r8, r22
     5ae:	5c 01       	movw	r10, r24
     5b0:	9b 01       	movw	r18, r22
     5b2:	ac 01       	movw	r20, r24
     5b4:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     5b8:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     5bc:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     5c0:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     5c4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     5c8:	60 93 ba 02 	sts	0x02BA, r22	; 0x8002ba <TTC>
     5cc:	70 93 bb 02 	sts	0x02BB, r23	; 0x8002bb <TTC+0x1>
     5d0:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <TTC+0x2>
     5d4:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <TTC+0x3>
     5d8:	a5 01       	movw	r20, r10
     5da:	94 01       	movw	r18, r8
     5dc:	69 81       	ldd	r22, Y+1	; 0x01
     5de:	7a 81       	ldd	r23, Y+2	; 0x02
     5e0:	8b 81       	ldd	r24, Y+3	; 0x03
     5e2:	9c 81       	ldd	r25, Y+4	; 0x04
     5e4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     5e8:	60 93 b6 02 	sts	0x02B6, r22	; 0x8002b6 <TTC_HalfBrake>
     5ec:	70 93 b7 02 	sts	0x02B7, r23	; 0x8002b7 <TTC_HalfBrake+0x1>
     5f0:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <TTC_HalfBrake+0x2>
     5f4:	90 93 b9 02 	sts	0x02B9, r25	; 0x8002b9 <TTC_HalfBrake+0x3>
     5f8:	a5 01       	movw	r20, r10
     5fa:	94 01       	movw	r18, r8
     5fc:	69 85       	ldd	r22, Y+9	; 0x09
     5fe:	7a 85       	ldd	r23, Y+10	; 0x0a
     600:	8b 85       	ldd	r24, Y+11	; 0x0b
     602:	9c 85       	ldd	r25, Y+12	; 0x0c
     604:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     608:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <TTC_HalfFullBrake>
     60c:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <TTC_HalfFullBrake+0x1>
     610:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     614:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     618:	a5 01       	movw	r20, r10
     61a:	94 01       	movw	r18, r8
     61c:	6d 85       	ldd	r22, Y+13	; 0x0d
     61e:	7e 85       	ldd	r23, Y+14	; 0x0e
     620:	8f 85       	ldd	r24, Y+15	; 0x0f
     622:	98 89       	ldd	r25, Y+16	; 0x10
     624:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     628:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <TTC_FullBrake>
     62c:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <TTC_FullBrake+0x1>
     630:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <TTC_FullBrake+0x2>
     634:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <TTC_FullBrake+0x3>
     638:	a5 01       	movw	r20, r10
     63a:	94 01       	movw	r18, r8
     63c:	69 89       	ldd	r22, Y+17	; 0x11
     63e:	7a 89       	ldd	r23, Y+18	; 0x12
     640:	8b 89       	ldd	r24, Y+19	; 0x13
     642:	9c 89       	ldd	r25, Y+20	; 0x14
     644:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     648:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <TTC_AccDisabled>
     64c:	70 93 a7 02 	sts	0x02A7, r23	; 0x8002a7 <TTC_AccDisabled+0x1>
     650:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <TTC_AccDisabled+0x2>
     654:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <TTC_AccDisabled+0x3>
     658:	a5 01       	movw	r20, r10
     65a:	94 01       	movw	r18, r8
     65c:	6d 89       	ldd	r22, Y+21	; 0x15
     65e:	7e 89       	ldd	r23, Y+22	; 0x16
     660:	8f 89       	ldd	r24, Y+23	; 0x17
     662:	98 8d       	ldd	r25, Y+24	; 0x18
     664:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     668:	60 93 a2 02 	sts	0x02A2, r22	; 0x8002a2 <TTC_AccMin>
     66c:	70 93 a3 02 	sts	0x02A3, r23	; 0x8002a3 <TTC_AccMin+0x1>
     670:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <TTC_AccMin+0x2>
     674:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <TTC_AccMin+0x3>
     678:	a5 01       	movw	r20, r10
     67a:	94 01       	movw	r18, r8
     67c:	69 8d       	ldd	r22, Y+25	; 0x19
     67e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     680:	8b 8d       	ldd	r24, Y+27	; 0x1b
     682:	9c 8d       	ldd	r25, Y+28	; 0x1c
     684:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     688:	60 93 9e 02 	sts	0x029E, r22	; 0x80029e <TTC_AccMax>
     68c:	70 93 9f 02 	sts	0x029F, r23	; 0x80029f <TTC_AccMax+0x1>
     690:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <TTC_AccMax+0x2>
     694:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <TTC_AccMax+0x3>
     698:	a5 01       	movw	r20, r10
     69a:	94 01       	movw	r18, r8
     69c:	6d 81       	ldd	r22, Y+5	; 0x05
     69e:	7e 81       	ldd	r23, Y+6	; 0x06
     6a0:	8f 81       	ldd	r24, Y+7	; 0x07
     6a2:	98 85       	ldd	r25, Y+8	; 0x08
     6a4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     6a8:	60 93 aa 02 	sts	0x02AA, r22	; 0x8002aa <TTC_SafetyDistMin>
     6ac:	70 93 ab 02 	sts	0x02AB, r23	; 0x8002ab <TTC_SafetyDistMin+0x1>
     6b0:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <TTC_SafetyDistMin+0x2>
     6b4:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <TTC_SafetyDistMin+0x3>
     6b8:	44 c0       	rjmp	.+136    	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
     6ba:	8f ef       	ldi	r24, 0xFF	; 255
     6bc:	9f ef       	ldi	r25, 0xFF	; 255
     6be:	af e7       	ldi	r26, 0x7F	; 127
     6c0:	bf e7       	ldi	r27, 0x7F	; 127
     6c2:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <TTC>
     6c6:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <TTC+0x1>
     6ca:	a0 93 bc 02 	sts	0x02BC, r26	; 0x8002bc <TTC+0x2>
     6ce:	b0 93 bd 02 	sts	0x02BD, r27	; 0x8002bd <TTC+0x3>
     6d2:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <TTC_HalfBrake>
     6d6:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <TTC_HalfBrake+0x1>
     6da:	a0 93 b8 02 	sts	0x02B8, r26	; 0x8002b8 <TTC_HalfBrake+0x2>
     6de:	b0 93 b9 02 	sts	0x02B9, r27	; 0x8002b9 <TTC_HalfBrake+0x3>
     6e2:	80 93 ae 02 	sts	0x02AE, r24	; 0x8002ae <TTC_HalfFullBrake>
     6e6:	90 93 af 02 	sts	0x02AF, r25	; 0x8002af <TTC_HalfFullBrake+0x1>
     6ea:	a0 93 b0 02 	sts	0x02B0, r26	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     6ee:	b0 93 b1 02 	sts	0x02B1, r27	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     6f2:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <TTC_FullBrake>
     6f6:	90 93 b3 02 	sts	0x02B3, r25	; 0x8002b3 <TTC_FullBrake+0x1>
     6fa:	a0 93 b4 02 	sts	0x02B4, r26	; 0x8002b4 <TTC_FullBrake+0x2>
     6fe:	b0 93 b5 02 	sts	0x02B5, r27	; 0x8002b5 <TTC_FullBrake+0x3>
     702:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <TTC_AccDisabled>
     706:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <TTC_AccDisabled+0x1>
     70a:	a0 93 a8 02 	sts	0x02A8, r26	; 0x8002a8 <TTC_AccDisabled+0x2>
     70e:	b0 93 a9 02 	sts	0x02A9, r27	; 0x8002a9 <TTC_AccDisabled+0x3>
     712:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <TTC_AccMin>
     716:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <TTC_AccMin+0x1>
     71a:	a0 93 a4 02 	sts	0x02A4, r26	; 0x8002a4 <TTC_AccMin+0x2>
     71e:	b0 93 a5 02 	sts	0x02A5, r27	; 0x8002a5 <TTC_AccMin+0x3>
     722:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <TTC_AccMax>
     726:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <TTC_AccMax+0x1>
     72a:	a0 93 a0 02 	sts	0x02A0, r26	; 0x8002a0 <TTC_AccMax+0x2>
     72e:	b0 93 a1 02 	sts	0x02A1, r27	; 0x8002a1 <TTC_AccMax+0x3>
     732:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <TTC_SafetyDistMin>
     736:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <TTC_SafetyDistMin+0x1>
     73a:	a0 93 ac 02 	sts	0x02AC, r26	; 0x8002ac <TTC_SafetyDistMin+0x2>
     73e:	b0 93 ad 02 	sts	0x02AD, r27	; 0x8002ad <TTC_SafetyDistMin+0x3>
     742:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     746:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     74a:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     74e:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     752:	20 e0       	ldi	r18, 0x00	; 0
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	a9 01       	movw	r20, r18
     758:	c7 01       	movw	r24, r14
     75a:	b6 01       	movw	r22, r12
     75c:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     760:	18 16       	cp	r1, r24
     762:	ac f4       	brge	.+42     	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     764:	20 91 b2 02 	lds	r18, 0x02B2	; 0x8002b2 <TTC_FullBrake>
     768:	30 91 b3 02 	lds	r19, 0x02B3	; 0x8002b3 <TTC_FullBrake+0x1>
     76c:	40 91 b4 02 	lds	r20, 0x02B4	; 0x8002b4 <TTC_FullBrake+0x2>
     770:	50 91 b5 02 	lds	r21, 0x02B5	; 0x8002b5 <TTC_FullBrake+0x3>
     774:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     778:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     77c:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     780:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     784:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     788:	18 16       	cp	r1, r24
     78a:	6c f1       	brlt	.+90     	; 0x7e6 <__LOCK_REGION_LENGTH__+0x3e6>
     78c:	1f c0       	rjmp	.+62     	; 0x7cc <__LOCK_REGION_LENGTH__+0x3cc>
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	a9 01       	movw	r20, r18
     794:	c7 01       	movw	r24, r14
     796:	b6 01       	movw	r22, r12
     798:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     79c:	18 16       	cp	r1, r24
     79e:	0c f4       	brge	.+2      	; 0x7a2 <__LOCK_REGION_LENGTH__+0x3a2>
     7a0:	29 c1       	rjmp	.+594    	; 0x9f4 <__stack+0xf5>
     7a2:	20 91 96 02 	lds	r18, 0x0296	; 0x800296 <SafetyDistance_FullBrake>
     7a6:	30 91 97 02 	lds	r19, 0x0297	; 0x800297 <SafetyDistance_FullBrake+0x1>
     7aa:	40 91 98 02 	lds	r20, 0x0298	; 0x800298 <SafetyDistance_FullBrake+0x2>
     7ae:	50 91 99 02 	lds	r21, 0x0299	; 0x800299 <SafetyDistance_FullBrake+0x3>
     7b2:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     7b6:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     7ba:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     7be:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     7c2:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     7c6:	18 16       	cp	r1, r24
     7c8:	0c f4       	brge	.+2      	; 0x7cc <__LOCK_REGION_LENGTH__+0x3cc>
     7ca:	f4 c1       	rjmp	.+1000   	; 0xbb4 <__stack+0x2b5>
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	a0 e0       	ldi	r26, 0x00	; 0
     7d2:	b1 e4       	ldi	r27, 0x41	; 65
     7d4:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     7d8:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     7dc:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     7e0:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     7e4:	4b c0       	rjmp	.+150    	; 0x87c <__LOCK_REGION_LENGTH__+0x47c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	a9 01       	movw	r20, r18
     7ec:	c7 01       	movw	r24, r14
     7ee:	b6 01       	movw	r22, r12
     7f0:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     7f4:	18 16       	cp	r1, r24
     7f6:	ac f6       	brge	.-86     	; 0x7a2 <__LOCK_REGION_LENGTH__+0x3a2>
     7f8:	20 91 ae 02 	lds	r18, 0x02AE	; 0x8002ae <TTC_HalfFullBrake>
     7fc:	30 91 af 02 	lds	r19, 0x02AF	; 0x8002af <TTC_HalfFullBrake+0x1>
     800:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <TTC_HalfFullBrake+0x2>
     804:	50 91 b1 02 	lds	r21, 0x02B1	; 0x8002b1 <TTC_HalfFullBrake+0x3>
     808:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     80c:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     810:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     814:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     818:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     81c:	18 16       	cp	r1, r24
     81e:	8c f1       	brlt	.+98     	; 0x882 <__LOCK_REGION_LENGTH__+0x482>
     820:	26 e6       	ldi	r18, 0x66	; 102
     822:	36 e6       	ldi	r19, 0x66	; 102
     824:	46 e6       	ldi	r20, 0x66	; 102
     826:	50 e4       	ldi	r21, 0x40	; 64
     828:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     82c:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     830:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     834:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     838:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     83c:	9b 01       	movw	r18, r22
     83e:	ac 01       	movw	r20, r24
     840:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     844:	6b 01       	movw	r12, r22
     846:	7c 01       	movw	r14, r24
     848:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     84c:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     850:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     854:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     858:	9b 01       	movw	r18, r22
     85a:	ac 01       	movw	r20, r24
     85c:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     860:	9b 01       	movw	r18, r22
     862:	ac 01       	movw	r20, r24
     864:	c7 01       	movw	r24, r14
     866:	b6 01       	movw	r22, r12
     868:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     86c:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     870:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     874:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     878:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     87c:	81 e0       	ldi	r24, 0x01	; 1
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	38 c1       	rjmp	.+624    	; 0xaf2 <__stack+0x1f3>
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	a9 01       	movw	r20, r18
     888:	c7 01       	movw	r24, r14
     88a:	b6 01       	movw	r22, r12
     88c:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     890:	18 16       	cp	r1, r24
     892:	0c f0       	brlt	.+2      	; 0x896 <__LOCK_REGION_LENGTH__+0x496>
     894:	99 c1       	rjmp	.+818    	; 0xbc8 <__stack+0x2c9>
     896:	20 91 b6 02 	lds	r18, 0x02B6	; 0x8002b6 <TTC_HalfBrake>
     89a:	30 91 b7 02 	lds	r19, 0x02B7	; 0x8002b7 <TTC_HalfBrake+0x1>
     89e:	40 91 b8 02 	lds	r20, 0x02B8	; 0x8002b8 <TTC_HalfBrake+0x2>
     8a2:	50 91 b9 02 	lds	r21, 0x02B9	; 0x8002b9 <TTC_HalfBrake+0x3>
     8a6:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     8aa:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     8ae:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     8b2:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     8b6:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     8ba:	18 16       	cp	r1, r24
     8bc:	0c f0       	brlt	.+2      	; 0x8c0 <__LOCK_REGION_LENGTH__+0x4c0>
     8be:	b7 c1       	rjmp	.+878    	; 0xc2e <__stack+0x32f>
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	a9 01       	movw	r20, r18
     8c6:	c7 01       	movw	r24, r14
     8c8:	b6 01       	movw	r22, r12
     8ca:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     8ce:	18 16       	cp	r1, r24
     8d0:	0c f0       	brlt	.+2      	; 0x8d4 <__LOCK_REGION_LENGTH__+0x4d4>
     8d2:	99 c1       	rjmp	.+818    	; 0xc06 <__stack+0x307>
     8d4:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <TTC_SafetyDistMin>
     8d8:	30 91 ab 02 	lds	r19, 0x02AB	; 0x8002ab <TTC_SafetyDistMin+0x1>
     8dc:	40 91 ac 02 	lds	r20, 0x02AC	; 0x8002ac <TTC_SafetyDistMin+0x2>
     8e0:	50 91 ad 02 	lds	r21, 0x02AD	; 0x8002ad <TTC_SafetyDistMin+0x3>
     8e4:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     8e8:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     8ec:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     8f0:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     8f4:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     8f8:	18 16       	cp	r1, r24
     8fa:	0c f0       	brlt	.+2      	; 0x8fe <__LOCK_REGION_LENGTH__+0x4fe>
     8fc:	e7 c1       	rjmp	.+974    	; 0xccc <__stack+0x3cd>
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	a9 01       	movw	r20, r18
     904:	c7 01       	movw	r24, r14
     906:	b6 01       	movw	r22, r12
     908:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     90c:	18 16       	cp	r1, r24
     90e:	0c f0       	brlt	.+2      	; 0x912 <__stack+0x13>
     910:	c9 c1       	rjmp	.+914    	; 0xca4 <__stack+0x3a5>
     912:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <TTC_AccDisabled>
     916:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <TTC_AccDisabled+0x1>
     91a:	40 91 a8 02 	lds	r20, 0x02A8	; 0x8002a8 <TTC_AccDisabled+0x2>
     91e:	50 91 a9 02 	lds	r21, 0x02A9	; 0x8002a9 <TTC_AccDisabled+0x3>
     922:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     926:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     92a:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     92e:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     932:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     936:	18 16       	cp	r1, r24
     938:	0c f0       	brlt	.+2      	; 0x93c <__stack+0x3d>
     93a:	17 c2       	rjmp	.+1070   	; 0xd6a <__stack+0x46b>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	a9 01       	movw	r20, r18
     942:	c7 01       	movw	r24, r14
     944:	b6 01       	movw	r22, r12
     946:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     94a:	18 16       	cp	r1, r24
     94c:	0c f0       	brlt	.+2      	; 0x950 <__stack+0x51>
     94e:	f9 c1       	rjmp	.+1010   	; 0xd42 <__stack+0x443>
     950:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <TTC_AccMin>
     954:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <TTC_AccMin+0x1>
     958:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <TTC_AccMin+0x2>
     95c:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <TTC_AccMin+0x3>
     960:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     964:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     968:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     96c:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     970:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     974:	18 16       	cp	r1, r24
     976:	0c f0       	brlt	.+2      	; 0x97a <__stack+0x7b>
     978:	1c c2       	rjmp	.+1080   	; 0xdb2 <__stack+0x4b3>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	a9 01       	movw	r20, r18
     980:	c7 01       	movw	r24, r14
     982:	b6 01       	movw	r22, r12
     984:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     988:	18 16       	cp	r1, r24
     98a:	0c f0       	brlt	.+2      	; 0x98e <__stack+0x8f>
     98c:	fd c1       	rjmp	.+1018   	; 0xd88 <__stack+0x489>
     98e:	20 91 9e 02 	lds	r18, 0x029E	; 0x80029e <TTC_AccMax>
     992:	30 91 9f 02 	lds	r19, 0x029F	; 0x80029f <TTC_AccMax+0x1>
     996:	40 91 a0 02 	lds	r20, 0x02A0	; 0x8002a0 <TTC_AccMax+0x2>
     99a:	50 91 a1 02 	lds	r21, 0x02A1	; 0x8002a1 <TTC_AccMax+0x3>
     99e:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     9a2:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     9a6:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     9aa:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     9ae:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     9b2:	18 16       	cp	r1, r24
     9b4:	0c f0       	brlt	.+2      	; 0x9b8 <__stack+0xb9>
     9b6:	b1 c2       	rjmp	.+1378   	; 0xf1a <__stack+0x61b>
     9b8:	20 e0       	ldi	r18, 0x00	; 0
     9ba:	30 e0       	ldi	r19, 0x00	; 0
     9bc:	a9 01       	movw	r20, r18
     9be:	c7 01       	movw	r24, r14
     9c0:	b6 01       	movw	r22, r12
     9c2:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     9c6:	18 16       	cp	r1, r24
     9c8:	0c f0       	brlt	.+2      	; 0x9cc <__stack+0xcd>
     9ca:	41 c2       	rjmp	.+1154   	; 0xe4e <__stack+0x54f>
     9cc:	20 91 9e 02 	lds	r18, 0x029E	; 0x80029e <TTC_AccMax>
     9d0:	30 91 9f 02 	lds	r19, 0x029F	; 0x80029f <TTC_AccMax+0x1>
     9d4:	40 91 a0 02 	lds	r20, 0x02A0	; 0x8002a0 <TTC_AccMax+0x2>
     9d8:	50 91 a1 02 	lds	r21, 0x02A1	; 0x8002a1 <TTC_AccMax+0x3>
     9dc:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <TTC>
     9e0:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <TTC+0x1>
     9e4:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <TTC+0x2>
     9e8:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <TTC+0x3>
     9ec:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     9f0:	18 16       	cp	r1, r24
     9f2:	fc f0       	brlt	.+62     	; 0xa32 <__stack+0x133>
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	a9 01       	movw	r20, r18
     9fa:	c7 01       	movw	r24, r14
     9fc:	b6 01       	movw	r22, r12
     9fe:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     a02:	18 16       	cp	r1, r24
     a04:	0c f4       	brge	.+2      	; 0xa08 <__stack+0x109>
     a06:	99 c0       	rjmp	.+306    	; 0xb3a <__stack+0x23b>
     a08:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <__data_end>
     a0c:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <__data_end+0x1>
     a10:	40 91 88 02 	lds	r20, 0x0288	; 0x800288 <__data_end+0x2>
     a14:	50 91 89 02 	lds	r21, 0x0289	; 0x800289 <__data_end+0x3>
     a18:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     a1c:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     a20:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     a24:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     a28:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     a2c:	18 16       	cp	r1, r24
     a2e:	0c f0       	brlt	.+2      	; 0xa32 <__stack+0x133>
     a30:	84 c0       	rjmp	.+264    	; 0xb3a <__stack+0x23b>
     a32:	c0 90 be 04 	lds	r12, 0x04BE	; 0x8004be <Speed_SetbyDriver>
     a36:	d0 90 bf 04 	lds	r13, 0x04BF	; 0x8004bf <Speed_SetbyDriver+0x1>
     a3a:	e0 90 c0 04 	lds	r14, 0x04C0	; 0x8004c0 <Speed_SetbyDriver+0x2>
     a3e:	f0 90 c1 04 	lds	r15, 0x04C1	; 0x8004c1 <Speed_SetbyDriver+0x3>
     a42:	a3 01       	movw	r20, r6
     a44:	92 01       	movw	r18, r4
     a46:	c7 01       	movw	r24, r14
     a48:	b6 01       	movw	r22, r12
     a4a:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     a4e:	a3 01       	movw	r20, r6
     a50:	92 01       	movw	r18, r4
     a52:	18 16       	cp	r1, r24
     a54:	64 f5       	brge	.+88     	; 0xaae <__stack+0x1af>
     a56:	c7 01       	movw	r24, r14
     a58:	b6 01       	movw	r22, r12
     a5a:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     a5e:	6b 01       	movw	r12, r22
     a60:	7c 01       	movw	r14, r24
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 e4       	ldi	r20, 0x40	; 64
     a68:	50 e4       	ldi	r21, 0x40	; 64
     a6a:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     a6e:	18 16       	cp	r1, r24
     a70:	6c f4       	brge	.+26     	; 0xa8c <__stack+0x18d>
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	a0 e4       	ldi	r26, 0x40	; 64
     a78:	b0 e4       	ldi	r27, 0x40	; 64
     a7a:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     a7e:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     a82:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     a86:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     a8a:	08 c0       	rjmp	.+16     	; 0xa9c <__stack+0x19d>
     a8c:	c0 92 d1 02 	sts	0x02D1, r12	; 0x8002d1 <Output_Acceleration>
     a90:	d0 92 d2 02 	sts	0x02D2, r13	; 0x8002d2 <Output_Acceleration+0x1>
     a94:	e0 92 d3 02 	sts	0x02D3, r14	; 0x8002d3 <Output_Acceleration+0x2>
     a98:	f0 92 d4 02 	sts	0x02D4, r15	; 0x8002d4 <Output_Acceleration+0x3>
     a9c:	85 e0       	ldi	r24, 0x05	; 5
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     aa4:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	42 c0       	rjmp	.+132    	; 0xb32 <__stack+0x233>
     aae:	c7 01       	movw	r24, r14
     ab0:	b6 01       	movw	r22, r12
     ab2:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     ab6:	87 ff       	sbrs	r24, 7
     ab8:	34 c0       	rjmp	.+104    	; 0xb22 <__stack+0x223>
     aba:	a3 01       	movw	r20, r6
     abc:	92 01       	movw	r18, r4
     abe:	c7 01       	movw	r24, r14
     ac0:	b6 01       	movw	r22, r12
     ac2:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	40 e4       	ldi	r20, 0x40	; 64
     acc:	50 ec       	ldi	r21, 0xC0	; 192
     ace:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     ad2:	87 ff       	sbrs	r24, 7
     ad4:	17 c0       	rjmp	.+46     	; 0xb04 <__stack+0x205>
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	a0 e4       	ldi	r26, 0x40	; 64
     adc:	b0 e4       	ldi	r27, 0x40	; 64
     ade:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     ae2:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     ae6:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     aea:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     aee:	85 e0       	ldi	r24, 0x05	; 5
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     af6:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     afa:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Status_Dec_Inc+0x1>
     afe:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Status_Dec_Inc>
     b02:	1b c0       	rjmp	.+54     	; 0xb3a <__stack+0x23b>
     b04:	a7 01       	movw	r20, r14
     b06:	96 01       	movw	r18, r12
     b08:	c3 01       	movw	r24, r6
     b0a:	b2 01       	movw	r22, r4
     b0c:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     b10:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     b14:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     b18:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     b1c:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     b20:	e6 cf       	rjmp	.-52     	; 0xaee <__stack+0x1ef>
     b22:	85 e0       	ldi	r24, 0x05	; 5
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	90 93 d0 02 	sts	0x02D0, r25	; 0x8002d0 <Status_Accel_Decel+0x1>
     b2a:	80 93 cf 02 	sts	0x02CF, r24	; 0x8002cf <Status_Accel_Decel>
     b2e:	82 e0       	ldi	r24, 0x02	; 2
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     b36:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     b3a:	6c 96       	adiw	r28, 0x1c	; 28
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	ff 90       	pop	r15
     b4c:	ef 90       	pop	r14
     b4e:	df 90       	pop	r13
     b50:	cf 90       	pop	r12
     b52:	bf 90       	pop	r11
     b54:	af 90       	pop	r10
     b56:	9f 90       	pop	r9
     b58:	8f 90       	pop	r8
     b5a:	7f 90       	pop	r7
     b5c:	6f 90       	pop	r6
     b5e:	5f 90       	pop	r5
     b60:	4f 90       	pop	r4
     b62:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <Check_Enable_of_SubFeatures>
     b66:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <Output_Acceleration>
     b6a:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <Output_Acceleration+0x1>
     b6e:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <Output_Acceleration+0x2>
     b72:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <Output_Acceleration+0x3>
     b76:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     b7a:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     b7e:	82 e0       	ldi	r24, 0x02	; 2
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Status_Dec_Inc+0x1>
     b86:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Status_Dec_Inc>
     b8a:	6c 96       	adiw	r28, 0x1c	; 28
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	de bf       	out	0x3e, r29	; 62
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	cd bf       	out	0x3d, r28	; 61
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	ff 90       	pop	r15
     b9c:	ef 90       	pop	r14
     b9e:	df 90       	pop	r13
     ba0:	cf 90       	pop	r12
     ba2:	bf 90       	pop	r11
     ba4:	af 90       	pop	r10
     ba6:	9f 90       	pop	r9
     ba8:	8f 90       	pop	r8
     baa:	7f 90       	pop	r7
     bac:	6f 90       	pop	r6
     bae:	5f 90       	pop	r5
     bb0:	4f 90       	pop	r4
     bb2:	08 95       	ret
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	a9 01       	movw	r20, r18
     bba:	c7 01       	movw	r24, r14
     bbc:	b6 01       	movw	r22, r12
     bbe:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     bc2:	18 16       	cp	r1, r24
     bc4:	0c f4       	brge	.+2      	; 0xbc8 <__stack+0x2c9>
     bc6:	18 ce       	rjmp	.-976    	; 0x7f8 <__LOCK_REGION_LENGTH__+0x3f8>
     bc8:	20 91 92 02 	lds	r18, 0x0292	; 0x800292 <SafetyDistance_HalfFullBrake>
     bcc:	30 91 93 02 	lds	r19, 0x0293	; 0x800293 <SafetyDistance_HalfFullBrake+0x1>
     bd0:	40 91 94 02 	lds	r20, 0x0294	; 0x800294 <SafetyDistance_HalfFullBrake+0x2>
     bd4:	50 91 95 02 	lds	r21, 0x0295	; 0x800295 <SafetyDistance_HalfFullBrake+0x3>
     bd8:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     bdc:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     be0:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     be4:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     be8:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     bec:	18 16       	cp	r1, r24
     bee:	0c f0       	brlt	.+2      	; 0xbf2 <__stack+0x2f3>
     bf0:	17 ce       	rjmp	.-978    	; 0x820 <__LOCK_REGION_LENGTH__+0x420>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	a9 01       	movw	r20, r18
     bf8:	c7 01       	movw	r24, r14
     bfa:	b6 01       	movw	r22, r12
     bfc:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     c00:	18 16       	cp	r1, r24
     c02:	0c f4       	brge	.+2      	; 0xc06 <__stack+0x307>
     c04:	48 ce       	rjmp	.-880    	; 0x896 <__LOCK_REGION_LENGTH__+0x496>
     c06:	20 91 9a 02 	lds	r18, 0x029A	; 0x80029a <SafetyDistance_HalfBrake>
     c0a:	30 91 9b 02 	lds	r19, 0x029B	; 0x80029b <SafetyDistance_HalfBrake+0x1>
     c0e:	40 91 9c 02 	lds	r20, 0x029C	; 0x80029c <SafetyDistance_HalfBrake+0x2>
     c12:	50 91 9d 02 	lds	r21, 0x029D	; 0x80029d <SafetyDistance_HalfBrake+0x3>
     c16:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     c1a:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     c1e:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     c22:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     c26:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     c2a:	18 16       	cp	r1, r24
     c2c:	8c f1       	brlt	.+98     	; 0xc90 <__stack+0x391>
     c2e:	26 e6       	ldi	r18, 0x66	; 102
     c30:	36 e6       	ldi	r19, 0x66	; 102
     c32:	46 e6       	ldi	r20, 0x66	; 102
     c34:	50 e4       	ldi	r21, 0x40	; 64
     c36:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     c3a:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     c3e:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     c42:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     c46:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     c4a:	9b 01       	movw	r18, r22
     c4c:	ac 01       	movw	r20, r24
     c4e:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     c52:	6b 01       	movw	r12, r22
     c54:	7c 01       	movw	r14, r24
     c56:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     c5a:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     c5e:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     c62:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     c66:	9b 01       	movw	r18, r22
     c68:	ac 01       	movw	r20, r24
     c6a:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     c6e:	9b 01       	movw	r18, r22
     c70:	ac 01       	movw	r20, r24
     c72:	c7 01       	movw	r24, r14
     c74:	b6 01       	movw	r22, r12
     c76:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     c7a:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     c7e:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     c82:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     c86:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     c8a:	82 e0       	ldi	r24, 0x02	; 2
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	31 cf       	rjmp	.-414    	; 0xaf2 <__stack+0x1f3>
     c90:	20 e0       	ldi	r18, 0x00	; 0
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	a9 01       	movw	r20, r18
     c96:	c7 01       	movw	r24, r14
     c98:	b6 01       	movw	r22, r12
     c9a:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     c9e:	18 16       	cp	r1, r24
     ca0:	0c f4       	brge	.+2      	; 0xca4 <__stack+0x3a5>
     ca2:	18 ce       	rjmp	.-976    	; 0x8d4 <__LOCK_REGION_LENGTH__+0x4d4>
     ca4:	20 91 aa 04 	lds	r18, 0x04AA	; 0x8004aa <Safety_Distance>
     ca8:	30 91 ab 04 	lds	r19, 0x04AB	; 0x8004ab <Safety_Distance+0x1>
     cac:	40 91 ac 04 	lds	r20, 0x04AC	; 0x8004ac <Safety_Distance+0x2>
     cb0:	50 91 ad 04 	lds	r21, 0x04AD	; 0x8004ad <Safety_Distance+0x3>
     cb4:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     cb8:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     cbc:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     cc0:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     cc4:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     cc8:	18 16       	cp	r1, r24
     cca:	8c f1       	brlt	.+98     	; 0xd2e <__stack+0x42f>
     ccc:	26 e6       	ldi	r18, 0x66	; 102
     cce:	36 e6       	ldi	r19, 0x66	; 102
     cd0:	46 e6       	ldi	r20, 0x66	; 102
     cd2:	50 e4       	ldi	r21, 0x40	; 64
     cd4:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     cd8:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     cdc:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     ce0:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     ce4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     ce8:	9b 01       	movw	r18, r22
     cea:	ac 01       	movw	r20, r24
     cec:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     cf0:	6b 01       	movw	r12, r22
     cf2:	7c 01       	movw	r14, r24
     cf4:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     cf8:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     cfc:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     d00:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     d04:	9b 01       	movw	r18, r22
     d06:	ac 01       	movw	r20, r24
     d08:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     d0c:	9b 01       	movw	r18, r22
     d0e:	ac 01       	movw	r20, r24
     d10:	c7 01       	movw	r24, r14
     d12:	b6 01       	movw	r22, r12
     d14:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     d18:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     d1c:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     d20:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     d24:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     d28:	83 e0       	ldi	r24, 0x03	; 3
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	e2 ce       	rjmp	.-572    	; 0xaf2 <__stack+0x1f3>
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	a9 01       	movw	r20, r18
     d34:	c7 01       	movw	r24, r14
     d36:	b6 01       	movw	r22, r12
     d38:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     d3c:	18 16       	cp	r1, r24
     d3e:	0c f4       	brge	.+2      	; 0xd42 <__stack+0x443>
     d40:	e8 cd       	rjmp	.-1072   	; 0x912 <__stack+0x13>
     d42:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <SafetyDistance_AccDisabled>
     d46:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <SafetyDistance_AccDisabled+0x1>
     d4a:	40 91 90 02 	lds	r20, 0x0290	; 0x800290 <SafetyDistance_AccDisabled+0x2>
     d4e:	50 91 91 02 	lds	r21, 0x0291	; 0x800291 <SafetyDistance_AccDisabled+0x3>
     d52:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     d56:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     d5a:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     d5e:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     d62:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     d66:	18 16       	cp	r1, r24
     d68:	2c f0       	brlt	.+10     	; 0xd74 <__stack+0x475>
     d6a:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <Status_Accel_Decel+0x1>
     d6e:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <Status_Accel_Decel>
     d72:	dd ce       	rjmp	.-582    	; 0xb2e <__stack+0x22f>
     d74:	20 e0       	ldi	r18, 0x00	; 0
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	a9 01       	movw	r20, r18
     d7a:	c7 01       	movw	r24, r14
     d7c:	b6 01       	movw	r22, r12
     d7e:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     d82:	18 16       	cp	r1, r24
     d84:	0c f4       	brge	.+2      	; 0xd88 <__stack+0x489>
     d86:	e4 cd       	rjmp	.-1080   	; 0x950 <__stack+0x51>
     d88:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     d8c:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     d90:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     d94:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     d98:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     d9c:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     da0:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     da4:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     da8:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     dac:	18 16       	cp	r1, r24
     dae:	0c f4       	brge	.+2      	; 0xdb2 <__stack+0x4b3>
     db0:	44 c0       	rjmp	.+136    	; 0xe3a <__stack+0x53b>
     db2:	26 e6       	ldi	r18, 0x66	; 102
     db4:	36 e6       	ldi	r19, 0x66	; 102
     db6:	46 e6       	ldi	r20, 0x66	; 102
     db8:	50 e4       	ldi	r21, 0x40	; 64
     dba:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
     dbe:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
     dc2:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
     dc6:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
     dca:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     dce:	9b 01       	movw	r18, r22
     dd0:	ac 01       	movw	r20, r24
     dd2:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     dd6:	6b 01       	movw	r12, r22
     dd8:	7c 01       	movw	r14, r24
     dda:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     dde:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     de2:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     de6:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     dea:	9b 01       	movw	r18, r22
     dec:	ac 01       	movw	r20, r24
     dee:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     df2:	9b 01       	movw	r18, r22
     df4:	ac 01       	movw	r20, r24
     df6:	c7 01       	movw	r24, r14
     df8:	b6 01       	movw	r22, r12
     dfa:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     dfe:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     e02:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     e06:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     e0a:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e4       	ldi	r20, 0x40	; 64
     e14:	50 e4       	ldi	r21, 0x40	; 64
     e16:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     e1a:	18 16       	cp	r1, r24
     e1c:	0c f0       	brlt	.+2      	; 0xe20 <__stack+0x521>
     e1e:	7a c0       	rjmp	.+244    	; 0xf14 <__stack+0x615>
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	a0 e4       	ldi	r26, 0x40	; 64
     e26:	b0 e4       	ldi	r27, 0x40	; 64
     e28:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     e2c:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     e30:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     e34:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     e38:	6d c0       	rjmp	.+218    	; 0xf14 <__stack+0x615>
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	a9 01       	movw	r20, r18
     e40:	c7 01       	movw	r24, r14
     e42:	b6 01       	movw	r22, r12
     e44:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     e48:	18 16       	cp	r1, r24
     e4a:	0c f4       	brge	.+2      	; 0xe4e <__stack+0x54f>
     e4c:	a0 cd       	rjmp	.-1216   	; 0x98e <__stack+0x8f>
     e4e:	80 91 ae 04 	lds	r24, 0x04AE	; 0x8004ae <Relative_Distance>
     e52:	90 91 af 04 	lds	r25, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     e56:	a0 91 b0 04 	lds	r26, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     e5a:	b0 91 b1 04 	lds	r27, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     e5e:	89 83       	std	Y+1, r24	; 0x01
     e60:	9a 83       	std	Y+2, r25	; 0x02
     e62:	ab 83       	std	Y+3, r26	; 0x03
     e64:	bc 83       	std	Y+4, r27	; 0x04
     e66:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <__data_end>
     e6a:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <__data_end+0x1>
     e6e:	40 91 88 02 	lds	r20, 0x0288	; 0x800288 <__data_end+0x2>
     e72:	50 91 89 02 	lds	r21, 0x0289	; 0x800289 <__data_end+0x3>
     e76:	bc 01       	movw	r22, r24
     e78:	cd 01       	movw	r24, r26
     e7a:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	a9 01       	movw	r20, r18
     e84:	18 16       	cp	r1, r24
     e86:	0c f4       	brge	.+2      	; 0xe8a <__stack+0x58b>
     e88:	b4 c0       	rjmp	.+360    	; 0xff2 <__stack+0x6f3>
     e8a:	c7 01       	movw	r24, r14
     e8c:	b6 01       	movw	r22, r12
     e8e:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     e92:	18 16       	cp	r1, r24
     e94:	0c f4       	brge	.+2      	; 0xe98 <__stack+0x599>
     e96:	41 c0       	rjmp	.+130    	; 0xf1a <__stack+0x61b>
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	a9 01       	movw	r20, r18
     e9e:	c7 01       	movw	r24, r14
     ea0:	b6 01       	movw	r22, r12
     ea2:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     ea6:	87 ff       	sbrs	r24, 7
     ea8:	a1 c0       	rjmp	.+322    	; 0xfec <__stack+0x6ed>
     eaa:	80 90 be 04 	lds	r8, 0x04BE	; 0x8004be <Speed_SetbyDriver>
     eae:	90 90 bf 04 	lds	r9, 0x04BF	; 0x8004bf <Speed_SetbyDriver+0x1>
     eb2:	a0 90 c0 04 	lds	r10, 0x04C0	; 0x8004c0 <Speed_SetbyDriver+0x2>
     eb6:	b0 90 c1 04 	lds	r11, 0x04C1	; 0x8004c1 <Speed_SetbyDriver+0x3>
     eba:	a3 01       	movw	r20, r6
     ebc:	92 01       	movw	r18, r4
     ebe:	c5 01       	movw	r24, r10
     ec0:	b4 01       	movw	r22, r8
     ec2:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     ec6:	18 16       	cp	r1, r24
     ec8:	0c f4       	brge	.+2      	; 0xecc <__stack+0x5cd>
     eca:	48 c0       	rjmp	.+144    	; 0xf5c <__stack+0x65d>
     ecc:	a3 01       	movw	r20, r6
     ece:	92 01       	movw	r18, r4
     ed0:	c5 01       	movw	r24, r10
     ed2:	b4 01       	movw	r22, r8
     ed4:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     ed8:	87 ff       	sbrs	r24, 7
     eda:	88 c0       	rjmp	.+272    	; 0xfec <__stack+0x6ed>
     edc:	a3 01       	movw	r20, r6
     ede:	92 01       	movw	r18, r4
     ee0:	c5 01       	movw	r24, r10
     ee2:	b4 01       	movw	r22, r8
     ee4:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	40 e4       	ldi	r20, 0x40	; 64
     eee:	50 ec       	ldi	r21, 0xC0	; 192
     ef0:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
     ef4:	87 fd       	sbrc	r24, 7
     ef6:	94 cf       	rjmp	.-216    	; 0xe20 <__stack+0x521>
     ef8:	a5 01       	movw	r20, r10
     efa:	94 01       	movw	r18, r8
     efc:	c3 01       	movw	r24, r6
     efe:	b2 01       	movw	r22, r4
     f00:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     f04:	60 93 d1 02 	sts	0x02D1, r22	; 0x8002d1 <Output_Acceleration>
     f08:	70 93 d2 02 	sts	0x02D2, r23	; 0x8002d2 <Output_Acceleration+0x1>
     f0c:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <Output_Acceleration+0x2>
     f10:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <Output_Acceleration+0x3>
     f14:	84 e0       	ldi	r24, 0x04	; 4
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	ec cd       	rjmp	.-1064   	; 0xaf2 <__stack+0x1f3>
     f1a:	26 e6       	ldi	r18, 0x66	; 102
     f1c:	36 e6       	ldi	r19, 0x66	; 102
     f1e:	46 e6       	ldi	r20, 0x66	; 102
     f20:	50 e4       	ldi	r21, 0x40	; 64
     f22:	c7 01       	movw	r24, r14
     f24:	b6 01       	movw	r22, r12
     f26:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     f2a:	9b 01       	movw	r18, r22
     f2c:	ac 01       	movw	r20, r24
     f2e:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     f32:	6b 01       	movw	r12, r22
     f34:	7c 01       	movw	r14, r24
     f36:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     f3a:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     f3e:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     f42:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     f46:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
     f4a:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
     f4e:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
     f52:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
     f56:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     f5a:	47 cf       	rjmp	.-370    	; 0xdea <__stack+0x4eb>
     f5c:	26 e6       	ldi	r18, 0x66	; 102
     f5e:	36 e6       	ldi	r19, 0x66	; 102
     f60:	46 e6       	ldi	r20, 0x66	; 102
     f62:	50 e4       	ldi	r21, 0x40	; 64
     f64:	c7 01       	movw	r24, r14
     f66:	b6 01       	movw	r22, r12
     f68:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     f6c:	9b 01       	movw	r18, r22
     f6e:	ac 01       	movw	r20, r24
     f70:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
     f74:	6b 01       	movw	r12, r22
     f76:	7c 01       	movw	r14, r24
     f78:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <SafetyDistance_AccMin>
     f7c:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <SafetyDistance_AccMin+0x1>
     f80:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <SafetyDistance_AccMin+0x2>
     f84:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <SafetyDistance_AccMin+0x3>
     f88:	69 81       	ldd	r22, Y+1	; 0x01
     f8a:	7a 81       	ldd	r23, Y+2	; 0x02
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	9c 81       	ldd	r25, Y+4	; 0x04
     f90:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
     f94:	9b 01       	movw	r18, r22
     f96:	ac 01       	movw	r20, r24
     f98:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
     f9c:	9b 01       	movw	r18, r22
     f9e:	ac 01       	movw	r20, r24
     fa0:	c7 01       	movw	r24, r14
     fa2:	b6 01       	movw	r22, r12
     fa4:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
     fa8:	6b 01       	movw	r12, r22
     faa:	7c 01       	movw	r14, r24
     fac:	20 e0       	ldi	r18, 0x00	; 0
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e4       	ldi	r20, 0x40	; 64
     fb2:	50 e4       	ldi	r21, 0x40	; 64
     fb4:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     fb8:	18 16       	cp	r1, r24
     fba:	4c f0       	brlt	.+18     	; 0xfce <__stack+0x6cf>
     fbc:	c0 92 d1 02 	sts	0x02D1, r12	; 0x8002d1 <Output_Acceleration>
     fc0:	d0 92 d2 02 	sts	0x02D2, r13	; 0x8002d2 <Output_Acceleration+0x1>
     fc4:	e0 92 d3 02 	sts	0x02D3, r14	; 0x8002d3 <Output_Acceleration+0x2>
     fc8:	f0 92 d4 02 	sts	0x02D4, r15	; 0x8002d4 <Output_Acceleration+0x3>
     fcc:	0c c0       	rjmp	.+24     	; 0xfe6 <__stack+0x6e7>
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	a0 e4       	ldi	r26, 0x40	; 64
     fd4:	b0 e4       	ldi	r27, 0x40	; 64
     fd6:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <Output_Acceleration>
     fda:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <Output_Acceleration+0x1>
     fde:	a0 93 d3 02 	sts	0x02D3, r26	; 0x8002d3 <Output_Acceleration+0x2>
     fe2:	b0 93 d4 02 	sts	0x02D4, r27	; 0x8002d4 <Output_Acceleration+0x3>
     fe6:	84 e0       	ldi	r24, 0x04	; 4
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	5a cd       	rjmp	.-1356   	; 0xaa0 <__stack+0x1a1>
     fec:	84 e0       	ldi	r24, 0x04	; 4
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	9a cd       	rjmp	.-1228   	; 0xb26 <__stack+0x227>
     ff2:	c7 01       	movw	r24, r14
     ff4:	b6 01       	movw	r22, r12
     ff6:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
     ffa:	18 16       	cp	r1, r24
     ffc:	0c f4       	brge	.+2      	; 0x1000 <__stack+0x701>
     ffe:	e6 cc       	rjmp	.-1588   	; 0x9cc <__stack+0xcd>
    1000:	03 cd       	rjmp	.-1530   	; 0xa08 <__stack+0x109>

00001002 <Calc_Relative_Speed>:
    1002:	cf 92       	push	r12
    1004:	df 92       	push	r13
    1006:	ef 92       	push	r14
    1008:	ff 92       	push	r15
    100a:	6b 01       	movw	r12, r22
    100c:	7c 01       	movw	r14, r24
    100e:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <skip_first_crs>
    1012:	81 11       	cpse	r24, r1
    1014:	04 c0       	rjmp	.+8      	; 0x101e <Calc_Relative_Speed+0x1c>
    1016:	81 e0       	ldi	r24, 0x01	; 1
    1018:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <skip_first_crs>
    101c:	20 c0       	rjmp	.+64     	; 0x105e <Calc_Relative_Speed+0x5c>
    101e:	a7 01       	movw	r20, r14
    1020:	96 01       	movw	r18, r12
    1022:	60 91 da 02 	lds	r22, 0x02DA	; 0x8002da <Relative_Distance_Prev>
    1026:	70 91 db 02 	lds	r23, 0x02DB	; 0x8002db <Relative_Distance_Prev+0x1>
    102a:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <Relative_Distance_Prev+0x2>
    102e:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <Relative_Distance_Prev+0x3>
    1032:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
    1036:	2d ec       	ldi	r18, 0xCD	; 205
    1038:	3c ec       	ldi	r19, 0xCC	; 204
    103a:	4c ec       	ldi	r20, 0xCC	; 204
    103c:	5d e3       	ldi	r21, 0x3D	; 61
    103e:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
    1042:	26 e6       	ldi	r18, 0x66	; 102
    1044:	36 e6       	ldi	r19, 0x66	; 102
    1046:	46 e6       	ldi	r20, 0x66	; 102
    1048:	50 e4       	ldi	r21, 0x40	; 64
    104a:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    104e:	60 93 d6 02 	sts	0x02D6, r22	; 0x8002d6 <Relative_Speed>
    1052:	70 93 d7 02 	sts	0x02D7, r23	; 0x8002d7 <Relative_Speed+0x1>
    1056:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <Relative_Speed+0x2>
    105a:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <Relative_Speed+0x3>
    105e:	c0 92 da 02 	sts	0x02DA, r12	; 0x8002da <Relative_Distance_Prev>
    1062:	d0 92 db 02 	sts	0x02DB, r13	; 0x8002db <Relative_Distance_Prev+0x1>
    1066:	e0 92 dc 02 	sts	0x02DC, r14	; 0x8002dc <Relative_Distance_Prev+0x2>
    106a:	f0 92 dd 02 	sts	0x02DD, r15	; 0x8002dd <Relative_Distance_Prev+0x3>
    106e:	ff 90       	pop	r15
    1070:	ef 90       	pop	r14
    1072:	df 90       	pop	r13
    1074:	cf 90       	pop	r12
    1076:	08 95       	ret

00001078 <Process_Input>:
    1078:	80 91 d2 04 	lds	r24, 0x04D2	; 0x8004d2 <CC_Enable_Internal_Test>
    107c:	90 91 d3 04 	lds	r25, 0x04D3	; 0x8004d3 <CC_Enable_Internal_Test+0x1>
    1080:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <CC_Enable+0x1>
    1084:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <CC_Enable>
    1088:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <ACC_Enable_Internal_Test>
    108c:	90 91 c7 04 	lds	r25, 0x04C7	; 0x8004c7 <ACC_Enable_Internal_Test+0x1>
    1090:	90 93 b9 04 	sts	0x04B9, r25	; 0x8004b9 <ACC_Enable+0x1>
    1094:	80 93 b8 04 	sts	0x04B8, r24	; 0x8004b8 <ACC_Enable>
    1098:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <CWAS_Enable_Internal_Test>
    109c:	90 91 d5 04 	lds	r25, 0x04D5	; 0x8004d5 <CWAS_Enable_Internal_Test+0x1>
    10a0:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <CWAS_Enable+0x1>
    10a4:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <CWAS_Enable>
    10a8:	80 91 d0 04 	lds	r24, 0x04D0	; 0x8004d0 <EBS_Enable_Internal_Test>
    10ac:	90 91 d1 04 	lds	r25, 0x04D1	; 0x8004d1 <EBS_Enable_Internal_Test+0x1>
    10b0:	90 93 b3 04 	sts	0x04B3, r25	; 0x8004b3 <EBS_Enable+0x1>
    10b4:	80 93 b2 04 	sts	0x04B2, r24	; 0x8004b2 <EBS_Enable>
    10b8:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <Vehicle_Speed_Internal_Test>
    10bc:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x1>
    10c0:	a0 91 c4 04 	lds	r26, 0x04C4	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x2>
    10c4:	b0 91 c5 04 	lds	r27, 0x04C5	; 0x8004c5 <Vehicle_Speed_Internal_Test+0x3>
    10c8:	80 93 b4 04 	sts	0x04B4, r24	; 0x8004b4 <Vehicle_Speed>
    10cc:	90 93 b5 04 	sts	0x04B5, r25	; 0x8004b5 <Vehicle_Speed+0x1>
    10d0:	a0 93 b6 04 	sts	0x04B6, r26	; 0x8004b6 <Vehicle_Speed+0x2>
    10d4:	b0 93 b7 04 	sts	0x04B7, r27	; 0x8004b7 <Vehicle_Speed+0x3>
    10d8:	80 91 c8 04 	lds	r24, 0x04C8	; 0x8004c8 <Relative_Distance_Internal_Test>
    10dc:	90 91 c9 04 	lds	r25, 0x04C9	; 0x8004c9 <Relative_Distance_Internal_Test+0x1>
    10e0:	a0 91 ca 04 	lds	r26, 0x04CA	; 0x8004ca <Relative_Distance_Internal_Test+0x2>
    10e4:	b0 91 cb 04 	lds	r27, 0x04CB	; 0x8004cb <Relative_Distance_Internal_Test+0x3>
    10e8:	80 93 ae 04 	sts	0x04AE, r24	; 0x8004ae <Relative_Distance>
    10ec:	90 93 af 04 	sts	0x04AF, r25	; 0x8004af <Relative_Distance+0x1>
    10f0:	a0 93 b0 04 	sts	0x04B0, r26	; 0x8004b0 <Relative_Distance+0x2>
    10f4:	b0 93 b1 04 	sts	0x04B1, r27	; 0x8004b1 <Relative_Distance+0x3>
    10f8:	80 91 cc 04 	lds	r24, 0x04CC	; 0x8004cc <Speed_SetbyDriver_Internal_Test>
    10fc:	90 91 cd 04 	lds	r25, 0x04CD	; 0x8004cd <Speed_SetbyDriver_Internal_Test+0x1>
    1100:	a0 91 ce 04 	lds	r26, 0x04CE	; 0x8004ce <Speed_SetbyDriver_Internal_Test+0x2>
    1104:	b0 91 cf 04 	lds	r27, 0x04CF	; 0x8004cf <Speed_SetbyDriver_Internal_Test+0x3>
    1108:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <Speed_SetbyDriver>
    110c:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <Speed_SetbyDriver+0x1>
    1110:	a0 93 c0 04 	sts	0x04C0, r26	; 0x8004c0 <Speed_SetbyDriver+0x2>
    1114:	b0 93 c1 04 	sts	0x04C1, r27	; 0x8004c1 <Speed_SetbyDriver+0x3>
    1118:	08 95       	ret

0000111a <Process_Output>:
    111a:	5f 92       	push	r5
    111c:	6f 92       	push	r6
    111e:	7f 92       	push	r7
    1120:	8f 92       	push	r8
    1122:	9f 92       	push	r9
    1124:	af 92       	push	r10
    1126:	bf 92       	push	r11
    1128:	cf 92       	push	r12
    112a:	df 92       	push	r13
    112c:	ef 92       	push	r14
    112e:	ff 92       	push	r15
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	cf 93       	push	r28
    1136:	df 93       	push	r29
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
    113c:	0d b7       	in	r16, 0x3d	; 61
    113e:	1e b7       	in	r17, 0x3e	; 62
    1140:	8c e3       	ldi	r24, 0x3C	; 60
    1142:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <output_char>
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e2       	ldi	r20, 0x20	; 32
    114c:	51 e4       	ldi	r21, 0x41	; 65
    114e:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
    1152:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
    1156:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
    115a:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
    115e:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    1162:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <__fixsfsi>
    1166:	9b 01       	movw	r18, r22
    1168:	cb 01       	movw	r24, r22
    116a:	a1 2c       	mov	r10, r1
    116c:	b1 2c       	mov	r11, r1
    116e:	ea e0       	ldi	r30, 0x0A	; 10
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	a5 01       	movw	r20, r10
    1174:	4f 5f       	subi	r20, 0xFF	; 255
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	6a 01       	movw	r12, r20
    117a:	18 16       	cp	r1, r24
    117c:	19 06       	cpc	r1, r25
    117e:	34 f4       	brge	.+12     	; 0x118c <Process_Output+0x72>
    1180:	bf 01       	movw	r22, r30
    1182:	0e 94 39 16 	call	0x2c72	; 0x2c72 <__divmodhi4>
    1186:	cb 01       	movw	r24, r22
    1188:	56 01       	movw	r10, r12
    118a:	f3 cf       	rjmp	.-26     	; 0x1172 <Process_Output+0x58>
    118c:	8d b6       	in	r8, 0x3d	; 61
    118e:	9e b6       	in	r9, 0x3e	; 62
    1190:	8d b7       	in	r24, 0x3d	; 61
    1192:	9e b7       	in	r25, 0x3e	; 62
    1194:	84 1b       	sub	r24, r20
    1196:	95 0b       	sbc	r25, r21
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	9e bf       	out	0x3e, r25	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	8d bf       	out	0x3d, r24	; 61
    11a2:	4d b7       	in	r20, 0x3d	; 61
    11a4:	5e b7       	in	r21, 0x3e	; 62
    11a6:	4f 5f       	subi	r20, 0xFF	; 255
    11a8:	5f 4f       	sbci	r21, 0xFF	; 255
    11aa:	7a 01       	movw	r14, r20
    11ac:	3f 93       	push	r19
    11ae:	2f 93       	push	r18
    11b0:	80 e8       	ldi	r24, 0x80	; 128
    11b2:	91 e0       	ldi	r25, 0x01	; 1
    11b4:	9f 93       	push	r25
    11b6:	8f 93       	push	r24
    11b8:	df 92       	push	r13
    11ba:	cf 92       	push	r12
    11bc:	ff 92       	push	r15
    11be:	4f 93       	push	r20
    11c0:	0e 94 89 16 	call	0x2d12	; 0x2d12 <snprintf>
    11c4:	f7 01       	movw	r30, r14
    11c6:	af ed       	ldi	r26, 0xDF	; 223
    11c8:	b2 e0       	ldi	r27, 0x02	; 2
    11ca:	c7 01       	movw	r24, r14
    11cc:	8a 0d       	add	r24, r10
    11ce:	9b 1d       	adc	r25, r11
    11d0:	2d b7       	in	r18, 0x3d	; 61
    11d2:	3e b7       	in	r19, 0x3e	; 62
    11d4:	28 5f       	subi	r18, 0xF8	; 248
    11d6:	3f 4f       	sbci	r19, 0xFF	; 255
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	3e bf       	out	0x3e, r19	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	2d bf       	out	0x3d, r18	; 61
    11e2:	e8 17       	cp	r30, r24
    11e4:	f9 07       	cpc	r31, r25
    11e6:	19 f0       	breq	.+6      	; 0x11ee <Process_Output+0xd4>
    11e8:	21 91       	ld	r18, Z+
    11ea:	2d 93       	st	X+, r18
    11ec:	fa cf       	rjmp	.-12     	; 0x11e2 <Process_Output+0xc8>
    11ee:	0f b6       	in	r0, 0x3f	; 63
    11f0:	f8 94       	cli
    11f2:	9e be       	out	0x3e, r9	; 62
    11f4:	0f be       	out	0x3f, r0	; 63
    11f6:	8d be       	out	0x3d, r8	; 61
    11f8:	8e e2       	ldi	r24, 0x2E	; 46
    11fa:	f6 01       	movw	r30, r12
    11fc:	e2 52       	subi	r30, 0x22	; 34
    11fe:	fd 4f       	sbci	r31, 0xFD	; 253
    1200:	80 83       	st	Z, r24
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	40 e0       	ldi	r20, 0x00	; 0
    1208:	5f e3       	ldi	r21, 0x3F	; 63
    120a:	60 91 b4 04 	lds	r22, 0x04B4	; 0x8004b4 <Vehicle_Speed>
    120e:	70 91 b5 04 	lds	r23, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
    1212:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
    1216:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
    121a:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
    121e:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <__fixsfsi>
    1222:	46 2f       	mov	r20, r22
    1224:	57 2e       	mov	r5, r23
    1226:	86 2f       	mov	r24, r22
    1228:	95 2d       	mov	r25, r5
    122a:	61 2c       	mov	r6, r1
    122c:	71 2c       	mov	r7, r1
    122e:	ea e0       	ldi	r30, 0x0A	; 10
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	93 01       	movw	r18, r6
    1234:	2f 5f       	subi	r18, 0xFF	; 255
    1236:	3f 4f       	sbci	r19, 0xFF	; 255
    1238:	18 16       	cp	r1, r24
    123a:	19 06       	cpc	r1, r25
    123c:	34 f4       	brge	.+12     	; 0x124a <Process_Output+0x130>
    123e:	bf 01       	movw	r22, r30
    1240:	0e 94 39 16 	call	0x2c72	; 0x2c72 <__divmodhi4>
    1244:	cb 01       	movw	r24, r22
    1246:	39 01       	movw	r6, r18
    1248:	f4 cf       	rjmp	.-24     	; 0x1232 <Process_Output+0x118>
    124a:	ed b6       	in	r14, 0x3d	; 61
    124c:	fe b6       	in	r15, 0x3e	; 62
    124e:	8d b7       	in	r24, 0x3d	; 61
    1250:	9e b7       	in	r25, 0x3e	; 62
    1252:	82 1b       	sub	r24, r18
    1254:	93 0b       	sbc	r25, r19
    1256:	0f b6       	in	r0, 0x3f	; 63
    1258:	f8 94       	cli
    125a:	9e bf       	out	0x3e, r25	; 62
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	8d bf       	out	0x3d, r24	; 61
    1260:	01 96       	adiw	r24, 0x01	; 1
    1262:	4c 01       	movw	r8, r24
    1264:	5f 92       	push	r5
    1266:	4f 93       	push	r20
    1268:	80 e8       	ldi	r24, 0x80	; 128
    126a:	91 e0       	ldi	r25, 0x01	; 1
    126c:	9f 93       	push	r25
    126e:	8f 93       	push	r24
    1270:	3f 93       	push	r19
    1272:	2f 93       	push	r18
    1274:	9f 92       	push	r9
    1276:	8f 92       	push	r8
    1278:	0e 94 89 16 	call	0x2d12	; 0x2d12 <snprintf>
    127c:	f4 01       	movw	r30, r8
    127e:	2d b7       	in	r18, 0x3d	; 61
    1280:	3e b7       	in	r19, 0x3e	; 62
    1282:	28 5f       	subi	r18, 0xF8	; 248
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	3e bf       	out	0x3e, r19	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	2d bf       	out	0x3d, r18	; 61
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	86 15       	cp	r24, r6
    1296:	97 05       	cpc	r25, r7
    1298:	51 f0       	breq	.+20     	; 0x12ae <Process_Output+0x194>
    129a:	21 91       	ld	r18, Z+
    129c:	dc 01       	movw	r26, r24
    129e:	aa 0d       	add	r26, r10
    12a0:	bb 1d       	adc	r27, r11
    12a2:	a2 52       	subi	r26, 0x22	; 34
    12a4:	bd 4f       	sbci	r27, 0xFD	; 253
    12a6:	12 96       	adiw	r26, 0x02	; 2
    12a8:	2c 93       	st	X, r18
    12aa:	01 96       	adiw	r24, 0x01	; 1
    12ac:	f3 cf       	rjmp	.-26     	; 0x1294 <Process_Output+0x17a>
    12ae:	c8 0e       	add	r12, r24
    12b0:	d9 1e       	adc	r13, r25
    12b2:	0f b6       	in	r0, 0x3f	; 63
    12b4:	f8 94       	cli
    12b6:	fe be       	out	0x3e, r15	; 62
    12b8:	0f be       	out	0x3f, r0	; 63
    12ba:	ed be       	out	0x3d, r14	; 61
    12bc:	56 01       	movw	r10, r12
    12be:	3f ef       	ldi	r19, 0xFF	; 255
    12c0:	a3 1a       	sub	r10, r19
    12c2:	b3 0a       	sbc	r11, r19
    12c4:	f5 01       	movw	r30, r10
    12c6:	e2 52       	subi	r30, 0x22	; 34
    12c8:	fd 4f       	sbci	r31, 0xFD	; 253
    12ca:	8e e2       	ldi	r24, 0x2E	; 46
    12cc:	80 83       	st	Z, r24
    12ce:	20 e0       	ldi	r18, 0x00	; 0
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	40 e2       	ldi	r20, 0x20	; 32
    12d4:	51 e4       	ldi	r21, 0x41	; 65
    12d6:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <Relative_Speed>
    12da:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <Relative_Speed+0x1>
    12de:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Relative_Speed+0x2>
    12e2:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Relative_Speed+0x3>
    12e6:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    12ea:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <__fixsfsi>
    12ee:	9b 01       	movw	r18, r22
    12f0:	77 ff       	sbrs	r23, 7
    12f2:	0d c0       	rjmp	.+26     	; 0x130e <Process_Output+0x1f4>
    12f4:	56 01       	movw	r10, r12
    12f6:	42 e0       	ldi	r20, 0x02	; 2
    12f8:	a4 0e       	add	r10, r20
    12fa:	b1 1c       	adc	r11, r1
    12fc:	f5 01       	movw	r30, r10
    12fe:	e2 52       	subi	r30, 0x22	; 34
    1300:	fd 4f       	sbci	r31, 0xFD	; 253
    1302:	2d e2       	ldi	r18, 0x2D	; 45
    1304:	20 83       	st	Z, r18
    1306:	22 27       	eor	r18, r18
    1308:	33 27       	eor	r19, r19
    130a:	26 1b       	sub	r18, r22
    130c:	37 0b       	sbc	r19, r23
    130e:	c9 01       	movw	r24, r18
    1310:	81 2c       	mov	r8, r1
    1312:	91 2c       	mov	r9, r1
    1314:	5a e0       	ldi	r21, 0x0A	; 10
    1316:	e5 2e       	mov	r14, r21
    1318:	f1 2c       	mov	r15, r1
    131a:	f4 01       	movw	r30, r8
    131c:	31 96       	adiw	r30, 0x01	; 1
    131e:	18 16       	cp	r1, r24
    1320:	19 06       	cpc	r1, r25
    1322:	34 f4       	brge	.+12     	; 0x1330 <Process_Output+0x216>
    1324:	b7 01       	movw	r22, r14
    1326:	0e 94 39 16 	call	0x2c72	; 0x2c72 <__divmodhi4>
    132a:	cb 01       	movw	r24, r22
    132c:	4f 01       	movw	r8, r30
    132e:	f5 cf       	rjmp	.-22     	; 0x131a <Process_Output+0x200>
    1330:	cd b6       	in	r12, 0x3d	; 61
    1332:	de b6       	in	r13, 0x3e	; 62
    1334:	8d b7       	in	r24, 0x3d	; 61
    1336:	9e b7       	in	r25, 0x3e	; 62
    1338:	8e 1b       	sub	r24, r30
    133a:	9f 0b       	sbc	r25, r31
    133c:	0f b6       	in	r0, 0x3f	; 63
    133e:	f8 94       	cli
    1340:	9e bf       	out	0x3e, r25	; 62
    1342:	0f be       	out	0x3f, r0	; 63
    1344:	8d bf       	out	0x3d, r24	; 61
    1346:	4d b7       	in	r20, 0x3d	; 61
    1348:	5e b7       	in	r21, 0x3e	; 62
    134a:	4f 5f       	subi	r20, 0xFF	; 255
    134c:	5f 4f       	sbci	r21, 0xFF	; 255
    134e:	7a 01       	movw	r14, r20
    1350:	3f 93       	push	r19
    1352:	2f 93       	push	r18
    1354:	80 e8       	ldi	r24, 0x80	; 128
    1356:	91 e0       	ldi	r25, 0x01	; 1
    1358:	9f 93       	push	r25
    135a:	8f 93       	push	r24
    135c:	ff 93       	push	r31
    135e:	ef 93       	push	r30
    1360:	ff 92       	push	r15
    1362:	4f 93       	push	r20
    1364:	0e 94 89 16 	call	0x2d12	; 0x2d12 <snprintf>
    1368:	f7 01       	movw	r30, r14
    136a:	8d b7       	in	r24, 0x3d	; 61
    136c:	9e b7       	in	r25, 0x3e	; 62
    136e:	08 96       	adiw	r24, 0x08	; 8
    1370:	0f b6       	in	r0, 0x3f	; 63
    1372:	f8 94       	cli
    1374:	9e bf       	out	0x3e, r25	; 62
    1376:	0f be       	out	0x3f, r0	; 63
    1378:	8d bf       	out	0x3d, r24	; 61
    137a:	80 e0       	ldi	r24, 0x00	; 0
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	7c 01       	movw	r14, r24
    1380:	ea 0c       	add	r14, r10
    1382:	fb 1c       	adc	r15, r11
    1384:	88 15       	cp	r24, r8
    1386:	99 05       	cpc	r25, r9
    1388:	41 f0       	breq	.+16     	; 0x139a <Process_Output+0x280>
    138a:	21 91       	ld	r18, Z+
    138c:	d7 01       	movw	r26, r14
    138e:	a2 52       	subi	r26, 0x22	; 34
    1390:	bd 4f       	sbci	r27, 0xFD	; 253
    1392:	11 96       	adiw	r26, 0x01	; 1
    1394:	2c 93       	st	X, r18
    1396:	01 96       	adiw	r24, 0x01	; 1
    1398:	f2 cf       	rjmp	.-28     	; 0x137e <Process_Output+0x264>
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	f8 94       	cli
    139e:	de be       	out	0x3e, r13	; 62
    13a0:	0f be       	out	0x3f, r0	; 63
    13a2:	cd be       	out	0x3d, r12	; 61
    13a4:	67 01       	movw	r12, r14
    13a6:	9f ef       	ldi	r25, 0xFF	; 255
    13a8:	c9 1a       	sub	r12, r25
    13aa:	d9 0a       	sbc	r13, r25
    13ac:	f6 01       	movw	r30, r12
    13ae:	e2 52       	subi	r30, 0x22	; 34
    13b0:	fd 4f       	sbci	r31, 0xFD	; 253
    13b2:	8e e2       	ldi	r24, 0x2E	; 46
    13b4:	80 83       	st	Z, r24
    13b6:	20 e0       	ldi	r18, 0x00	; 0
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	40 e2       	ldi	r20, 0x20	; 32
    13bc:	51 e4       	ldi	r21, 0x41	; 65
    13be:	60 91 aa 04 	lds	r22, 0x04AA	; 0x8004aa <Safety_Distance>
    13c2:	70 91 ab 04 	lds	r23, 0x04AB	; 0x8004ab <Safety_Distance+0x1>
    13c6:	80 91 ac 04 	lds	r24, 0x04AC	; 0x8004ac <Safety_Distance+0x2>
    13ca:	90 91 ad 04 	lds	r25, 0x04AD	; 0x8004ad <Safety_Distance+0x3>
    13ce:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    13d2:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <__fixsfsi>
    13d6:	46 2f       	mov	r20, r22
    13d8:	57 2e       	mov	r5, r23
    13da:	86 2f       	mov	r24, r22
    13dc:	95 2d       	mov	r25, r5
    13de:	61 2c       	mov	r6, r1
    13e0:	71 2c       	mov	r7, r1
    13e2:	ea e0       	ldi	r30, 0x0A	; 10
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	93 01       	movw	r18, r6
    13e8:	2f 5f       	subi	r18, 0xFF	; 255
    13ea:	3f 4f       	sbci	r19, 0xFF	; 255
    13ec:	18 16       	cp	r1, r24
    13ee:	19 06       	cpc	r1, r25
    13f0:	34 f4       	brge	.+12     	; 0x13fe <Process_Output+0x2e4>
    13f2:	bf 01       	movw	r22, r30
    13f4:	0e 94 39 16 	call	0x2c72	; 0x2c72 <__divmodhi4>
    13f8:	cb 01       	movw	r24, r22
    13fa:	39 01       	movw	r6, r18
    13fc:	f4 cf       	rjmp	.-24     	; 0x13e6 <Process_Output+0x2cc>
    13fe:	ad b6       	in	r10, 0x3d	; 61
    1400:	be b6       	in	r11, 0x3e	; 62
    1402:	8d b7       	in	r24, 0x3d	; 61
    1404:	9e b7       	in	r25, 0x3e	; 62
    1406:	82 1b       	sub	r24, r18
    1408:	93 0b       	sbc	r25, r19
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	9e bf       	out	0x3e, r25	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	8d bf       	out	0x3d, r24	; 61
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	4c 01       	movw	r8, r24
    1418:	5f 92       	push	r5
    141a:	4f 93       	push	r20
    141c:	80 e8       	ldi	r24, 0x80	; 128
    141e:	91 e0       	ldi	r25, 0x01	; 1
    1420:	9f 93       	push	r25
    1422:	8f 93       	push	r24
    1424:	3f 93       	push	r19
    1426:	2f 93       	push	r18
    1428:	9f 92       	push	r9
    142a:	8f 92       	push	r8
    142c:	0e 94 89 16 	call	0x2d12	; 0x2d12 <snprintf>
    1430:	f4 01       	movw	r30, r8
    1432:	2d b7       	in	r18, 0x3d	; 61
    1434:	3e b7       	in	r19, 0x3e	; 62
    1436:	28 5f       	subi	r18, 0xF8	; 248
    1438:	3f 4f       	sbci	r19, 0xFF	; 255
    143a:	0f b6       	in	r0, 0x3f	; 63
    143c:	f8 94       	cli
    143e:	3e bf       	out	0x3e, r19	; 62
    1440:	0f be       	out	0x3f, r0	; 63
    1442:	2d bf       	out	0x3d, r18	; 61
    1444:	80 e0       	ldi	r24, 0x00	; 0
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	86 15       	cp	r24, r6
    144a:	97 05       	cpc	r25, r7
    144c:	51 f0       	breq	.+20     	; 0x1462 <Process_Output+0x348>
    144e:	21 91       	ld	r18, Z+
    1450:	dc 01       	movw	r26, r24
    1452:	ae 0d       	add	r26, r14
    1454:	bf 1d       	adc	r27, r15
    1456:	a2 52       	subi	r26, 0x22	; 34
    1458:	bd 4f       	sbci	r27, 0xFD	; 253
    145a:	12 96       	adiw	r26, 0x02	; 2
    145c:	2c 93       	st	X, r18
    145e:	01 96       	adiw	r24, 0x01	; 1
    1460:	f3 cf       	rjmp	.-26     	; 0x1448 <Process_Output+0x32e>
    1462:	c8 0e       	add	r12, r24
    1464:	d9 1e       	adc	r13, r25
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	f8 94       	cli
    146a:	be be       	out	0x3e, r11	; 62
    146c:	0f be       	out	0x3f, r0	; 63
    146e:	ad be       	out	0x3d, r10	; 61
    1470:	76 01       	movw	r14, r12
    1472:	3f ef       	ldi	r19, 0xFF	; 255
    1474:	e3 1a       	sub	r14, r19
    1476:	f3 0a       	sbc	r15, r19
    1478:	f7 01       	movw	r30, r14
    147a:	e2 52       	subi	r30, 0x22	; 34
    147c:	fd 4f       	sbci	r31, 0xFD	; 253
    147e:	8e e2       	ldi	r24, 0x2E	; 46
    1480:	80 83       	st	Z, r24
    1482:	20 e0       	ldi	r18, 0x00	; 0
    1484:	30 e0       	ldi	r19, 0x00	; 0
    1486:	4a e7       	ldi	r20, 0x7A	; 122
    1488:	54 e4       	ldi	r21, 0x44	; 68
    148a:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    148e:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    1492:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    1496:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    149a:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    149e:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <__fixsfsi>
    14a2:	9b 01       	movw	r18, r22
    14a4:	cb 01       	movw	r24, r22
    14a6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <Status_Dec_Inc>
    14aa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <Status_Dec_Inc+0x1>
    14ae:	45 2b       	or	r20, r21
    14b0:	59 f4       	brne	.+22     	; 0x14c8 <Process_Output+0x3ae>
    14b2:	89 2b       	or	r24, r25
    14b4:	49 f0       	breq	.+18     	; 0x14c8 <Process_Output+0x3ae>
    14b6:	76 01       	movw	r14, r12
    14b8:	42 e0       	ldi	r20, 0x02	; 2
    14ba:	e4 0e       	add	r14, r20
    14bc:	f1 1c       	adc	r15, r1
    14be:	f7 01       	movw	r30, r14
    14c0:	e2 52       	subi	r30, 0x22	; 34
    14c2:	fd 4f       	sbci	r31, 0xFD	; 253
    14c4:	8d e2       	ldi	r24, 0x2D	; 45
    14c6:	80 83       	st	Z, r24
    14c8:	c9 01       	movw	r24, r18
    14ca:	c1 2c       	mov	r12, r1
    14cc:	d1 2c       	mov	r13, r1
    14ce:	4a e0       	ldi	r20, 0x0A	; 10
    14d0:	a4 2e       	mov	r10, r20
    14d2:	b1 2c       	mov	r11, r1
    14d4:	f6 01       	movw	r30, r12
    14d6:	31 96       	adiw	r30, 0x01	; 1
    14d8:	18 16       	cp	r1, r24
    14da:	19 06       	cpc	r1, r25
    14dc:	34 f4       	brge	.+12     	; 0x14ea <Process_Output+0x3d0>
    14de:	b5 01       	movw	r22, r10
    14e0:	0e 94 39 16 	call	0x2c72	; 0x2c72 <__divmodhi4>
    14e4:	cb 01       	movw	r24, r22
    14e6:	6f 01       	movw	r12, r30
    14e8:	f5 cf       	rjmp	.-22     	; 0x14d4 <Process_Output+0x3ba>
    14ea:	8d b7       	in	r24, 0x3d	; 61
    14ec:	9e b7       	in	r25, 0x3e	; 62
    14ee:	8e 1b       	sub	r24, r30
    14f0:	9f 0b       	sbc	r25, r31
    14f2:	0f b6       	in	r0, 0x3f	; 63
    14f4:	f8 94       	cli
    14f6:	9e bf       	out	0x3e, r25	; 62
    14f8:	0f be       	out	0x3f, r0	; 63
    14fa:	8d bf       	out	0x3d, r24	; 61
    14fc:	4d b7       	in	r20, 0x3d	; 61
    14fe:	5e b7       	in	r21, 0x3e	; 62
    1500:	4f 5f       	subi	r20, 0xFF	; 255
    1502:	5f 4f       	sbci	r21, 0xFF	; 255
    1504:	5a 01       	movw	r10, r20
    1506:	3f 93       	push	r19
    1508:	2f 93       	push	r18
    150a:	80 e8       	ldi	r24, 0x80	; 128
    150c:	91 e0       	ldi	r25, 0x01	; 1
    150e:	9f 93       	push	r25
    1510:	8f 93       	push	r24
    1512:	ff 93       	push	r31
    1514:	ef 93       	push	r30
    1516:	bf 92       	push	r11
    1518:	4f 93       	push	r20
    151a:	0e 94 89 16 	call	0x2d12	; 0x2d12 <snprintf>
    151e:	d5 01       	movw	r26, r10
    1520:	8d b7       	in	r24, 0x3d	; 61
    1522:	9e b7       	in	r25, 0x3e	; 62
    1524:	08 96       	adiw	r24, 0x08	; 8
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	f8 94       	cli
    152a:	9e bf       	out	0x3e, r25	; 62
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	8d bf       	out	0x3d, r24	; 61
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	fc 01       	movw	r30, r24
    1536:	ee 0d       	add	r30, r14
    1538:	ff 1d       	adc	r31, r15
    153a:	8c 15       	cp	r24, r12
    153c:	9d 05       	cpc	r25, r13
    153e:	31 f0       	breq	.+12     	; 0x154c <Process_Output+0x432>
    1540:	2d 91       	ld	r18, X+
    1542:	e2 52       	subi	r30, 0x22	; 34
    1544:	fd 4f       	sbci	r31, 0xFD	; 253
    1546:	21 83       	std	Z+1, r18	; 0x01
    1548:	01 96       	adiw	r24, 0x01	; 1
    154a:	f4 cf       	rjmp	.-24     	; 0x1534 <Process_Output+0x41a>
    154c:	e2 52       	subi	r30, 0x22	; 34
    154e:	fd 4f       	sbci	r31, 0xFD	; 253
    1550:	8e e2       	ldi	r24, 0x2E	; 46
    1552:	81 83       	std	Z+1, r24	; 0x01
    1554:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <Status_Accel_Decel>
    1558:	80 5d       	subi	r24, 0xD0	; 208
    155a:	82 83       	std	Z+2, r24	; 0x02
    155c:	8e e3       	ldi	r24, 0x3E	; 62
    155e:	83 83       	std	Z+3, r24	; 0x03
    1560:	14 82       	std	Z+4, r1	; 0x04
    1562:	0f b6       	in	r0, 0x3f	; 63
    1564:	f8 94       	cli
    1566:	1e bf       	out	0x3e, r17	; 62
    1568:	0f be       	out	0x3f, r0	; 63
    156a:	0d bf       	out	0x3d, r16	; 61
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	1f 91       	pop	r17
    1572:	0f 91       	pop	r16
    1574:	ff 90       	pop	r15
    1576:	ef 90       	pop	r14
    1578:	df 90       	pop	r13
    157a:	cf 90       	pop	r12
    157c:	bf 90       	pop	r11
    157e:	af 90       	pop	r10
    1580:	9f 90       	pop	r9
    1582:	8f 90       	pop	r8
    1584:	7f 90       	pop	r7
    1586:	6f 90       	pop	r6
    1588:	5f 90       	pop	r5
    158a:	08 95       	ret

0000158c <Run_Test_with_Internal_Variable>:
    158c:	4f 92       	push	r4
    158e:	5f 92       	push	r5
    1590:	6f 92       	push	r6
    1592:	7f 92       	push	r7
    1594:	8f 92       	push	r8
    1596:	9f 92       	push	r9
    1598:	af 92       	push	r10
    159a:	bf 92       	push	r11
    159c:	cf 92       	push	r12
    159e:	df 92       	push	r13
    15a0:	ef 92       	push	r14
    15a2:	ff 92       	push	r15
    15a4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <initial_settings>
    15a8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <initial_settings+0x1>
    15ac:	81 30       	cpi	r24, 0x01	; 1
    15ae:	91 05       	cpc	r25, r1
    15b0:	c9 f5       	brne	.+114    	; 0x1624 <Run_Test_with_Internal_Variable+0x98>
    15b2:	40 e0       	ldi	r20, 0x00	; 0
    15b4:	50 e0       	ldi	r21, 0x00	; 0
    15b6:	68 e4       	ldi	r22, 0x48	; 72
    15b8:	72 e4       	ldi	r23, 0x42	; 66
    15ba:	40 93 c2 04 	sts	0x04C2, r20	; 0x8004c2 <Vehicle_Speed_Internal_Test>
    15be:	50 93 c3 04 	sts	0x04C3, r21	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x1>
    15c2:	60 93 c4 04 	sts	0x04C4, r22	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x2>
    15c6:	70 93 c5 04 	sts	0x04C5, r23	; 0x8004c5 <Vehicle_Speed_Internal_Test+0x3>
    15ca:	40 e0       	ldi	r20, 0x00	; 0
    15cc:	50 e0       	ldi	r21, 0x00	; 0
    15ce:	6c e8       	ldi	r22, 0x8C	; 140
    15d0:	72 e4       	ldi	r23, 0x42	; 66
    15d2:	40 93 cc 04 	sts	0x04CC, r20	; 0x8004cc <Speed_SetbyDriver_Internal_Test>
    15d6:	50 93 cd 04 	sts	0x04CD, r21	; 0x8004cd <Speed_SetbyDriver_Internal_Test+0x1>
    15da:	60 93 ce 04 	sts	0x04CE, r22	; 0x8004ce <Speed_SetbyDriver_Internal_Test+0x2>
    15de:	70 93 cf 04 	sts	0x04CF, r23	; 0x8004cf <Speed_SetbyDriver_Internal_Test+0x3>
    15e2:	40 e0       	ldi	r20, 0x00	; 0
    15e4:	50 e0       	ldi	r21, 0x00	; 0
    15e6:	60 e6       	ldi	r22, 0x60	; 96
    15e8:	71 e4       	ldi	r23, 0x41	; 65
    15ea:	40 93 c8 04 	sts	0x04C8, r20	; 0x8004c8 <Relative_Distance_Internal_Test>
    15ee:	50 93 c9 04 	sts	0x04C9, r21	; 0x8004c9 <Relative_Distance_Internal_Test+0x1>
    15f2:	60 93 ca 04 	sts	0x04CA, r22	; 0x8004ca <Relative_Distance_Internal_Test+0x2>
    15f6:	70 93 cb 04 	sts	0x04CB, r23	; 0x8004cb <Relative_Distance_Internal_Test+0x3>
    15fa:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <CC_Enable_Internal_Test+0x1>
    15fe:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <CC_Enable_Internal_Test>
    1602:	90 93 c7 04 	sts	0x04C7, r25	; 0x8004c7 <ACC_Enable_Internal_Test+0x1>
    1606:	80 93 c6 04 	sts	0x04C6, r24	; 0x8004c6 <ACC_Enable_Internal_Test>
    160a:	90 93 d5 04 	sts	0x04D5, r25	; 0x8004d5 <CWAS_Enable_Internal_Test+0x1>
    160e:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <CWAS_Enable_Internal_Test>
    1612:	90 93 d1 04 	sts	0x04D1, r25	; 0x8004d1 <EBS_Enable_Internal_Test+0x1>
    1616:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <EBS_Enable_Internal_Test>
    161a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <initial_settings+0x1>
    161e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <initial_settings>
    1622:	b9 c0       	rjmp	.+370    	; 0x1796 <Run_Test_with_Internal_Variable+0x20a>
    1624:	80 90 c2 04 	lds	r8, 0x04C2	; 0x8004c2 <Vehicle_Speed_Internal_Test>
    1628:	90 90 c3 04 	lds	r9, 0x04C3	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x1>
    162c:	a0 90 c4 04 	lds	r10, 0x04C4	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x2>
    1630:	b0 90 c5 04 	lds	r11, 0x04C5	; 0x8004c5 <Vehicle_Speed_Internal_Test+0x3>
    1634:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <target_vehicle_speed.1488>
    1638:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <target_vehicle_speed.1488+0x1>
    163c:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <target_vehicle_speed.1488+0x2>
    1640:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <target_vehicle_speed.1488+0x3>
    1644:	a7 01       	movw	r20, r14
    1646:	96 01       	movw	r18, r12
    1648:	c5 01       	movw	r24, r10
    164a:	b4 01       	movw	r22, r8
    164c:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
    1650:	2d ec       	ldi	r18, 0xCD	; 205
    1652:	3c ec       	ldi	r19, 0xCC	; 204
    1654:	4c ec       	ldi	r20, 0xCC	; 204
    1656:	5d e3       	ldi	r21, 0x3D	; 61
    1658:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    165c:	26 e6       	ldi	r18, 0x66	; 102
    165e:	36 e6       	ldi	r19, 0x66	; 102
    1660:	46 e6       	ldi	r20, 0x66	; 102
    1662:	50 e4       	ldi	r21, 0x40	; 64
    1664:	0e 94 aa 14 	call	0x2954	; 0x2954 <__divsf3>
    1668:	9b 01       	movw	r18, r22
    166a:	ac 01       	movw	r20, r24
    166c:	60 91 c8 04 	lds	r22, 0x04C8	; 0x8004c8 <Relative_Distance_Internal_Test>
    1670:	70 91 c9 04 	lds	r23, 0x04C9	; 0x8004c9 <Relative_Distance_Internal_Test+0x1>
    1674:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <Relative_Distance_Internal_Test+0x2>
    1678:	90 91 cb 04 	lds	r25, 0x04CB	; 0x8004cb <Relative_Distance_Internal_Test+0x3>
    167c:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
    1680:	2b 01       	movw	r4, r22
    1682:	3c 01       	movw	r6, r24
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	46 e9       	ldi	r20, 0x96	; 150
    168a:	53 e4       	ldi	r21, 0x43	; 67
    168c:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
    1690:	18 16       	cp	r1, r24
    1692:	4c f0       	brlt	.+18     	; 0x16a6 <Run_Test_with_Internal_Variable+0x11a>
    1694:	40 92 c8 04 	sts	0x04C8, r4	; 0x8004c8 <Relative_Distance_Internal_Test>
    1698:	50 92 c9 04 	sts	0x04C9, r5	; 0x8004c9 <Relative_Distance_Internal_Test+0x1>
    169c:	60 92 ca 04 	sts	0x04CA, r6	; 0x8004ca <Relative_Distance_Internal_Test+0x2>
    16a0:	70 92 cb 04 	sts	0x04CB, r7	; 0x8004cb <Relative_Distance_Internal_Test+0x3>
    16a4:	0c c0       	rjmp	.+24     	; 0x16be <Run_Test_with_Internal_Variable+0x132>
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	a6 e9       	ldi	r26, 0x96	; 150
    16ac:	b3 e4       	ldi	r27, 0x43	; 67
    16ae:	80 93 c8 04 	sts	0x04C8, r24	; 0x8004c8 <Relative_Distance_Internal_Test>
    16b2:	90 93 c9 04 	sts	0x04C9, r25	; 0x8004c9 <Relative_Distance_Internal_Test+0x1>
    16b6:	a0 93 ca 04 	sts	0x04CA, r26	; 0x8004ca <Relative_Distance_Internal_Test+0x2>
    16ba:	b0 93 cb 04 	sts	0x04CB, r27	; 0x8004cb <Relative_Distance_Internal_Test+0x3>
    16be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Status_Dec_Inc>
    16c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Status_Dec_Inc+0x1>
    16c6:	00 97       	sbiw	r24, 0x00	; 0
    16c8:	d9 f4       	brne	.+54     	; 0x1700 <Run_Test_with_Internal_Variable+0x174>
    16ca:	2d ec       	ldi	r18, 0xCD	; 205
    16cc:	3c ec       	ldi	r19, 0xCC	; 204
    16ce:	4c ec       	ldi	r20, 0xCC	; 204
    16d0:	5d e3       	ldi	r21, 0x3D	; 61
    16d2:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    16d6:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    16da:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    16de:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    16e2:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    16e6:	26 e6       	ldi	r18, 0x66	; 102
    16e8:	36 e6       	ldi	r19, 0x66	; 102
    16ea:	46 e6       	ldi	r20, 0x66	; 102
    16ec:	50 e4       	ldi	r21, 0x40	; 64
    16ee:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    16f2:	9b 01       	movw	r18, r22
    16f4:	ac 01       	movw	r20, r24
    16f6:	c5 01       	movw	r24, r10
    16f8:	b4 01       	movw	r22, r8
    16fa:	0e 94 38 14 	call	0x2870	; 0x2870 <__subsf3>
    16fe:	1c c0       	rjmp	.+56     	; 0x1738 <Run_Test_with_Internal_Variable+0x1ac>
    1700:	01 97       	sbiw	r24, 0x01	; 1
    1702:	11 f5       	brne	.+68     	; 0x1748 <Run_Test_with_Internal_Variable+0x1bc>
    1704:	2d ec       	ldi	r18, 0xCD	; 205
    1706:	3c ec       	ldi	r19, 0xCC	; 204
    1708:	4c ec       	ldi	r20, 0xCC	; 204
    170a:	5d e3       	ldi	r21, 0x3D	; 61
    170c:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <Output_Acceleration>
    1710:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <Output_Acceleration+0x1>
    1714:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <Output_Acceleration+0x2>
    1718:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <Output_Acceleration+0x3>
    171c:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    1720:	26 e6       	ldi	r18, 0x66	; 102
    1722:	36 e6       	ldi	r19, 0x66	; 102
    1724:	46 e6       	ldi	r20, 0x66	; 102
    1726:	50 e4       	ldi	r21, 0x40	; 64
    1728:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <__mulsf3>
    172c:	9b 01       	movw	r18, r22
    172e:	ac 01       	movw	r20, r24
    1730:	c5 01       	movw	r24, r10
    1732:	b4 01       	movw	r22, r8
    1734:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
    1738:	60 93 c2 04 	sts	0x04C2, r22	; 0x8004c2 <Vehicle_Speed_Internal_Test>
    173c:	70 93 c3 04 	sts	0x04C3, r23	; 0x8004c3 <Vehicle_Speed_Internal_Test+0x1>
    1740:	80 93 c4 04 	sts	0x04C4, r24	; 0x8004c4 <Vehicle_Speed_Internal_Test+0x2>
    1744:	90 93 c5 04 	sts	0x04C5, r25	; 0x8004c5 <Vehicle_Speed_Internal_Test+0x3>
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	48 ec       	ldi	r20, 0xC8	; 200
    174e:	52 e4       	ldi	r21, 0x42	; 66
    1750:	c7 01       	movw	r24, r14
    1752:	b6 01       	movw	r22, r12
    1754:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
    1758:	87 ff       	sbrs	r24, 7
    175a:	11 c0       	rjmp	.+34     	; 0x177e <Run_Test_with_Internal_Variable+0x1f2>
    175c:	21 e7       	ldi	r18, 0x71	; 113
    175e:	3d e3       	ldi	r19, 0x3D	; 61
    1760:	4a e8       	ldi	r20, 0x8A	; 138
    1762:	5f e3       	ldi	r21, 0x3F	; 63
    1764:	c7 01       	movw	r24, r14
    1766:	b6 01       	movw	r22, r12
    1768:	0e 94 39 14 	call	0x2872	; 0x2872 <__addsf3>
    176c:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <target_vehicle_speed.1488>
    1770:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <target_vehicle_speed.1488+0x1>
    1774:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <target_vehicle_speed.1488+0x2>
    1778:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <target_vehicle_speed.1488+0x3>
    177c:	0c c0       	rjmp	.+24     	; 0x1796 <Run_Test_with_Internal_Variable+0x20a>
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	a8 ec       	ldi	r26, 0xC8	; 200
    1784:	b2 e4       	ldi	r27, 0x42	; 66
    1786:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <target_vehicle_speed.1488>
    178a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <target_vehicle_speed.1488+0x1>
    178e:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <target_vehicle_speed.1488+0x2>
    1792:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <target_vehicle_speed.1488+0x3>
    1796:	ff 90       	pop	r15
    1798:	ef 90       	pop	r14
    179a:	df 90       	pop	r13
    179c:	cf 90       	pop	r12
    179e:	bf 90       	pop	r11
    17a0:	af 90       	pop	r10
    17a2:	9f 90       	pop	r9
    17a4:	8f 90       	pop	r8
    17a6:	7f 90       	pop	r7
    17a8:	6f 90       	pop	r6
    17aa:	5f 90       	pop	r5
    17ac:	4f 90       	pop	r4
    17ae:	08 95       	ret

000017b0 <StartupHook>:
    17b0:	60 ea       	ldi	r22, 0xA0	; 160
    17b2:	76 e8       	ldi	r23, 0x86	; 134
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	0c 94 f8 0f 	jmp	0x1ff0	; 0x1ff0 <OsEE_atmega_startTimer1>

000017bc <clock_handler>:
    17bc:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <isr2_armed>
    17c0:	81 11       	cpse	r24, r1
    17c2:	15 c0       	rjmp	.+42     	; 0x17ee <clock_handler+0x32>
    17c4:	61 e0       	ldi	r22, 0x01	; 1
    17c6:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <led_val>
    17ca:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <led_val+0x1>
    17ce:	89 2b       	or	r24, r25
    17d0:	09 f0       	breq	.+2      	; 0x17d4 <clock_handler+0x18>
    17d2:	60 e0       	ldi	r22, 0x00	; 0
    17d4:	86 2f       	mov	r24, r22
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <led_val+0x1>
    17dc:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <led_val>
    17e0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    17e4:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <digitalWrite>
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	0c 94 06 11 	jmp	0x220c	; 0x220c <ActivateTask>
    17ee:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <isr2_armed>
    17f2:	08 95       	ret

000017f4 <setup>:
    17f4:	61 e0       	ldi	r22, 0x01	; 1
    17f6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    17fa:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <pinMode>
    17fe:	26 e0       	ldi	r18, 0x06	; 6
    1800:	40 e0       	ldi	r20, 0x00	; 0
    1802:	52 ec       	ldi	r21, 0xC2	; 194
    1804:	61 e0       	ldi	r22, 0x01	; 1
    1806:	70 e0       	ldi	r23, 0x00	; 0
    1808:	8d e0       	ldi	r24, 0x0D	; 13
    180a:	94 e0       	ldi	r25, 0x04	; 4
    180c:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <_ZN14HardwareSerial5beginEmh>

00001810 <main>:
    1810:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <init>
    1814:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <setup>
    1818:	80 e0       	ldi	r24, 0x00	; 0
    181a:	0e 94 5f 10 	call	0x20be	; 0x20be <StartOS>
    181e:	80 e0       	ldi	r24, 0x00	; 0
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	08 95       	ret

00001824 <FuncTask2>:
    1824:	08 95       	ret

00001826 <FuncTask3>:
    1826:	08 95       	ret

00001828 <FuncTask4>:
    1828:	08 95       	ret

0000182a <FuncTask5>:
    182a:	08 95       	ret

0000182c <_Z12serial_printPKc>:
    182c:	f8 94       	cli
    182e:	fc 01       	movw	r30, r24
    1830:	01 90       	ld	r0, Z+
    1832:	00 20       	and	r0, r0
    1834:	e9 f7       	brne	.-6      	; 0x1830 <_Z12serial_printPKc+0x4>
    1836:	31 97       	sbiw	r30, 0x01	; 1
    1838:	af 01       	movw	r20, r30
    183a:	48 1b       	sub	r20, r24
    183c:	59 0b       	sbc	r21, r25
    183e:	bc 01       	movw	r22, r24
    1840:	8d e0       	ldi	r24, 0x0D	; 13
    1842:	94 e0       	ldi	r25, 0x04	; 4
    1844:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <_ZN5Print5writeEPKhj>
    1848:	8a e2       	ldi	r24, 0x2A	; 42
    184a:	9e e0       	ldi	r25, 0x0E	; 14
    184c:	89 2b       	or	r24, r25
    184e:	11 f0       	breq	.+4      	; 0x1854 <_Z12serial_printPKc+0x28>
    1850:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <_Z14serialEventRunv>
    1854:	78 94       	sei
    1856:	08 95       	ret

00001858 <idle_hook>:
    1858:	0f 93       	push	r16
    185a:	1f 93       	push	r17
    185c:	cf 93       	push	r28
    185e:	df 93       	push	r29
    1860:	00 d0       	rcall	.+0      	; 0x1862 <idle_hook+0xa>
    1862:	cd b7       	in	r28, 0x3d	; 61
    1864:	de b7       	in	r29, 0x3e	; 62
    1866:	8d b7       	in	r24, 0x3d	; 61
    1868:	9e b7       	in	r25, 0x3e	; 62
    186a:	9a 83       	std	Y+2, r25	; 0x02
    186c:	89 83       	std	Y+1, r24	; 0x01
    186e:	80 91 fd 02 	lds	r24, 0x02FD	; 0x8002fd <main_sp>
    1872:	90 91 fe 02 	lds	r25, 0x02FE	; 0x8002fe <main_sp+0x1>
    1876:	89 2b       	or	r24, r25
    1878:	39 f4       	brne	.+14     	; 0x1888 <idle_hook+0x30>
    187a:	89 81       	ldd	r24, Y+1	; 0x01
    187c:	9a 81       	ldd	r25, Y+2	; 0x02
    187e:	90 93 fe 02 	sts	0x02FE, r25	; 0x8002fe <main_sp+0x1>
    1882:	80 93 fd 02 	sts	0x02FD, r24	; 0x8002fd <main_sp>
    1886:	1b c0       	rjmp	.+54     	; 0x18be <idle_hook+0x66>
    1888:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <main_sp>
    188c:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <main_sp+0x1>
    1890:	89 81       	ldd	r24, Y+1	; 0x01
    1892:	9a 81       	ldd	r25, Y+2	; 0x02
    1894:	28 17       	cp	r18, r24
    1896:	39 07       	cpc	r19, r25
    1898:	91 f0       	breq	.+36     	; 0x18be <idle_hook+0x66>
    189a:	61 e0       	ldi	r22, 0x01	; 1
    189c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <led>
    18a0:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <digitalWrite>
    18a4:	f8 94       	cli
    18a6:	84 e9       	ldi	r24, 0x94	; 148
    18a8:	91 e0       	ldi	r25, 0x01	; 1
    18aa:	0e 94 16 0c 	call	0x182c	; 0x182c <_Z12serial_printPKc>
    18ae:	0a e2       	ldi	r16, 0x2A	; 42
    18b0:	1e e0       	ldi	r17, 0x0E	; 14
    18b2:	01 15       	cp	r16, r1
    18b4:	11 05       	cpc	r17, r1
    18b6:	e9 f3       	breq	.-6      	; 0x18b2 <idle_hook+0x5a>
    18b8:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <_Z14serialEventRunv>
    18bc:	fa cf       	rjmp	.-12     	; 0x18b2 <idle_hook+0x5a>
    18be:	f8 94       	cli
    18c0:	8a e2       	ldi	r24, 0x2A	; 42
    18c2:	9e e0       	ldi	r25, 0x0E	; 14
    18c4:	89 2b       	or	r24, r25
    18c6:	11 f0       	breq	.+4      	; 0x18cc <idle_hook+0x74>
    18c8:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <_Z14serialEventRunv>
    18cc:	78 94       	sei
    18ce:	0f 90       	pop	r0
    18d0:	0f 90       	pop	r0
    18d2:	df 91       	pop	r29
    18d4:	cf 91       	pop	r28
    18d6:	1f 91       	pop	r17
    18d8:	0f 91       	pop	r16
    18da:	08 95       	ret

000018dc <FuncTask1>:
    18dc:	cf 92       	push	r12
    18de:	df 92       	push	r13
    18e0:	ef 92       	push	r14
    18e2:	ff 92       	push	r15
    18e4:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <task1_fired>
    18e8:	8f 5f       	subi	r24, 0xFF	; 255
    18ea:	80 93 01 03 	sts	0x0301, r24	; 0x800301 <task1_fired>
    18ee:	0e 94 c6 0a 	call	0x158c	; 0x158c <Run_Test_with_Internal_Variable>
    18f2:	0e 94 3c 08 	call	0x1078	; 0x1078 <Process_Input>
    18f6:	c0 90 b4 04 	lds	r12, 0x04B4	; 0x8004b4 <Vehicle_Speed>
    18fa:	d0 90 b5 04 	lds	r13, 0x04B5	; 0x8004b5 <Vehicle_Speed+0x1>
    18fe:	e0 90 b6 04 	lds	r14, 0x04B6	; 0x8004b6 <Vehicle_Speed+0x2>
    1902:	f0 90 b7 04 	lds	r15, 0x04B7	; 0x8004b7 <Vehicle_Speed+0x3>
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	40 e8       	ldi	r20, 0x80	; 128
    190c:	5f e3       	ldi	r21, 0x3F	; 63
    190e:	c7 01       	movw	r24, r14
    1910:	b6 01       	movw	r22, r12
    1912:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
    1916:	87 ff       	sbrs	r24, 7
    1918:	03 c0       	rjmp	.+6      	; 0x1920 <FuncTask1+0x44>
    191a:	80 eb       	ldi	r24, 0xB0	; 176
    191c:	91 e0       	ldi	r25, 0x01	; 1
    191e:	1c c0       	rjmp	.+56     	; 0x1958 <FuncTask1+0x7c>
    1920:	20 e0       	ldi	r18, 0x00	; 0
    1922:	30 e0       	ldi	r19, 0x00	; 0
    1924:	40 e8       	ldi	r20, 0x80	; 128
    1926:	5f e3       	ldi	r21, 0x3F	; 63
    1928:	c7 01       	movw	r24, r14
    192a:	b6 01       	movw	r22, r12
    192c:	0e 94 c7 15 	call	0x2b8e	; 0x2b8e <__gesf2>
    1930:	87 fd       	sbrc	r24, 7
    1932:	15 c0       	rjmp	.+42     	; 0x195e <FuncTask1+0x82>
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	40 e0       	ldi	r20, 0x00	; 0
    193a:	5f e3       	ldi	r21, 0x3F	; 63
    193c:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
    1940:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
    1944:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
    1948:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
    194c:	0e 94 a5 14 	call	0x294a	; 0x294a <__cmpsf2>
    1950:	18 16       	cp	r1, r24
    1952:	2c f0       	brlt	.+10     	; 0x195e <FuncTask1+0x82>
    1954:	89 ec       	ldi	r24, 0xC9	; 201
    1956:	91 e0       	ldi	r25, 0x01	; 1
    1958:	0e 94 16 0c 	call	0x182c	; 0x182c <_Z12serial_printPKc>
    195c:	1a c0       	rjmp	.+52     	; 0x1992 <FuncTask1+0xb6>
    195e:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <Relative_Distance>
    1962:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <Relative_Distance+0x1>
    1966:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <Relative_Distance+0x2>
    196a:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <Relative_Distance+0x3>
    196e:	0e 94 01 08 	call	0x1002	; 0x1002 <Calc_Relative_Speed>
    1972:	0e 94 36 01 	call	0x26c	; 0x26c <Acc_Dec_Dtrmn_Sys>
    1976:	0e 94 8d 08 	call	0x111a	; 0x111a <Process_Output>
    197a:	6e ed       	ldi	r22, 0xDE	; 222
    197c:	72 e0       	ldi	r23, 0x02	; 2
    197e:	8d e0       	ldi	r24, 0x0D	; 13
    1980:	94 e0       	ldi	r25, 0x04	; 4
    1982:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <_ZN5Print5printEPKc>
    1986:	6d ea       	ldi	r22, 0xAD	; 173
    1988:	71 e0       	ldi	r23, 0x01	; 1
    198a:	8d e0       	ldi	r24, 0x0D	; 13
    198c:	94 e0       	ldi	r25, 0x04	; 4
    198e:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <_ZN5Print5printEPKc>
    1992:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <task1_ended>
    1996:	8f 5f       	subi	r24, 0xFF	; 255
    1998:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <task1_ended>
    199c:	ff 90       	pop	r15
    199e:	ef 90       	pop	r14
    19a0:	df 90       	pop	r13
    19a2:	cf 90       	pop	r12
    19a4:	08 95       	ret

000019a6 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    19a6:	1f 92       	push	r1
    19a8:	0f 92       	push	r0
    19aa:	0f b6       	in	r0, 0x3f	; 63
    19ac:	0f 92       	push	r0
    19ae:	11 24       	eor	r1, r1
    19b0:	2f 93       	push	r18
    19b2:	3f 93       	push	r19
    19b4:	8f 93       	push	r24
    19b6:	9f 93       	push	r25
    19b8:	af 93       	push	r26
    19ba:	bf 93       	push	r27
    19bc:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <timer0_millis>
    19c0:	90 91 06 04 	lds	r25, 0x0406	; 0x800406 <timer0_millis+0x1>
    19c4:	a0 91 07 04 	lds	r26, 0x0407	; 0x800407 <timer0_millis+0x2>
    19c8:	b0 91 08 04 	lds	r27, 0x0408	; 0x800408 <timer0_millis+0x3>
    19cc:	30 91 04 04 	lds	r19, 0x0404	; 0x800404 <timer0_fract>
    19d0:	23 e0       	ldi	r18, 0x03	; 3
    19d2:	23 0f       	add	r18, r19
    19d4:	2d 37       	cpi	r18, 0x7D	; 125
    19d6:	20 f4       	brcc	.+8      	; 0x19e0 <__vector_16+0x3a>
    19d8:	01 96       	adiw	r24, 0x01	; 1
    19da:	a1 1d       	adc	r26, r1
    19dc:	b1 1d       	adc	r27, r1
    19de:	05 c0       	rjmp	.+10     	; 0x19ea <__vector_16+0x44>
    19e0:	26 e8       	ldi	r18, 0x86	; 134
    19e2:	23 0f       	add	r18, r19
    19e4:	02 96       	adiw	r24, 0x02	; 2
    19e6:	a1 1d       	adc	r26, r1
    19e8:	b1 1d       	adc	r27, r1
    19ea:	20 93 04 04 	sts	0x0404, r18	; 0x800404 <timer0_fract>
    19ee:	80 93 05 04 	sts	0x0405, r24	; 0x800405 <timer0_millis>
    19f2:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <timer0_millis+0x1>
    19f6:	a0 93 07 04 	sts	0x0407, r26	; 0x800407 <timer0_millis+0x2>
    19fa:	b0 93 08 04 	sts	0x0408, r27	; 0x800408 <timer0_millis+0x3>
    19fe:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <timer0_overflow_count>
    1a02:	90 91 0a 04 	lds	r25, 0x040A	; 0x80040a <timer0_overflow_count+0x1>
    1a06:	a0 91 0b 04 	lds	r26, 0x040B	; 0x80040b <timer0_overflow_count+0x2>
    1a0a:	b0 91 0c 04 	lds	r27, 0x040C	; 0x80040c <timer0_overflow_count+0x3>
    1a0e:	01 96       	adiw	r24, 0x01	; 1
    1a10:	a1 1d       	adc	r26, r1
    1a12:	b1 1d       	adc	r27, r1
    1a14:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <timer0_overflow_count>
    1a18:	90 93 0a 04 	sts	0x040A, r25	; 0x80040a <timer0_overflow_count+0x1>
    1a1c:	a0 93 0b 04 	sts	0x040B, r26	; 0x80040b <timer0_overflow_count+0x2>
    1a20:	b0 93 0c 04 	sts	0x040C, r27	; 0x80040c <timer0_overflow_count+0x3>
    1a24:	bf 91       	pop	r27
    1a26:	af 91       	pop	r26
    1a28:	9f 91       	pop	r25
    1a2a:	8f 91       	pop	r24
    1a2c:	3f 91       	pop	r19
    1a2e:	2f 91       	pop	r18
    1a30:	0f 90       	pop	r0
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	0f 90       	pop	r0
    1a36:	1f 90       	pop	r1
    1a38:	18 95       	reti

00001a3a <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    1a3a:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    1a3c:	84 b5       	in	r24, 0x24	; 36
    1a3e:	82 60       	ori	r24, 0x02	; 2
    1a40:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    1a42:	84 b5       	in	r24, 0x24	; 36
    1a44:	81 60       	ori	r24, 0x01	; 1
    1a46:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    1a48:	85 b5       	in	r24, 0x25	; 37
    1a4a:	82 60       	ori	r24, 0x02	; 2
    1a4c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    1a4e:	85 b5       	in	r24, 0x25	; 37
    1a50:	81 60       	ori	r24, 0x01	; 1
    1a52:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    1a54:	ee e6       	ldi	r30, 0x6E	; 110
    1a56:	f0 e0       	ldi	r31, 0x00	; 0
    1a58:	80 81       	ld	r24, Z
    1a5a:	81 60       	ori	r24, 0x01	; 1
    1a5c:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    1a5e:	e1 e8       	ldi	r30, 0x81	; 129
    1a60:	f0 e0       	ldi	r31, 0x00	; 0
    1a62:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    1a64:	80 81       	ld	r24, Z
    1a66:	82 60       	ori	r24, 0x02	; 2
    1a68:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    1a6a:	80 81       	ld	r24, Z
    1a6c:	81 60       	ori	r24, 0x01	; 1
    1a6e:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    1a70:	e0 e8       	ldi	r30, 0x80	; 128
    1a72:	f0 e0       	ldi	r31, 0x00	; 0
    1a74:	80 81       	ld	r24, Z
    1a76:	81 60       	ori	r24, 0x01	; 1
    1a78:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    1a7a:	e1 eb       	ldi	r30, 0xB1	; 177
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	80 81       	ld	r24, Z
    1a80:	84 60       	ori	r24, 0x04	; 4
    1a82:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    1a84:	e0 eb       	ldi	r30, 0xB0	; 176
    1a86:	f0 e0       	ldi	r31, 0x00	; 0
    1a88:	80 81       	ld	r24, Z
    1a8a:	81 60       	ori	r24, 0x01	; 1
    1a8c:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    1a8e:	ea e7       	ldi	r30, 0x7A	; 122
    1a90:	f0 e0       	ldi	r31, 0x00	; 0
    1a92:	80 81       	ld	r24, Z
    1a94:	84 60       	ori	r24, 0x04	; 4
    1a96:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    1a98:	80 81       	ld	r24, Z
    1a9a:	82 60       	ori	r24, 0x02	; 2
    1a9c:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    1a9e:	80 81       	ld	r24, Z
    1aa0:	81 60       	ori	r24, 0x01	; 1
    1aa2:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    1aa4:	80 81       	ld	r24, Z
    1aa6:	80 68       	ori	r24, 0x80	; 128
    1aa8:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    1aaa:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1aae:	08 95       	ret

00001ab0 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    1ab0:	83 30       	cpi	r24, 0x03	; 3
    1ab2:	81 f0       	breq	.+32     	; 0x1ad4 <turnOffPWM+0x24>
    1ab4:	28 f4       	brcc	.+10     	; 0x1ac0 <turnOffPWM+0x10>
    1ab6:	81 30       	cpi	r24, 0x01	; 1
    1ab8:	99 f0       	breq	.+38     	; 0x1ae0 <turnOffPWM+0x30>
    1aba:	82 30       	cpi	r24, 0x02	; 2
    1abc:	a1 f0       	breq	.+40     	; 0x1ae6 <turnOffPWM+0x36>
    1abe:	08 95       	ret
    1ac0:	87 30       	cpi	r24, 0x07	; 7
    1ac2:	a9 f0       	breq	.+42     	; 0x1aee <turnOffPWM+0x3e>
    1ac4:	88 30       	cpi	r24, 0x08	; 8
    1ac6:	b9 f0       	breq	.+46     	; 0x1af6 <turnOffPWM+0x46>
    1ac8:	84 30       	cpi	r24, 0x04	; 4
    1aca:	d1 f4       	brne	.+52     	; 0x1b00 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    1acc:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1ad0:	8f 7d       	andi	r24, 0xDF	; 223
    1ad2:	03 c0       	rjmp	.+6      	; 0x1ada <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    1ad4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1ad8:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    1ada:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1ade:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    1ae0:	84 b5       	in	r24, 0x24	; 36
    1ae2:	8f 77       	andi	r24, 0x7F	; 127
    1ae4:	02 c0       	rjmp	.+4      	; 0x1aea <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    1ae6:	84 b5       	in	r24, 0x24	; 36
    1ae8:	8f 7d       	andi	r24, 0xDF	; 223
    1aea:	84 bd       	out	0x24, r24	; 36
    1aec:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    1aee:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1af2:	8f 77       	andi	r24, 0x7F	; 127
    1af4:	03 c0       	rjmp	.+6      	; 0x1afc <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    1af6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1afa:	8f 7d       	andi	r24, 0xDF	; 223
    1afc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1b00:	08 95       	ret

00001b02 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    1b02:	cf 93       	push	r28
    1b04:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	fc 01       	movw	r30, r24
    1b0a:	e4 58       	subi	r30, 0x84	; 132
    1b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0e:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    1b10:	fc 01       	movw	r30, r24
    1b12:	e0 57       	subi	r30, 0x70	; 112
    1b14:	ff 4f       	sbci	r31, 0xFF	; 255
    1b16:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    1b18:	88 23       	and	r24, r24
    1b1a:	61 f1       	breq	.+88     	; 0x1b74 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	88 0f       	add	r24, r24
    1b20:	99 1f       	adc	r25, r25
    1b22:	fc 01       	movw	r30, r24
    1b24:	e2 55       	subi	r30, 0x52	; 82
    1b26:	ff 4f       	sbci	r31, 0xFF	; 255
    1b28:	c5 91       	lpm	r28, Z+
    1b2a:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    1b2c:	fc 01       	movw	r30, r24
    1b2e:	ec 55       	subi	r30, 0x5C	; 92
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	a5 91       	lpm	r26, Z+
    1b34:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    1b36:	61 11       	cpse	r22, r1
    1b38:	09 c0       	rjmp	.+18     	; 0x1b4c <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    1b3a:	9f b7       	in	r25, 0x3f	; 63
                cli();
    1b3c:	f8 94       	cli
		*reg &= ~bit;
    1b3e:	88 81       	ld	r24, Y
    1b40:	20 95       	com	r18
    1b42:	82 23       	and	r24, r18
    1b44:	88 83       	st	Y, r24
		*out &= ~bit;
    1b46:	ec 91       	ld	r30, X
    1b48:	2e 23       	and	r18, r30
    1b4a:	0b c0       	rjmp	.+22     	; 0x1b62 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    1b4c:	62 30       	cpi	r22, 0x02	; 2
    1b4e:	61 f4       	brne	.+24     	; 0x1b68 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    1b50:	9f b7       	in	r25, 0x3f	; 63
                cli();
    1b52:	f8 94       	cli
		*reg &= ~bit;
    1b54:	38 81       	ld	r19, Y
    1b56:	82 2f       	mov	r24, r18
    1b58:	80 95       	com	r24
    1b5a:	83 23       	and	r24, r19
    1b5c:	88 83       	st	Y, r24
		*out |= bit;
    1b5e:	ec 91       	ld	r30, X
    1b60:	2e 2b       	or	r18, r30
    1b62:	2c 93       	st	X, r18
		SREG = oldSREG;
    1b64:	9f bf       	out	0x3f, r25	; 63
    1b66:	06 c0       	rjmp	.+12     	; 0x1b74 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    1b68:	8f b7       	in	r24, 0x3f	; 63
                cli();
    1b6a:	f8 94       	cli
		*reg |= bit;
    1b6c:	e8 81       	ld	r30, Y
    1b6e:	2e 2b       	or	r18, r30
    1b70:	28 83       	st	Y, r18
		SREG = oldSREG;
    1b72:	8f bf       	out	0x3f, r24	; 63
	}
}
    1b74:	df 91       	pop	r29
    1b76:	cf 91       	pop	r28
    1b78:	08 95       	ret

00001b7a <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    1b7a:	1f 93       	push	r17
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    1b80:	28 2f       	mov	r18, r24
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	f9 01       	movw	r30, r18
    1b86:	e8 59       	subi	r30, 0x98	; 152
    1b88:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8a:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    1b8c:	f9 01       	movw	r30, r18
    1b8e:	e4 58       	subi	r30, 0x84	; 132
    1b90:	ff 4f       	sbci	r31, 0xFF	; 255
    1b92:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    1b94:	f9 01       	movw	r30, r18
    1b96:	e0 57       	subi	r30, 0x70	; 112
    1b98:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9a:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    1b9c:	cc 23       	and	r28, r28
    1b9e:	c9 f0       	breq	.+50     	; 0x1bd2 <digitalWrite+0x58>
    1ba0:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    1ba2:	81 11       	cpse	r24, r1
    1ba4:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <turnOffPWM>

	out = portOutputRegister(port);
    1ba8:	ec 2f       	mov	r30, r28
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	ee 0f       	add	r30, r30
    1bae:	ff 1f       	adc	r31, r31
    1bb0:	ec 55       	subi	r30, 0x5C	; 92
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	a5 91       	lpm	r26, Z+
    1bb6:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    1bb8:	8f b7       	in	r24, 0x3f	; 63
	cli();
    1bba:	f8 94       	cli

	if (val == LOW) {
    1bbc:	11 11       	cpse	r17, r1
    1bbe:	05 c0       	rjmp	.+10     	; 0x1bca <digitalWrite+0x50>
		*out &= ~bit;
    1bc0:	9c 91       	ld	r25, X
    1bc2:	ed 2f       	mov	r30, r29
    1bc4:	e0 95       	com	r30
    1bc6:	e9 23       	and	r30, r25
    1bc8:	02 c0       	rjmp	.+4      	; 0x1bce <digitalWrite+0x54>
	} else {
		*out |= bit;
    1bca:	ec 91       	ld	r30, X
    1bcc:	ed 2b       	or	r30, r29
    1bce:	ec 93       	st	X, r30
	}

	SREG = oldSREG;
    1bd0:	8f bf       	out	0x3f, r24	; 63
}
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	08 95       	ret

00001bda <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    1bda:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    1bdc:	91 8d       	ldd	r25, Z+25	; 0x19
    1bde:	22 8d       	ldd	r18, Z+26	; 0x1a
    1be0:	89 2f       	mov	r24, r25
    1be2:	90 e0       	ldi	r25, 0x00	; 0
    1be4:	80 5c       	subi	r24, 0xC0	; 192
    1be6:	9f 4f       	sbci	r25, 0xFF	; 255
    1be8:	82 1b       	sub	r24, r18
    1bea:	91 09       	sbc	r25, r1
}
    1bec:	8f 73       	andi	r24, 0x3F	; 63
    1bee:	99 27       	eor	r25, r25
    1bf0:	08 95       	ret

00001bf2 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    1bf2:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    1bf4:	91 8d       	ldd	r25, Z+25	; 0x19
    1bf6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1bf8:	98 17       	cp	r25, r24
    1bfa:	31 f0       	breq	.+12     	; 0x1c08 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    1bfc:	82 8d       	ldd	r24, Z+26	; 0x1a
    1bfe:	e8 0f       	add	r30, r24
    1c00:	f1 1d       	adc	r31, r1
    1c02:	85 8d       	ldd	r24, Z+29	; 0x1d
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1c08:	8f ef       	ldi	r24, 0xFF	; 255
    1c0a:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    1c0c:	08 95       	ret

00001c0e <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    1c0e:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    1c10:	91 8d       	ldd	r25, Z+25	; 0x19
    1c12:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c14:	98 17       	cp	r25, r24
    1c16:	61 f0       	breq	.+24     	; 0x1c30 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    1c18:	82 8d       	ldd	r24, Z+26	; 0x1a
    1c1a:	df 01       	movw	r26, r30
    1c1c:	a8 0f       	add	r26, r24
    1c1e:	b1 1d       	adc	r27, r1
    1c20:	5d 96       	adiw	r26, 0x1d	; 29
    1c22:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    1c24:	92 8d       	ldd	r25, Z+26	; 0x1a
    1c26:	9f 5f       	subi	r25, 0xFF	; 255
    1c28:	9f 73       	andi	r25, 0x3F	; 63
    1c2a:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    1c30:	8f ef       	ldi	r24, 0xFF	; 255
    1c32:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    1c34:	08 95       	ret

00001c36 <_ZN14HardwareSerial17availableForWriteEv>:
{
#if (SERIAL_TX_BUFFER_SIZE>256)
  uint8_t oldSREG = SREG;
  cli();
#endif
  tx_buffer_index_t head = _tx_buffer_head;
    1c36:	fc 01       	movw	r30, r24
    1c38:	53 8d       	ldd	r21, Z+27	; 0x1b
  tx_buffer_index_t tail = _tx_buffer_tail;
    1c3a:	44 8d       	ldd	r20, Z+28	; 0x1c
    1c3c:	25 2f       	mov	r18, r21
    1c3e:	30 e0       	ldi	r19, 0x00	; 0
    1c40:	84 2f       	mov	r24, r20
    1c42:	90 e0       	ldi	r25, 0x00	; 0
#if (SERIAL_TX_BUFFER_SIZE>256)
  SREG = oldSREG;
#endif
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    1c44:	82 1b       	sub	r24, r18
    1c46:	93 0b       	sbc	r25, r19
    1c48:	54 17       	cp	r21, r20
    1c4a:	10 f0       	brcs	.+4      	; 0x1c50 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    1c4c:	cf 96       	adiw	r24, 0x3f	; 63
    1c4e:	08 95       	ret
  return tail - head - 1;
    1c50:	01 97       	sbiw	r24, 0x01	; 1
}
    1c52:	08 95       	ret

00001c54 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1c54:	8f e7       	ldi	r24, 0x7F	; 127
    1c56:	9f e0       	ldi	r25, 0x0F	; 15
    1c58:	89 2b       	or	r24, r25
    1c5a:	49 f0       	breq	.+18     	; 0x1c6e <_Z14serialEventRunv+0x1a>
    1c5c:	80 e0       	ldi	r24, 0x00	; 0
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	89 2b       	or	r24, r25
    1c62:	29 f0       	breq	.+10     	; 0x1c6e <_Z14serialEventRunv+0x1a>
    1c64:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <_Z17Serial0_availablev>
    1c68:	81 11       	cpse	r24, r1
    1c6a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    1c6e:	08 95       	ret

00001c70 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    1c70:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    1c72:	84 8d       	ldd	r24, Z+28	; 0x1c
    1c74:	df 01       	movw	r26, r30
    1c76:	a8 0f       	add	r26, r24
    1c78:	b1 1d       	adc	r27, r1
    1c7a:	a3 5a       	subi	r26, 0xA3	; 163
    1c7c:	bf 4f       	sbci	r27, 0xFF	; 255
    1c7e:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    1c80:	84 8d       	ldd	r24, Z+28	; 0x1c
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	01 96       	adiw	r24, 0x01	; 1
    1c86:	8f 73       	andi	r24, 0x3F	; 63
    1c88:	99 27       	eor	r25, r25
    1c8a:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    1c8c:	a6 89       	ldd	r26, Z+22	; 0x16
    1c8e:	b7 89       	ldd	r27, Z+23	; 0x17
    1c90:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    1c92:	a0 89       	ldd	r26, Z+16	; 0x10
    1c94:	b1 89       	ldd	r27, Z+17	; 0x11
    1c96:	8c 91       	ld	r24, X
    1c98:	80 64       	ori	r24, 0x40	; 64
    1c9a:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    1c9c:	93 8d       	ldd	r25, Z+27	; 0x1b
    1c9e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1ca0:	98 13       	cpse	r25, r24
    1ca2:	06 c0       	rjmp	.+12     	; 0x1cb0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    1ca4:	02 88       	ldd	r0, Z+18	; 0x12
    1ca6:	f3 89       	ldd	r31, Z+19	; 0x13
    1ca8:	e0 2d       	mov	r30, r0
    1caa:	80 81       	ld	r24, Z
    1cac:	8f 7d       	andi	r24, 0xDF	; 223
    1cae:	80 83       	st	Z, r24
    1cb0:	08 95       	ret

00001cb2 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    1cb2:	cf 93       	push	r28
    1cb4:	df 93       	push	r29
    1cb6:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    1cb8:	88 8d       	ldd	r24, Y+24	; 0x18
    1cba:	88 23       	and	r24, r24
    1cbc:	c9 f0       	breq	.+50     	; 0x1cf0 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    1cbe:	ea 89       	ldd	r30, Y+18	; 0x12
    1cc0:	fb 89       	ldd	r31, Y+19	; 0x13
    1cc2:	80 81       	ld	r24, Z
    1cc4:	85 fd       	sbrc	r24, 5
    1cc6:	05 c0       	rjmp	.+10     	; 0x1cd2 <_ZN14HardwareSerial5flushEv+0x20>
    1cc8:	a8 89       	ldd	r26, Y+16	; 0x10
    1cca:	b9 89       	ldd	r27, Y+17	; 0x11
    1ccc:	8c 91       	ld	r24, X
    1cce:	86 fd       	sbrc	r24, 6
    1cd0:	0f c0       	rjmp	.+30     	; 0x1cf0 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    1cd2:	0f b6       	in	r0, 0x3f	; 63
    1cd4:	07 fc       	sbrc	r0, 7
    1cd6:	f5 cf       	rjmp	.-22     	; 0x1cc2 <_ZN14HardwareSerial5flushEv+0x10>
    1cd8:	80 81       	ld	r24, Z
    1cda:	85 ff       	sbrs	r24, 5
    1cdc:	f2 cf       	rjmp	.-28     	; 0x1cc2 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    1cde:	a8 89       	ldd	r26, Y+16	; 0x10
    1ce0:	b9 89       	ldd	r27, Y+17	; 0x11
    1ce2:	8c 91       	ld	r24, X
    1ce4:	85 ff       	sbrs	r24, 5
    1ce6:	ed cf       	rjmp	.-38     	; 0x1cc2 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    1ce8:	ce 01       	movw	r24, r28
    1cea:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1cee:	e7 cf       	rjmp	.-50     	; 0x1cbe <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    1cf0:	df 91       	pop	r29
    1cf2:	cf 91       	pop	r28
    1cf4:	08 95       	ret

00001cf6 <_ZN14HardwareSerial5writeEh>:

size_t HardwareSerial::write(uint8_t c)
{
    1cf6:	ef 92       	push	r14
    1cf8:	ff 92       	push	r15
    1cfa:	0f 93       	push	r16
    1cfc:	1f 93       	push	r17
    1cfe:	cf 93       	push	r28
    1d00:	df 93       	push	r29
    1d02:	ec 01       	movw	r28, r24
  _written = true;
    1d04:	81 e0       	ldi	r24, 0x01	; 1
    1d06:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    1d08:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1d0a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1d0c:	98 13       	cpse	r25, r24
    1d0e:	05 c0       	rjmp	.+10     	; 0x1d1a <_ZN14HardwareSerial5writeEh+0x24>
    1d10:	e8 89       	ldd	r30, Y+16	; 0x10
    1d12:	f9 89       	ldd	r31, Y+17	; 0x11
    1d14:	80 81       	ld	r24, Z
    1d16:	85 fd       	sbrc	r24, 5
    1d18:	24 c0       	rjmp	.+72     	; 0x1d62 <_ZN14HardwareSerial5writeEh+0x6c>
    1d1a:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    1d1c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1d1e:	10 e0       	ldi	r17, 0x00	; 0
    1d20:	0f 5f       	subi	r16, 0xFF	; 255
    1d22:	1f 4f       	sbci	r17, 0xFF	; 255
    1d24:	0f 73       	andi	r16, 0x3F	; 63
    1d26:	11 27       	eor	r17, r17
    1d28:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    1d2a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1d2c:	e8 12       	cpse	r14, r24
    1d2e:	0c c0       	rjmp	.+24     	; 0x1d48 <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    1d30:	0f b6       	in	r0, 0x3f	; 63
    1d32:	07 fc       	sbrc	r0, 7
    1d34:	fa cf       	rjmp	.-12     	; 0x1d2a <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    1d36:	e8 89       	ldd	r30, Y+16	; 0x10
    1d38:	f9 89       	ldd	r31, Y+17	; 0x11
    1d3a:	80 81       	ld	r24, Z
    1d3c:	85 ff       	sbrs	r24, 5
    1d3e:	f5 cf       	rjmp	.-22     	; 0x1d2a <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    1d40:	ce 01       	movw	r24, r28
    1d42:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1d46:	f1 cf       	rjmp	.-30     	; 0x1d2a <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    1d48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d4a:	fe 01       	movw	r30, r28
    1d4c:	e8 0f       	add	r30, r24
    1d4e:	f1 1d       	adc	r31, r1
    1d50:	e3 5a       	subi	r30, 0xA3	; 163
    1d52:	ff 4f       	sbci	r31, 0xFF	; 255
    1d54:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    1d56:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    1d58:	ea 89       	ldd	r30, Y+18	; 0x12
    1d5a:	fb 89       	ldd	r31, Y+19	; 0x13
    1d5c:	80 81       	ld	r24, Z
    1d5e:	80 62       	ori	r24, 0x20	; 32
    1d60:	07 c0       	rjmp	.+14     	; 0x1d70 <_ZN14HardwareSerial5writeEh+0x7a>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    1d62:	ee 89       	ldd	r30, Y+22	; 0x16
    1d64:	ff 89       	ldd	r31, Y+23	; 0x17
    1d66:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    1d68:	e8 89       	ldd	r30, Y+16	; 0x10
    1d6a:	f9 89       	ldd	r31, Y+17	; 0x11
    1d6c:	80 81       	ld	r24, Z
    1d6e:	80 64       	ori	r24, 0x40	; 64
    1d70:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    1d72:	81 e0       	ldi	r24, 0x01	; 1
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	df 91       	pop	r29
    1d78:	cf 91       	pop	r28
    1d7a:	1f 91       	pop	r17
    1d7c:	0f 91       	pop	r16
    1d7e:	ff 90       	pop	r15
    1d80:	ef 90       	pop	r14
    1d82:	08 95       	ret

00001d84 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    1d84:	cf 92       	push	r12
    1d86:	df 92       	push	r13
    1d88:	ef 92       	push	r14
    1d8a:	ff 92       	push	r15
    1d8c:	1f 93       	push	r17
    1d8e:	cf 93       	push	r28
    1d90:	df 93       	push	r29
    1d92:	ec 01       	movw	r28, r24
    1d94:	6a 01       	movw	r12, r20
    1d96:	7b 01       	movw	r14, r22
    1d98:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    1d9a:	e8 89       	ldd	r30, Y+16	; 0x10
    1d9c:	f9 89       	ldd	r31, Y+17	; 0x11
    1d9e:	82 e0       	ldi	r24, 0x02	; 2
    1da0:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    1da2:	41 15       	cp	r20, r1
    1da4:	51 4e       	sbci	r21, 0xE1	; 225
    1da6:	61 05       	cpc	r22, r1
    1da8:	71 05       	cpc	r23, r1
    1daa:	b1 f0       	breq	.+44     	; 0x1dd8 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    1dac:	60 e0       	ldi	r22, 0x00	; 0
    1dae:	79 e0       	ldi	r23, 0x09	; 9
    1db0:	8d e3       	ldi	r24, 0x3D	; 61
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	a7 01       	movw	r20, r14
    1db6:	96 01       	movw	r18, r12
    1db8:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <__udivmodsi4>
    1dbc:	da 01       	movw	r26, r20
    1dbe:	c9 01       	movw	r24, r18
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	a1 09       	sbc	r26, r1
    1dc4:	b1 09       	sbc	r27, r1
    1dc6:	b6 95       	lsr	r27
    1dc8:	a7 95       	ror	r26
    1dca:	97 95       	ror	r25
    1dcc:	87 95       	ror	r24
    1dce:	ac 01       	movw	r20, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    1dd0:	41 15       	cp	r20, r1
    1dd2:	80 e1       	ldi	r24, 0x10	; 16
    1dd4:	58 07       	cpc	r21, r24
    1dd6:	a8 f0       	brcs	.+42     	; 0x1e02 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    1dd8:	e8 89       	ldd	r30, Y+16	; 0x10
    1dda:	f9 89       	ldd	r31, Y+17	; 0x11
    1ddc:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    1dde:	60 e8       	ldi	r22, 0x80	; 128
    1de0:	74 e8       	ldi	r23, 0x84	; 132
    1de2:	8e e1       	ldi	r24, 0x1E	; 30
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	a7 01       	movw	r20, r14
    1de8:	96 01       	movw	r18, r12
    1dea:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <__udivmodsi4>
    1dee:	ba 01       	movw	r22, r20
    1df0:	a9 01       	movw	r20, r18
    1df2:	41 50       	subi	r20, 0x01	; 1
    1df4:	51 09       	sbc	r21, r1
    1df6:	61 09       	sbc	r22, r1
    1df8:	71 09       	sbc	r23, r1
    1dfa:	76 95       	lsr	r23
    1dfc:	67 95       	ror	r22
    1dfe:	57 95       	ror	r21
    1e00:	47 95       	ror	r20
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    1e02:	ec 85       	ldd	r30, Y+12	; 0x0c
    1e04:	fd 85       	ldd	r31, Y+13	; 0x0d
    1e06:	50 83       	st	Z, r21
  *_ubrrl = baud_setting;
    1e08:	ee 85       	ldd	r30, Y+14	; 0x0e
    1e0a:	ff 85       	ldd	r31, Y+15	; 0x0f
    1e0c:	40 83       	st	Z, r20

  _written = false;
    1e0e:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    1e10:	ec 89       	ldd	r30, Y+20	; 0x14
    1e12:	fd 89       	ldd	r31, Y+21	; 0x15
    1e14:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    1e16:	ea 89       	ldd	r30, Y+18	; 0x12
    1e18:	fb 89       	ldd	r31, Y+19	; 0x13
    1e1a:	80 81       	ld	r24, Z
    1e1c:	80 61       	ori	r24, 0x10	; 16
    1e1e:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    1e20:	ea 89       	ldd	r30, Y+18	; 0x12
    1e22:	fb 89       	ldd	r31, Y+19	; 0x13
    1e24:	80 81       	ld	r24, Z
    1e26:	88 60       	ori	r24, 0x08	; 8
    1e28:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    1e2a:	ea 89       	ldd	r30, Y+18	; 0x12
    1e2c:	fb 89       	ldd	r31, Y+19	; 0x13
    1e2e:	80 81       	ld	r24, Z
    1e30:	80 68       	ori	r24, 0x80	; 128
    1e32:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    1e34:	ea 89       	ldd	r30, Y+18	; 0x12
    1e36:	fb 89       	ldd	r31, Y+19	; 0x13
    1e38:	80 81       	ld	r24, Z
    1e3a:	8f 7d       	andi	r24, 0xDF	; 223
    1e3c:	80 83       	st	Z, r24
}
    1e3e:	df 91       	pop	r29
    1e40:	cf 91       	pop	r28
    1e42:	1f 91       	pop	r17
    1e44:	ff 90       	pop	r15
    1e46:	ef 90       	pop	r14
    1e48:	df 90       	pop	r13
    1e4a:	cf 90       	pop	r12
    1e4c:	08 95       	ret

00001e4e <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    1e4e:	1f 92       	push	r1
    1e50:	0f 92       	push	r0
    1e52:	0f b6       	in	r0, 0x3f	; 63
    1e54:	0f 92       	push	r0
    1e56:	11 24       	eor	r1, r1
    1e58:	2f 93       	push	r18
    1e5a:	8f 93       	push	r24
    1e5c:	9f 93       	push	r25
    1e5e:	ef 93       	push	r30
    1e60:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    1e62:	e0 91 1d 04 	lds	r30, 0x041D	; 0x80041d <Serial+0x10>
    1e66:	f0 91 1e 04 	lds	r31, 0x041E	; 0x80041e <Serial+0x11>
    1e6a:	80 81       	ld	r24, Z
    1e6c:	e0 91 23 04 	lds	r30, 0x0423	; 0x800423 <Serial+0x16>
    1e70:	f0 91 24 04 	lds	r31, 0x0424	; 0x800424 <Serial+0x17>
    1e74:	82 fd       	sbrc	r24, 2
    1e76:	12 c0       	rjmp	.+36     	; 0x1e9c <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    1e78:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    1e7a:	80 91 26 04 	lds	r24, 0x0426	; 0x800426 <Serial+0x19>
    1e7e:	8f 5f       	subi	r24, 0xFF	; 255
    1e80:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    1e82:	20 91 27 04 	lds	r18, 0x0427	; 0x800427 <Serial+0x1a>
    1e86:	82 17       	cp	r24, r18
    1e88:	51 f0       	breq	.+20     	; 0x1e9e <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    1e8a:	e0 91 26 04 	lds	r30, 0x0426	; 0x800426 <Serial+0x19>
    1e8e:	f0 e0       	ldi	r31, 0x00	; 0
    1e90:	e3 5f       	subi	r30, 0xF3	; 243
    1e92:	fb 4f       	sbci	r31, 0xFB	; 251
    1e94:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    1e96:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <Serial+0x19>
    1e9a:	01 c0       	rjmp	.+2      	; 0x1e9e <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    1e9c:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    1e9e:	ff 91       	pop	r31
    1ea0:	ef 91       	pop	r30
    1ea2:	9f 91       	pop	r25
    1ea4:	8f 91       	pop	r24
    1ea6:	2f 91       	pop	r18
    1ea8:	0f 90       	pop	r0
    1eaa:	0f be       	out	0x3f, r0	; 63
    1eac:	0f 90       	pop	r0
    1eae:	1f 90       	pop	r1
    1eb0:	18 95       	reti

00001eb2 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    1eb2:	1f 92       	push	r1
    1eb4:	0f 92       	push	r0
    1eb6:	0f b6       	in	r0, 0x3f	; 63
    1eb8:	0f 92       	push	r0
    1eba:	11 24       	eor	r1, r1
    1ebc:	2f 93       	push	r18
    1ebe:	3f 93       	push	r19
    1ec0:	4f 93       	push	r20
    1ec2:	5f 93       	push	r21
    1ec4:	6f 93       	push	r22
    1ec6:	7f 93       	push	r23
    1ec8:	8f 93       	push	r24
    1eca:	9f 93       	push	r25
    1ecc:	af 93       	push	r26
    1ece:	bf 93       	push	r27
    1ed0:	ef 93       	push	r30
    1ed2:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    1ed4:	8d e0       	ldi	r24, 0x0D	; 13
    1ed6:	94 e0       	ldi	r25, 0x04	; 4
    1ed8:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    1edc:	ff 91       	pop	r31
    1ede:	ef 91       	pop	r30
    1ee0:	bf 91       	pop	r27
    1ee2:	af 91       	pop	r26
    1ee4:	9f 91       	pop	r25
    1ee6:	8f 91       	pop	r24
    1ee8:	7f 91       	pop	r23
    1eea:	6f 91       	pop	r22
    1eec:	5f 91       	pop	r21
    1eee:	4f 91       	pop	r20
    1ef0:	3f 91       	pop	r19
    1ef2:	2f 91       	pop	r18
    1ef4:	0f 90       	pop	r0
    1ef6:	0f be       	out	0x3f, r0	; 63
    1ef8:	0f 90       	pop	r0
    1efa:	1f 90       	pop	r1
    1efc:	18 95       	reti

00001efe <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    1efe:	8d e0       	ldi	r24, 0x0D	; 13
    1f00:	94 e0       	ldi	r25, 0x04	; 4
    1f02:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <_ZN14HardwareSerial9availableEv>
    1f06:	21 e0       	ldi	r18, 0x01	; 1
    1f08:	89 2b       	or	r24, r25
    1f0a:	09 f4       	brne	.+2      	; 0x1f0e <_Z17Serial0_availablev+0x10>
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
}
    1f0e:	82 2f       	mov	r24, r18
    1f10:	08 95       	ret

00001f12 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    1f12:	ed e0       	ldi	r30, 0x0D	; 13
    1f14:	f4 e0       	ldi	r31, 0x04	; 4
    1f16:	13 82       	std	Z+3, r1	; 0x03
    1f18:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    1f1a:	88 ee       	ldi	r24, 0xE8	; 232
    1f1c:	93 e0       	ldi	r25, 0x03	; 3
    1f1e:	a0 e0       	ldi	r26, 0x00	; 0
    1f20:	b0 e0       	ldi	r27, 0x00	; 0
    1f22:	84 83       	std	Z+4, r24	; 0x04
    1f24:	95 83       	std	Z+5, r25	; 0x05
    1f26:	a6 83       	std	Z+6, r26	; 0x06
    1f28:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    1f2a:	88 e7       	ldi	r24, 0x78	; 120
    1f2c:	92 e0       	ldi	r25, 0x02	; 2
    1f2e:	91 83       	std	Z+1, r25	; 0x01
    1f30:	80 83       	st	Z, r24
    1f32:	85 ec       	ldi	r24, 0xC5	; 197
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	95 87       	std	Z+13, r25	; 0x0d
    1f38:	84 87       	std	Z+12, r24	; 0x0c
    1f3a:	84 ec       	ldi	r24, 0xC4	; 196
    1f3c:	90 e0       	ldi	r25, 0x00	; 0
    1f3e:	97 87       	std	Z+15, r25	; 0x0f
    1f40:	86 87       	std	Z+14, r24	; 0x0e
    1f42:	80 ec       	ldi	r24, 0xC0	; 192
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	91 8b       	std	Z+17, r25	; 0x11
    1f48:	80 8b       	std	Z+16, r24	; 0x10
    1f4a:	81 ec       	ldi	r24, 0xC1	; 193
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	93 8b       	std	Z+19, r25	; 0x13
    1f50:	82 8b       	std	Z+18, r24	; 0x12
    1f52:	82 ec       	ldi	r24, 0xC2	; 194
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	95 8b       	std	Z+21, r25	; 0x15
    1f58:	84 8b       	std	Z+20, r24	; 0x14
    1f5a:	86 ec       	ldi	r24, 0xC6	; 198
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	97 8b       	std	Z+23, r25	; 0x17
    1f60:	86 8b       	std	Z+22, r24	; 0x16
    1f62:	11 8e       	std	Z+25, r1	; 0x19
    1f64:	12 8e       	std	Z+26, r1	; 0x1a
    1f66:	13 8e       	std	Z+27, r1	; 0x1b
    1f68:	14 8e       	std	Z+28, r1	; 0x1c
    1f6a:	08 95       	ret

00001f6c <_ZN5Print5writeEPKhj>:
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    1f6c:	cf 92       	push	r12
    1f6e:	df 92       	push	r13
    1f70:	ef 92       	push	r14
    1f72:	ff 92       	push	r15
    1f74:	0f 93       	push	r16
    1f76:	1f 93       	push	r17
    1f78:	cf 93       	push	r28
    1f7a:	df 93       	push	r29
    1f7c:	6c 01       	movw	r12, r24
    1f7e:	7a 01       	movw	r14, r20
    1f80:	8b 01       	movw	r16, r22
    1f82:	c0 e0       	ldi	r28, 0x00	; 0
    1f84:	d0 e0       	ldi	r29, 0x00	; 0
    1f86:	ce 15       	cp	r28, r14
    1f88:	df 05       	cpc	r29, r15
    1f8a:	89 f0       	breq	.+34     	; 0x1fae <_ZN5Print5writeEPKhj+0x42>
    1f8c:	d8 01       	movw	r26, r16
    1f8e:	6d 91       	ld	r22, X+
    1f90:	8d 01       	movw	r16, r26
    1f92:	d6 01       	movw	r26, r12
    1f94:	ed 91       	ld	r30, X+
    1f96:	fc 91       	ld	r31, X
    1f98:	01 90       	ld	r0, Z+
    1f9a:	f0 81       	ld	r31, Z
    1f9c:	e0 2d       	mov	r30, r0
    1f9e:	c6 01       	movw	r24, r12
    1fa0:	09 95       	icall
    1fa2:	89 2b       	or	r24, r25
    1fa4:	11 f4       	brne	.+4      	; 0x1faa <_ZN5Print5writeEPKhj+0x3e>
    1fa6:	7e 01       	movw	r14, r28
    1fa8:	02 c0       	rjmp	.+4      	; 0x1fae <_ZN5Print5writeEPKhj+0x42>
    1faa:	21 96       	adiw	r28, 0x01	; 1
    1fac:	ec cf       	rjmp	.-40     	; 0x1f86 <_ZN5Print5writeEPKhj+0x1a>
    1fae:	c7 01       	movw	r24, r14
    1fb0:	df 91       	pop	r29
    1fb2:	cf 91       	pop	r28
    1fb4:	1f 91       	pop	r17
    1fb6:	0f 91       	pop	r16
    1fb8:	ff 90       	pop	r15
    1fba:	ef 90       	pop	r14
    1fbc:	df 90       	pop	r13
    1fbe:	cf 90       	pop	r12
    1fc0:	08 95       	ret

00001fc2 <_ZN5Print5writeEPKc>:
    1fc2:	61 15       	cp	r22, r1
    1fc4:	71 05       	cpc	r23, r1
    1fc6:	79 f0       	breq	.+30     	; 0x1fe6 <_ZN5Print5writeEPKc+0x24>
    1fc8:	fb 01       	movw	r30, r22
    1fca:	01 90       	ld	r0, Z+
    1fcc:	00 20       	and	r0, r0
    1fce:	e9 f7       	brne	.-6      	; 0x1fca <_ZN5Print5writeEPKc+0x8>
    1fd0:	31 97       	sbiw	r30, 0x01	; 1
    1fd2:	af 01       	movw	r20, r30
    1fd4:	46 1b       	sub	r20, r22
    1fd6:	57 0b       	sbc	r21, r23
    1fd8:	dc 01       	movw	r26, r24
    1fda:	ed 91       	ld	r30, X+
    1fdc:	fc 91       	ld	r31, X
    1fde:	02 80       	ldd	r0, Z+2	; 0x02
    1fe0:	f3 81       	ldd	r31, Z+3	; 0x03
    1fe2:	e0 2d       	mov	r30, r0
    1fe4:	09 94       	ijmp
    1fe6:	80 e0       	ldi	r24, 0x00	; 0
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	08 95       	ret

00001fec <_ZN5Print5printEPKc>:
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    1fec:	0c 94 e1 0f 	jmp	0x1fc2	; 0x1fc2 <_ZN5Print5writeEPKc>

00001ff0 <OsEE_atmega_startTimer1>:
    1ff0:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1ff4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1ff8:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    1ffc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2000:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2004:	61 15       	cp	r22, r1
    2006:	20 e1       	ldi	r18, 0x10	; 16
    2008:	72 07       	cpc	r23, r18
    200a:	81 05       	cpc	r24, r1
    200c:	91 05       	cpc	r25, r1
    200e:	48 f4       	brcc	.+18     	; 0x2022 <OsEE_atmega_startTimer1+0x32>
    2010:	e4 e0       	ldi	r30, 0x04	; 4
    2012:	66 0f       	add	r22, r22
    2014:	77 1f       	adc	r23, r23
    2016:	ea 95       	dec	r30
    2018:	e1 f7       	brne	.-8      	; 0x2012 <OsEE_atmega_startTimer1+0x22>
    201a:	61 50       	subi	r22, 0x01	; 1
    201c:	71 09       	sbc	r23, r1
    201e:	81 e0       	ldi	r24, 0x01	; 1
    2020:	42 c0       	rjmp	.+132    	; 0x20a6 <OsEE_atmega_startTimer1+0xb6>
    2022:	61 15       	cp	r22, r1
    2024:	20 e8       	ldi	r18, 0x80	; 128
    2026:	72 07       	cpc	r23, r18
    2028:	81 05       	cpc	r24, r1
    202a:	91 05       	cpc	r25, r1
    202c:	30 f4       	brcc	.+12     	; 0x203a <OsEE_atmega_startTimer1+0x4a>
    202e:	66 0f       	add	r22, r22
    2030:	77 1f       	adc	r23, r23
    2032:	61 50       	subi	r22, 0x01	; 1
    2034:	71 09       	sbc	r23, r1
    2036:	82 e0       	ldi	r24, 0x02	; 2
    2038:	36 c0       	rjmp	.+108    	; 0x20a6 <OsEE_atmega_startTimer1+0xb6>
    203a:	6c 3f       	cpi	r22, 0xFC	; 252
    203c:	2f ef       	ldi	r18, 0xFF	; 255
    203e:	72 07       	cpc	r23, r18
    2040:	23 e0       	ldi	r18, 0x03	; 3
    2042:	82 07       	cpc	r24, r18
    2044:	91 05       	cpc	r25, r1
    2046:	70 f4       	brcc	.+28     	; 0x2064 <OsEE_atmega_startTimer1+0x74>
    2048:	dc 01       	movw	r26, r24
    204a:	cb 01       	movw	r24, r22
    204c:	42 e0       	ldi	r20, 0x02	; 2
    204e:	b6 95       	lsr	r27
    2050:	a7 95       	ror	r26
    2052:	97 95       	ror	r25
    2054:	87 95       	ror	r24
    2056:	4a 95       	dec	r20
    2058:	d1 f7       	brne	.-12     	; 0x204e <OsEE_atmega_startTimer1+0x5e>
    205a:	bc 01       	movw	r22, r24
    205c:	61 50       	subi	r22, 0x01	; 1
    205e:	71 09       	sbc	r23, r1
    2060:	83 e0       	ldi	r24, 0x03	; 3
    2062:	21 c0       	rjmp	.+66     	; 0x20a6 <OsEE_atmega_startTimer1+0xb6>
    2064:	61 15       	cp	r22, r1
    2066:	71 05       	cpc	r23, r1
    2068:	20 e1       	ldi	r18, 0x10	; 16
    206a:	82 07       	cpc	r24, r18
    206c:	91 05       	cpc	r25, r1
    206e:	70 f4       	brcc	.+28     	; 0x208c <OsEE_atmega_startTimer1+0x9c>
    2070:	dc 01       	movw	r26, r24
    2072:	cb 01       	movw	r24, r22
    2074:	34 e0       	ldi	r19, 0x04	; 4
    2076:	b6 95       	lsr	r27
    2078:	a7 95       	ror	r26
    207a:	97 95       	ror	r25
    207c:	87 95       	ror	r24
    207e:	3a 95       	dec	r19
    2080:	d1 f7       	brne	.-12     	; 0x2076 <OsEE_atmega_startTimer1+0x86>
    2082:	bc 01       	movw	r22, r24
    2084:	61 50       	subi	r22, 0x01	; 1
    2086:	71 09       	sbc	r23, r1
    2088:	84 e0       	ldi	r24, 0x04	; 4
    208a:	0d c0       	rjmp	.+26     	; 0x20a6 <OsEE_atmega_startTimer1+0xb6>
    208c:	dc 01       	movw	r26, r24
    208e:	cb 01       	movw	r24, r22
    2090:	26 e0       	ldi	r18, 0x06	; 6
    2092:	b6 95       	lsr	r27
    2094:	a7 95       	ror	r26
    2096:	97 95       	ror	r25
    2098:	87 95       	ror	r24
    209a:	2a 95       	dec	r18
    209c:	d1 f7       	brne	.-12     	; 0x2092 <OsEE_atmega_startTimer1+0xa2>
    209e:	bc 01       	movw	r22, r24
    20a0:	61 50       	subi	r22, 0x01	; 1
    20a2:	71 09       	sbc	r23, r1
    20a4:	85 e0       	ldi	r24, 0x05	; 5
    20a6:	92 e0       	ldi	r25, 0x02	; 2
    20a8:	96 bb       	out	0x16, r25	; 22
    20aa:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    20ae:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    20b2:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    20b6:	88 60       	ori	r24, 0x08	; 8
    20b8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    20bc:	08 95       	ret

000020be <StartOS>:
    20be:	4f 92       	push	r4
    20c0:	5f 92       	push	r5
    20c2:	6f 92       	push	r6
    20c4:	7f 92       	push	r7
    20c6:	8f 92       	push	r8
    20c8:	9f 92       	push	r9
    20ca:	af 92       	push	r10
    20cc:	bf 92       	push	r11
    20ce:	cf 92       	push	r12
    20d0:	df 92       	push	r13
    20d2:	ef 92       	push	r14
    20d4:	ff 92       	push	r15
    20d6:	0f 93       	push	r16
    20d8:	1f 93       	push	r17
    20da:	cf 93       	push	r28
    20dc:	df 93       	push	r29
    20de:	00 d0       	rcall	.+0      	; 0x20e0 <StartOS+0x22>
    20e0:	cd b7       	in	r28, 0x3d	; 61
    20e2:	de b7       	in	r29, 0x3e	; 62
    20e4:	00 91 e8 01 	lds	r16, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    20e8:	10 91 e9 01 	lds	r17, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    20ec:	9f b7       	in	r25, 0x3f	; 63
    20ee:	f8 94       	cli
    20f0:	d8 01       	movw	r26, r16
    20f2:	18 96       	adiw	r26, 0x08	; 8
    20f4:	2d 91       	ld	r18, X+
    20f6:	3c 91       	ld	r19, X
    20f8:	19 97       	sbiw	r26, 0x09	; 9
    20fa:	23 2b       	or	r18, r19
    20fc:	09 f0       	breq	.+2      	; 0x2100 <StartOS+0x42>
    20fe:	6d c0       	rjmp	.+218    	; 0x21da <StartOS+0x11c>
    2100:	f8 2e       	mov	r15, r24
    2102:	8e e0       	ldi	r24, 0x0E	; 14
    2104:	94 e1       	ldi	r25, 0x14	; 20
    2106:	9a 83       	std	Y+2, r25	; 0x02
    2108:	89 83       	std	Y+1, r24	; 0x01
    210a:	c0 90 ec 01 	lds	r12, 0x01EC	; 0x8001ec <osEE_cdb_var+0x4>
    210e:	d0 90 ed 01 	lds	r13, 0x01ED	; 0x8001ed <osEE_cdb_var+0x5>
    2112:	81 e0       	ldi	r24, 0x01	; 1
    2114:	90 e0       	ldi	r25, 0x00	; 0
    2116:	19 96       	adiw	r26, 0x09	; 9
    2118:	9c 93       	st	X, r25
    211a:	8e 93       	st	-X, r24
    211c:	18 97       	sbiw	r26, 0x08	; 8
    211e:	1a 96       	adiw	r26, 0x0a	; 10
    2120:	fc 92       	st	X, r15
    2122:	0e 94 d8 0b 	call	0x17b0	; 0x17b0 <StartupHook>
    2126:	40 90 ee 01 	lds	r4, 0x01EE	; 0x8001ee <osEE_cdb_var+0x6>
    212a:	50 90 ef 01 	lds	r5, 0x01EF	; 0x8001ef <osEE_cdb_var+0x7>
    212e:	48 01       	movw	r8, r16
    2130:	b2 e0       	ldi	r27, 0x02	; 2
    2132:	8b 0e       	add	r8, r27
    2134:	91 1c       	adc	r9, r1
    2136:	f2 01       	movw	r30, r4
    2138:	84 e0       	ldi	r24, 0x04	; 4
    213a:	f8 9e       	mul	r15, r24
    213c:	e0 0d       	add	r30, r0
    213e:	f1 1d       	adc	r31, r1
    2140:	11 24       	eor	r1, r1
    2142:	a2 80       	ldd	r10, Z+2	; 0x02
    2144:	b3 80       	ldd	r11, Z+3	; 0x03
    2146:	e1 2c       	mov	r14, r1
    2148:	f1 2c       	mov	r15, r1
    214a:	2f 01       	movw	r4, r30
    214c:	66 24       	eor	r6, r6
    214e:	63 94       	inc	r6
    2150:	71 2c       	mov	r7, r1
    2152:	ea 14       	cp	r14, r10
    2154:	fb 04       	cpc	r15, r11
    2156:	31 f1       	breq	.+76     	; 0x21a4 <StartOS+0xe6>
    2158:	d2 01       	movw	r26, r4
    215a:	ed 91       	ld	r30, X+
    215c:	fc 91       	ld	r31, X
    215e:	c7 01       	movw	r24, r14
    2160:	88 0f       	add	r24, r24
    2162:	99 1f       	adc	r25, r25
    2164:	e8 0f       	add	r30, r24
    2166:	f9 1f       	adc	r31, r25
    2168:	40 81       	ld	r20, Z
    216a:	51 81       	ldd	r21, Z+1	; 0x01
    216c:	da 01       	movw	r26, r20
    216e:	14 96       	adiw	r26, 0x04	; 4
    2170:	ed 91       	ld	r30, X+
    2172:	fc 91       	ld	r31, X
    2174:	15 97       	sbiw	r26, 0x05	; 5
    2176:	80 81       	ld	r24, Z
    2178:	8f 5f       	subi	r24, 0xFF	; 255
    217a:	80 83       	st	Z, r24
    217c:	73 82       	std	Z+3, r7	; 0x03
    217e:	62 82       	std	Z+2, r6	; 0x02
    2180:	f8 01       	movw	r30, r16
    2182:	64 81       	ldd	r22, Z+4	; 0x04
    2184:	75 81       	ldd	r23, Z+5	; 0x05
    2186:	db 01       	movw	r26, r22
    2188:	8d 91       	ld	r24, X+
    218a:	9c 91       	ld	r25, X
    218c:	11 97       	sbiw	r26, 0x01	; 1
    218e:	95 83       	std	Z+5, r25	; 0x05
    2190:	84 83       	std	Z+4, r24	; 0x04
    2192:	1d 92       	st	X+, r1
    2194:	1c 92       	st	X, r1
    2196:	c4 01       	movw	r24, r8
    2198:	0e 94 27 12 	call	0x244e	; 0x244e <osEE_scheduler_rq_insert>
    219c:	bf ef       	ldi	r27, 0xFF	; 255
    219e:	eb 1a       	sub	r14, r27
    21a0:	fb 0a       	sbc	r15, r27
    21a2:	d7 cf       	rjmp	.-82     	; 0x2152 <StartOS+0x94>
    21a4:	f8 01       	movw	r30, r16
    21a6:	80 85       	ldd	r24, Z+8	; 0x08
    21a8:	91 85       	ldd	r25, Z+9	; 0x09
    21aa:	01 97       	sbiw	r24, 0x01	; 1
    21ac:	21 f4       	brne	.+8      	; 0x21b6 <StartOS+0xf8>
    21ae:	82 e0       	ldi	r24, 0x02	; 2
    21b0:	90 e0       	ldi	r25, 0x00	; 0
    21b2:	91 87       	std	Z+9, r25	; 0x09
    21b4:	80 87       	std	Z+8, r24	; 0x08
    21b6:	d8 01       	movw	r26, r16
    21b8:	18 96       	adiw	r26, 0x08	; 8
    21ba:	8d 91       	ld	r24, X+
    21bc:	9c 91       	ld	r25, X
    21be:	19 97       	sbiw	r26, 0x09	; 9
    21c0:	02 97       	sbiw	r24, 0x02	; 2
    21c2:	79 f4       	brne	.+30     	; 0x21e2 <StartOS+0x124>
    21c4:	f6 01       	movw	r30, r12
    21c6:	62 81       	ldd	r22, Z+2	; 0x02
    21c8:	73 81       	ldd	r23, Z+3	; 0x03
    21ca:	ab 01       	movw	r20, r22
    21cc:	c6 01       	movw	r24, r12
    21ce:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>
    21d2:	c6 01       	movw	r24, r12
    21d4:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <osEE_task_end>
    21d8:	04 c0       	rjmp	.+8      	; 0x21e2 <StartOS+0x124>
    21da:	9f bf       	out	0x3f, r25	; 63
    21dc:	81 e0       	ldi	r24, 0x01	; 1
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	02 c0       	rjmp	.+4      	; 0x21e6 <StartOS+0x128>
    21e2:	80 e0       	ldi	r24, 0x00	; 0
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	0f 90       	pop	r0
    21e8:	0f 90       	pop	r0
    21ea:	df 91       	pop	r29
    21ec:	cf 91       	pop	r28
    21ee:	1f 91       	pop	r17
    21f0:	0f 91       	pop	r16
    21f2:	ff 90       	pop	r15
    21f4:	ef 90       	pop	r14
    21f6:	df 90       	pop	r13
    21f8:	cf 90       	pop	r12
    21fa:	bf 90       	pop	r11
    21fc:	af 90       	pop	r10
    21fe:	9f 90       	pop	r9
    2200:	8f 90       	pop	r8
    2202:	7f 90       	pop	r7
    2204:	6f 90       	pop	r6
    2206:	5f 90       	pop	r5
    2208:	4f 90       	pop	r4
    220a:	08 95       	ret

0000220c <ActivateTask>:
    220c:	ff 92       	push	r15
    220e:	0f 93       	push	r16
    2210:	1f 93       	push	r17
    2212:	cf 93       	push	r28
    2214:	df 93       	push	r29
    2216:	90 e0       	ldi	r25, 0x00	; 0
    2218:	20 91 e6 01 	lds	r18, 0x01E6	; 0x8001e6 <osEE_kdb_var+0x4>
    221c:	30 91 e7 01 	lds	r19, 0x01E7	; 0x8001e7 <osEE_kdb_var+0x5>
    2220:	82 17       	cp	r24, r18
    2222:	93 07       	cpc	r25, r19
    2224:	f0 f4       	brcc	.+60     	; 0x2262 <ActivateTask+0x56>
    2226:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <osEE_kdb_var+0x2>
    222a:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <osEE_kdb_var+0x3>
    222e:	88 0f       	add	r24, r24
    2230:	99 1f       	adc	r25, r25
    2232:	e8 0f       	add	r30, r24
    2234:	f9 1f       	adc	r31, r25
    2236:	00 81       	ld	r16, Z
    2238:	11 81       	ldd	r17, Z+1	; 0x01
    223a:	f8 01       	movw	r30, r16
    223c:	87 81       	ldd	r24, Z+7	; 0x07
    223e:	90 85       	ldd	r25, Z+8	; 0x08
    2240:	02 97       	sbiw	r24, 0x02	; 2
    2242:	78 f4       	brcc	.+30     	; 0x2262 <ActivateTask+0x56>
    2244:	ff b6       	in	r15, 0x3f	; 63
    2246:	f8 94       	cli
    2248:	c8 01       	movw	r24, r16
    224a:	0e 94 58 12 	call	0x24b0	; 0x24b0 <osEE_task_activated>
    224e:	ec 01       	movw	r28, r24
    2250:	89 2b       	or	r24, r25
    2252:	29 f4       	brne	.+10     	; 0x225e <ActivateTask+0x52>
    2254:	b8 01       	movw	r22, r16
    2256:	82 ee       	ldi	r24, 0xE2	; 226
    2258:	91 e0       	ldi	r25, 0x01	; 1
    225a:	0e 94 99 12 	call	0x2532	; 0x2532 <osEE_scheduler_task_activated>
    225e:	ff be       	out	0x3f, r15	; 63
    2260:	02 c0       	rjmp	.+4      	; 0x2266 <ActivateTask+0x5a>
    2262:	c3 e0       	ldi	r28, 0x03	; 3
    2264:	d0 e0       	ldi	r29, 0x00	; 0
    2266:	ce 01       	movw	r24, r28
    2268:	df 91       	pop	r29
    226a:	cf 91       	pop	r28
    226c:	1f 91       	pop	r17
    226e:	0f 91       	pop	r16
    2270:	ff 90       	pop	r15
    2272:	08 95       	ret

00002274 <osEE_scheduler_task_wrapper_restore>:
    2274:	dc 01       	movw	r26, r24
    2276:	14 96       	adiw	r26, 0x04	; 4
    2278:	ed 91       	ld	r30, X+
    227a:	fc 91       	ld	r31, X
    227c:	15 97       	sbiw	r26, 0x05	; 5
    227e:	84 e0       	ldi	r24, 0x04	; 4
    2280:	90 e0       	ldi	r25, 0x00	; 0
    2282:	93 83       	std	Z+3, r25	; 0x03
    2284:	82 83       	std	Z+2, r24	; 0x02
    2286:	08 95       	ret

00002288 <osEE_scheduler_task_wrapper_run>:
    2288:	ec 01       	movw	r28, r24
    228a:	ec 81       	ldd	r30, Y+4	; 0x04
    228c:	fd 81       	ldd	r31, Y+5	; 0x05
    228e:	81 81       	ldd	r24, Z+1	; 0x01
    2290:	24 e0       	ldi	r18, 0x04	; 4
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	33 83       	std	Z+3, r19	; 0x03
    2296:	22 83       	std	Z+2, r18	; 0x02
    2298:	8f 3f       	cpi	r24, 0xFF	; 255
    229a:	09 f0       	breq	.+2      	; 0x229e <osEE_scheduler_task_wrapper_run+0x16>
    229c:	78 94       	sei
    229e:	e9 85       	ldd	r30, Y+9	; 0x09
    22a0:	fa 85       	ldd	r31, Y+10	; 0x0a
    22a2:	09 95       	icall
    22a4:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    22a8:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    22ac:	10 8a       	std	Z+16, r1	; 0x10
    22ae:	87 85       	ldd	r24, Z+15	; 0x0f
    22b0:	88 23       	and	r24, r24
    22b2:	19 f0       	breq	.+6      	; 0x22ba <osEE_scheduler_task_wrapper_run+0x32>
    22b4:	17 86       	std	Z+15, r1	; 0x0f
    22b6:	85 85       	ldd	r24, Z+13	; 0x0d
    22b8:	8f bf       	out	0x3f, r24	; 63
    22ba:	81 89       	ldd	r24, Z+17	; 0x11
    22bc:	88 23       	and	r24, r24
    22be:	11 f0       	breq	.+4      	; 0x22c4 <osEE_scheduler_task_wrapper_run+0x3c>
    22c0:	11 8a       	std	Z+17, r1	; 0x11
    22c2:	78 94       	sei
    22c4:	8f b7       	in	r24, 0x3f	; 63
    22c6:	f8 94       	cli
    22c8:	66 ef       	ldi	r22, 0xF6	; 246
    22ca:	73 e1       	ldi	r23, 0x13	; 19
    22cc:	8a 81       	ldd	r24, Y+2	; 0x02
    22ce:	9b 81       	ldd	r25, Y+3	; 0x03
    22d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <osEE_hal_terminate_ctx>

000022d4 <osEE_idle_hook_wrapper>:
    22d4:	0f 93       	push	r16
    22d6:	1f 93       	push	r17
    22d8:	cf 93       	push	r28
    22da:	df 93       	push	r29
    22dc:	cf b7       	in	r28, 0x3f	; 63
    22de:	f8 94       	cli
    22e0:	82 ee       	ldi	r24, 0xE2	; 226
    22e2:	91 e0       	ldi	r25, 0x01	; 1
    22e4:	0e 94 5f 13 	call	0x26be	; 0x26be <osEE_scheduler_task_preemption_point>
    22e8:	cf bf       	out	0x3f, r28	; 63
    22ea:	00 91 e8 01 	lds	r16, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    22ee:	10 91 e9 01 	lds	r17, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    22f2:	c0 91 ea 01 	lds	r28, 0x01EA	; 0x8001ea <osEE_cdb_var+0x2>
    22f6:	d0 91 eb 01 	lds	r29, 0x01EB	; 0x8001eb <osEE_cdb_var+0x3>
    22fa:	f8 01       	movw	r30, r16
    22fc:	80 85       	ldd	r24, Z+8	; 0x08
    22fe:	91 85       	ldd	r25, Z+9	; 0x09
    2300:	02 97       	sbiw	r24, 0x02	; 2
    2302:	29 f4       	brne	.+10     	; 0x230e <osEE_idle_hook_wrapper+0x3a>
    2304:	20 97       	sbiw	r28, 0x00	; 0
    2306:	c9 f3       	breq	.-14     	; 0x22fa <osEE_idle_hook_wrapper+0x26>
    2308:	fe 01       	movw	r30, r28
    230a:	09 95       	icall
    230c:	f6 cf       	rjmp	.-20     	; 0x22fa <osEE_idle_hook_wrapper+0x26>
    230e:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <osEE_cdb_var+0x4>
    2312:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <osEE_cdb_var+0x5>
    2316:	df 91       	pop	r29
    2318:	cf 91       	pop	r28
    231a:	1f 91       	pop	r17
    231c:	0f 91       	pop	r16
    231e:	0c 94 db 13 	jmp	0x27b6	; 0x27b6 <osEE_idle_task_terminate>

00002322 <osEE_scheduler_core_rq_preempt_stk>:
    2322:	0f 93       	push	r16
    2324:	1f 93       	push	r17
    2326:	cf 93       	push	r28
    2328:	df 93       	push	r29
    232a:	ec 01       	movw	r28, r24
    232c:	a8 81       	ld	r26, Y
    232e:	b9 81       	ldd	r27, Y+1	; 0x01
    2330:	eb 01       	movw	r28, r22
    2332:	e8 81       	ld	r30, Y
    2334:	f9 81       	ldd	r31, Y+1	; 0x01
    2336:	16 96       	adiw	r26, 0x06	; 6
    2338:	cd 91       	ld	r28, X+
    233a:	dc 91       	ld	r29, X
    233c:	17 97       	sbiw	r26, 0x07	; 7
    233e:	20 97       	sbiw	r28, 0x00	; 0
    2340:	b1 f0       	breq	.+44     	; 0x236e <osEE_scheduler_core_rq_preempt_stk+0x4c>
    2342:	8a 81       	ldd	r24, Y+2	; 0x02
    2344:	9b 81       	ldd	r25, Y+3	; 0x03
    2346:	30 97       	sbiw	r30, 0x00	; 0
    2348:	e1 f1       	breq	.+120    	; 0x23c2 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    234a:	ec 01       	movw	r28, r24
    234c:	0c 81       	ldd	r16, Y+4	; 0x04
    234e:	1d 81       	ldd	r17, Y+5	; 0x05
    2350:	22 81       	ldd	r18, Z+2	; 0x02
    2352:	33 81       	ldd	r19, Z+3	; 0x03
    2354:	e9 01       	movw	r28, r18
    2356:	4c 81       	ldd	r20, Y+4	; 0x04
    2358:	5d 81       	ldd	r21, Y+5	; 0x05
    235a:	e8 01       	movw	r28, r16
    235c:	39 81       	ldd	r19, Y+1	; 0x01
    235e:	ea 01       	movw	r28, r20
    2360:	29 81       	ldd	r18, Y+1	; 0x01
    2362:	32 17       	cp	r19, r18
    2364:	70 f5       	brcc	.+92     	; 0x23c2 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    2366:	22 e0       	ldi	r18, 0x02	; 2
    2368:	30 e0       	ldi	r19, 0x00	; 0
    236a:	e8 01       	movw	r28, r16
    236c:	0b c0       	rjmp	.+22     	; 0x2384 <osEE_scheduler_core_rq_preempt_stk+0x62>
    236e:	30 97       	sbiw	r30, 0x00	; 0
    2370:	41 f1       	breq	.+80     	; 0x23c2 <osEE_scheduler_core_rq_preempt_stk+0xa0>
    2372:	ec 01       	movw	r28, r24
    2374:	8c 81       	ldd	r24, Y+4	; 0x04
    2376:	9d 81       	ldd	r25, Y+5	; 0x05
    2378:	ec 01       	movw	r28, r24
    237a:	4c 81       	ldd	r20, Y+4	; 0x04
    237c:	5d 81       	ldd	r21, Y+5	; 0x05
    237e:	22 e0       	ldi	r18, 0x02	; 2
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	ea 01       	movw	r28, r20
    2384:	3b 83       	std	Y+3, r19	; 0x03
    2386:	2a 83       	std	Y+2, r18	; 0x02
    2388:	20 81       	ld	r18, Z
    238a:	31 81       	ldd	r19, Z+1	; 0x01
    238c:	eb 01       	movw	r28, r22
    238e:	39 83       	std	Y+1, r19	; 0x01
    2390:	28 83       	st	Y, r18
    2392:	c2 81       	ldd	r28, Z+2	; 0x02
    2394:	d3 81       	ldd	r29, Z+3	; 0x03
    2396:	4c 81       	ldd	r20, Y+4	; 0x04
    2398:	5d 81       	ldd	r21, Y+5	; 0x05
    239a:	16 96       	adiw	r26, 0x06	; 6
    239c:	2d 91       	ld	r18, X+
    239e:	3c 91       	ld	r19, X
    23a0:	17 97       	sbiw	r26, 0x07	; 7
    23a2:	31 83       	std	Z+1, r19	; 0x01
    23a4:	20 83       	st	Z, r18
    23a6:	17 96       	adiw	r26, 0x07	; 7
    23a8:	fc 93       	st	X, r31
    23aa:	ee 93       	st	-X, r30
    23ac:	16 97       	sbiw	r26, 0x06	; 6
    23ae:	cd 93       	st	X+, r28
    23b0:	dc 93       	st	X, r29
    23b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    23b4:	fa 01       	movw	r30, r20
    23b6:	31 81       	ldd	r19, Z+1	; 0x01
    23b8:	32 17       	cp	r19, r18
    23ba:	28 f4       	brcc	.+10     	; 0x23c6 <osEE_scheduler_core_rq_preempt_stk+0xa4>
    23bc:	fa 01       	movw	r30, r20
    23be:	21 83       	std	Z+1, r18	; 0x01
    23c0:	02 c0       	rjmp	.+4      	; 0x23c6 <osEE_scheduler_core_rq_preempt_stk+0xa4>
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	df 91       	pop	r29
    23c8:	cf 91       	pop	r28
    23ca:	1f 91       	pop	r17
    23cc:	0f 91       	pop	r16
    23ce:	08 95       	ret

000023d0 <osEE_sn_priority_insert>:
    23d0:	0f 93       	push	r16
    23d2:	1f 93       	push	r17
    23d4:	cf 93       	push	r28
    23d6:	df 93       	push	r29
    23d8:	db 01       	movw	r26, r22
    23da:	12 96       	adiw	r26, 0x02	; 2
    23dc:	ed 91       	ld	r30, X+
    23de:	fc 91       	ld	r31, X
    23e0:	13 97       	sbiw	r26, 0x03	; 3
    23e2:	a4 81       	ldd	r26, Z+4	; 0x04
    23e4:	b5 81       	ldd	r27, Z+5	; 0x05
    23e6:	41 15       	cp	r20, r1
    23e8:	51 05       	cpc	r21, r1
    23ea:	11 f0       	breq	.+4      	; 0x23f0 <osEE_sn_priority_insert+0x20>
    23ec:	23 85       	ldd	r18, Z+11	; 0x0b
    23ee:	02 c0       	rjmp	.+4      	; 0x23f4 <osEE_sn_priority_insert+0x24>
    23f0:	11 96       	adiw	r26, 0x01	; 1
    23f2:	2c 91       	ld	r18, X
    23f4:	ec 01       	movw	r28, r24
    23f6:	e8 81       	ld	r30, Y
    23f8:	f9 81       	ldd	r31, Y+1	; 0x01
    23fa:	a0 e0       	ldi	r26, 0x00	; 0
    23fc:	b0 e0       	ldi	r27, 0x00	; 0
    23fe:	30 97       	sbiw	r30, 0x00	; 0
    2400:	91 f0       	breq	.+36     	; 0x2426 <osEE_sn_priority_insert+0x56>
    2402:	c2 81       	ldd	r28, Z+2	; 0x02
    2404:	d3 81       	ldd	r29, Z+3	; 0x03
    2406:	0c 81       	ldd	r16, Y+4	; 0x04
    2408:	1d 81       	ldd	r17, Y+5	; 0x05
    240a:	41 15       	cp	r20, r1
    240c:	51 05       	cpc	r21, r1
    240e:	11 f0       	breq	.+4      	; 0x2414 <osEE_sn_priority_insert+0x44>
    2410:	3b 85       	ldd	r19, Y+11	; 0x0b
    2412:	02 c0       	rjmp	.+4      	; 0x2418 <osEE_sn_priority_insert+0x48>
    2414:	e8 01       	movw	r28, r16
    2416:	39 81       	ldd	r19, Y+1	; 0x01
    2418:	32 17       	cp	r19, r18
    241a:	28 f0       	brcs	.+10     	; 0x2426 <osEE_sn_priority_insert+0x56>
    241c:	df 01       	movw	r26, r30
    241e:	01 90       	ld	r0, Z+
    2420:	f0 81       	ld	r31, Z
    2422:	e0 2d       	mov	r30, r0
    2424:	ec cf       	rjmp	.-40     	; 0x23fe <osEE_sn_priority_insert+0x2e>
    2426:	10 97       	sbiw	r26, 0x00	; 0
    2428:	29 f0       	breq	.+10     	; 0x2434 <osEE_sn_priority_insert+0x64>
    242a:	6d 93       	st	X+, r22
    242c:	7c 93       	st	X, r23
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	90 e0       	ldi	r25, 0x00	; 0
    2432:	05 c0       	rjmp	.+10     	; 0x243e <osEE_sn_priority_insert+0x6e>
    2434:	dc 01       	movw	r26, r24
    2436:	6d 93       	st	X+, r22
    2438:	7c 93       	st	X, r23
    243a:	81 e0       	ldi	r24, 0x01	; 1
    243c:	90 e0       	ldi	r25, 0x00	; 0
    243e:	eb 01       	movw	r28, r22
    2440:	f9 83       	std	Y+1, r31	; 0x01
    2442:	e8 83       	st	Y, r30
    2444:	df 91       	pop	r29
    2446:	cf 91       	pop	r28
    2448:	1f 91       	pop	r17
    244a:	0f 91       	pop	r16
    244c:	08 95       	ret

0000244e <osEE_scheduler_rq_insert>:
    244e:	fb 01       	movw	r30, r22
    2450:	53 83       	std	Z+3, r21	; 0x03
    2452:	42 83       	std	Z+2, r20	; 0x02
    2454:	41 e0       	ldi	r20, 0x01	; 1
    2456:	50 e0       	ldi	r21, 0x00	; 0
    2458:	0c 94 e8 11 	jmp	0x23d0	; 0x23d0 <osEE_sn_priority_insert>

0000245c <osEE_scheduler_core_pop_running>:
    245c:	ef 92       	push	r14
    245e:	ff 92       	push	r15
    2460:	0f 93       	push	r16
    2462:	1f 93       	push	r17
    2464:	cf 93       	push	r28
    2466:	df 93       	push	r29
    2468:	8c 01       	movw	r16, r24
    246a:	fc 01       	movw	r30, r24
    246c:	c0 81       	ld	r28, Z
    246e:	d1 81       	ldd	r29, Z+1	; 0x01
    2470:	ee 80       	ldd	r14, Y+6	; 0x06
    2472:	ff 80       	ldd	r15, Y+7	; 0x07
    2474:	f7 01       	movw	r30, r14
    2476:	80 81       	ld	r24, Z
    2478:	91 81       	ldd	r25, Z+1	; 0x01
    247a:	9f 83       	std	Y+7, r25	; 0x07
    247c:	8e 83       	std	Y+6, r24	; 0x06
    247e:	c8 01       	movw	r24, r16
    2480:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_core_rq_preempt_stk>
    2484:	ee 81       	ldd	r30, Y+6	; 0x06
    2486:	ff 81       	ldd	r31, Y+7	; 0x07
    2488:	89 2b       	or	r24, r25
    248a:	51 f4       	brne	.+20     	; 0x24a0 <osEE_scheduler_core_pop_running+0x44>
    248c:	30 97       	sbiw	r30, 0x00	; 0
    248e:	19 f0       	breq	.+6      	; 0x2496 <osEE_scheduler_core_pop_running+0x3a>
    2490:	82 81       	ldd	r24, Z+2	; 0x02
    2492:	93 81       	ldd	r25, Z+3	; 0x03
    2494:	03 c0       	rjmp	.+6      	; 0x249c <osEE_scheduler_core_pop_running+0x40>
    2496:	f8 01       	movw	r30, r16
    2498:	84 81       	ldd	r24, Z+4	; 0x04
    249a:	95 81       	ldd	r25, Z+5	; 0x05
    249c:	99 83       	std	Y+1, r25	; 0x01
    249e:	88 83       	st	Y, r24
    24a0:	c7 01       	movw	r24, r14
    24a2:	df 91       	pop	r29
    24a4:	cf 91       	pop	r28
    24a6:	1f 91       	pop	r17
    24a8:	0f 91       	pop	r16
    24aa:	ff 90       	pop	r15
    24ac:	ef 90       	pop	r14
    24ae:	08 95       	ret

000024b0 <osEE_task_activated>:
    24b0:	dc 01       	movw	r26, r24
    24b2:	14 96       	adiw	r26, 0x04	; 4
    24b4:	ed 91       	ld	r30, X+
    24b6:	fc 91       	ld	r31, X
    24b8:	15 97       	sbiw	r26, 0x05	; 5
    24ba:	90 81       	ld	r25, Z
    24bc:	1d 96       	adiw	r26, 0x0d	; 13
    24be:	8c 91       	ld	r24, X
    24c0:	98 17       	cp	r25, r24
    24c2:	28 f4       	brcc	.+10     	; 0x24ce <osEE_task_activated+0x1e>
    24c4:	9f 5f       	subi	r25, 0xFF	; 255
    24c6:	90 83       	st	Z, r25
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	08 95       	ret
    24ce:	84 e0       	ldi	r24, 0x04	; 4
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	08 95       	ret

000024d4 <osEE_task_end>:
    24d4:	dc 01       	movw	r26, r24
    24d6:	14 96       	adiw	r26, 0x04	; 4
    24d8:	ed 91       	ld	r30, X+
    24da:	fc 91       	ld	r31, X
    24dc:	15 97       	sbiw	r26, 0x05	; 5
    24de:	1b 96       	adiw	r26, 0x0b	; 11
    24e0:	8c 91       	ld	r24, X
    24e2:	81 83       	std	Z+1, r24	; 0x01
    24e4:	80 81       	ld	r24, Z
    24e6:	81 50       	subi	r24, 0x01	; 1
    24e8:	80 83       	st	Z, r24
    24ea:	81 11       	cpse	r24, r1
    24ec:	03 c0       	rjmp	.+6      	; 0x24f4 <osEE_task_end+0x20>
    24ee:	13 82       	std	Z+3, r1	; 0x03
    24f0:	12 82       	std	Z+2, r1	; 0x02
    24f2:	08 95       	ret
    24f4:	81 e0       	ldi	r24, 0x01	; 1
    24f6:	90 e0       	ldi	r25, 0x00	; 0
    24f8:	93 83       	std	Z+3, r25	; 0x03
    24fa:	82 83       	std	Z+2, r24	; 0x02
    24fc:	08 95       	ret

000024fe <osEE_activate_isr2>:
    24fe:	20 91 e4 01 	lds	r18, 0x01E4	; 0x8001e4 <osEE_kdb_var+0x2>
    2502:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <osEE_kdb_var+0x3>
    2506:	e2 2f       	mov	r30, r18
    2508:	f9 2f       	mov	r31, r25
    250a:	e8 0f       	add	r30, r24
    250c:	f1 1d       	adc	r31, r1
    250e:	e8 0f       	add	r30, r24
    2510:	f1 1d       	adc	r31, r1
    2512:	60 81       	ld	r22, Z
    2514:	71 81       	ldd	r23, Z+1	; 0x01
    2516:	db 01       	movw	r26, r22
    2518:	14 96       	adiw	r26, 0x04	; 4
    251a:	ed 91       	ld	r30, X+
    251c:	fc 91       	ld	r31, X
    251e:	15 97       	sbiw	r26, 0x05	; 5
    2520:	80 81       	ld	r24, Z
    2522:	8f 5f       	subi	r24, 0xFF	; 255
    2524:	80 83       	st	Z, r24
    2526:	40 e0       	ldi	r20, 0x00	; 0
    2528:	50 e0       	ldi	r21, 0x00	; 0
    252a:	82 ee       	ldi	r24, 0xE2	; 226
    252c:	91 e0       	ldi	r25, 0x01	; 1
    252e:	0c 94 7a 13 	jmp	0x26f4	; 0x26f4 <osEE_scheduler_task_set_running>

00002532 <osEE_scheduler_task_activated>:
    2532:	cf 93       	push	r28
    2534:	df 93       	push	r29
    2536:	db 01       	movw	r26, r22
    2538:	14 96       	adiw	r26, 0x04	; 4
    253a:	cd 91       	ld	r28, X+
    253c:	dc 91       	ld	r29, X
    253e:	15 97       	sbiw	r26, 0x05	; 5
    2540:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    2544:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    2548:	80 81       	ld	r24, Z
    254a:	91 81       	ldd	r25, Z+1	; 0x01
    254c:	dc 01       	movw	r26, r24
    254e:	14 96       	adiw	r26, 0x04	; 4
    2550:	2d 91       	ld	r18, X+
    2552:	3c 91       	ld	r19, X
    2554:	15 97       	sbiw	r26, 0x05	; 5
    2556:	d9 01       	movw	r26, r18
    2558:	11 96       	adiw	r26, 0x01	; 1
    255a:	5c 91       	ld	r21, X
    255c:	49 81       	ldd	r20, Y+1	; 0x01
    255e:	a4 81       	ldd	r26, Z+4	; 0x04
    2560:	b5 81       	ldd	r27, Z+5	; 0x05
    2562:	54 17       	cp	r21, r20
    2564:	18 f5       	brcc	.+70     	; 0x25ac <osEE_scheduler_task_activated+0x7a>
    2566:	4d 91       	ld	r20, X+
    2568:	5c 91       	ld	r21, X
    256a:	11 97       	sbiw	r26, 0x01	; 1
    256c:	55 83       	std	Z+5, r21	; 0x05
    256e:	44 83       	std	Z+4, r20	; 0x04
    2570:	42 e0       	ldi	r20, 0x02	; 2
    2572:	50 e0       	ldi	r21, 0x00	; 0
    2574:	e9 01       	movw	r28, r18
    2576:	5b 83       	std	Y+3, r21	; 0x03
    2578:	4a 83       	std	Y+2, r20	; 0x02
    257a:	13 96       	adiw	r26, 0x03	; 3
    257c:	7c 93       	st	X, r23
    257e:	6e 93       	st	-X, r22
    2580:	12 97       	sbiw	r26, 0x02	; 2
    2582:	26 81       	ldd	r18, Z+6	; 0x06
    2584:	37 81       	ldd	r19, Z+7	; 0x07
    2586:	11 96       	adiw	r26, 0x01	; 1
    2588:	3c 93       	st	X, r19
    258a:	2e 93       	st	-X, r18
    258c:	b7 83       	std	Z+7, r27	; 0x07
    258e:	a6 83       	std	Z+6, r26	; 0x06
    2590:	71 83       	std	Z+1, r23	; 0x01
    2592:	60 83       	st	Z, r22
    2594:	db 01       	movw	r26, r22
    2596:	14 96       	adiw	r26, 0x04	; 4
    2598:	ed 91       	ld	r30, X+
    259a:	fc 91       	ld	r31, X
    259c:	15 97       	sbiw	r26, 0x05	; 5
    259e:	17 82       	std	Z+7, r1	; 0x07
    25a0:	16 82       	std	Z+6, r1	; 0x06
    25a2:	0e 94 b2 13 	call	0x2764	; 0x2764 <osEE_change_context_from_running>
    25a6:	81 e0       	ldi	r24, 0x01	; 1
    25a8:	90 e0       	ldi	r25, 0x00	; 0
    25aa:	1a c0       	rjmp	.+52     	; 0x25e0 <osEE_scheduler_task_activated+0xae>
    25ac:	8a 81       	ldd	r24, Y+2	; 0x02
    25ae:	9b 81       	ldd	r25, Y+3	; 0x03
    25b0:	89 2b       	or	r24, r25
    25b2:	31 f4       	brne	.+12     	; 0x25c0 <osEE_scheduler_task_activated+0x8e>
    25b4:	81 e0       	ldi	r24, 0x01	; 1
    25b6:	90 e0       	ldi	r25, 0x00	; 0
    25b8:	9b 83       	std	Y+3, r25	; 0x03
    25ba:	8a 83       	std	Y+2, r24	; 0x02
    25bc:	1f 82       	std	Y+7, r1	; 0x07
    25be:	1e 82       	std	Y+6, r1	; 0x06
    25c0:	8d 91       	ld	r24, X+
    25c2:	9c 91       	ld	r25, X
    25c4:	11 97       	sbiw	r26, 0x01	; 1
    25c6:	95 83       	std	Z+5, r25	; 0x05
    25c8:	84 83       	std	Z+4, r24	; 0x04
    25ca:	11 96       	adiw	r26, 0x01	; 1
    25cc:	1c 92       	st	X, r1
    25ce:	1e 92       	st	-X, r1
    25d0:	ab 01       	movw	r20, r22
    25d2:	bd 01       	movw	r22, r26
    25d4:	cf 01       	movw	r24, r30
    25d6:	02 96       	adiw	r24, 0x02	; 2
    25d8:	0e 94 27 12 	call	0x244e	; 0x244e <osEE_scheduler_rq_insert>
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	df 91       	pop	r29
    25e2:	cf 91       	pop	r28
    25e4:	08 95       	ret

000025e6 <osEE_scheduler_task_terminated>:
    25e6:	af 92       	push	r10
    25e8:	bf 92       	push	r11
    25ea:	cf 92       	push	r12
    25ec:	df 92       	push	r13
    25ee:	ef 92       	push	r14
    25f0:	ff 92       	push	r15
    25f2:	0f 93       	push	r16
    25f4:	1f 93       	push	r17
    25f6:	cf 93       	push	r28
    25f8:	df 93       	push	r29
    25fa:	c0 91 e8 01 	lds	r28, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    25fe:	d0 91 e9 01 	lds	r29, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    2602:	fe 01       	movw	r30, r28
    2604:	e1 90       	ld	r14, Z+
    2606:	f1 90       	ld	r15, Z+
    2608:	6f 01       	movw	r12, r30
    260a:	f7 01       	movw	r30, r14
    260c:	04 81       	ldd	r16, Z+4	; 0x04
    260e:	15 81       	ldd	r17, Z+5	; 0x05
    2610:	fb 01       	movw	r30, r22
    2612:	f1 82       	std	Z+1, r15	; 0x01
    2614:	e0 82       	st	Z, r14
    2616:	f8 01       	movw	r30, r16
    2618:	82 81       	ldd	r24, Z+2	; 0x02
    261a:	93 81       	ldd	r25, Z+3	; 0x03
    261c:	04 97       	sbiw	r24, 0x04	; 4
    261e:	d9 f4       	brne	.+54     	; 0x2656 <osEE_scheduler_task_terminated+0x70>
    2620:	b6 01       	movw	r22, r12
    2622:	88 ee       	ldi	r24, 0xE8	; 232
    2624:	91 e0       	ldi	r25, 0x01	; 1
    2626:	0e 94 2e 12 	call	0x245c	; 0x245c <osEE_scheduler_core_pop_running>
    262a:	5c 01       	movw	r10, r24
    262c:	c8 80       	ld	r12, Y
    262e:	d9 80       	ldd	r13, Y+1	; 0x01
    2630:	ec 14       	cp	r14, r12
    2632:	fd 04       	cpc	r15, r13
    2634:	21 f0       	breq	.+8      	; 0x263e <osEE_scheduler_task_terminated+0x58>
    2636:	c7 01       	movw	r24, r14
    2638:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <osEE_task_end>
    263c:	04 c0       	rjmp	.+8      	; 0x2646 <osEE_scheduler_task_terminated+0x60>
    263e:	f8 01       	movw	r30, r16
    2640:	90 81       	ld	r25, Z
    2642:	91 50       	subi	r25, 0x01	; 1
    2644:	90 83       	st	Z, r25
    2646:	8c 81       	ldd	r24, Y+4	; 0x04
    2648:	9d 81       	ldd	r25, Y+5	; 0x05
    264a:	f5 01       	movw	r30, r10
    264c:	91 83       	std	Z+1, r25	; 0x01
    264e:	80 83       	st	Z, r24
    2650:	bd 82       	std	Y+5, r11	; 0x05
    2652:	ac 82       	std	Y+4, r10	; 0x04
    2654:	28 c0       	rjmp	.+80     	; 0x26a6 <osEE_scheduler_task_terminated+0xc0>
    2656:	6e 81       	ldd	r22, Y+6	; 0x06
    2658:	7f 81       	ldd	r23, Y+7	; 0x07
    265a:	fb 01       	movw	r30, r22
    265c:	80 81       	ld	r24, Z
    265e:	91 81       	ldd	r25, Z+1	; 0x01
    2660:	9f 83       	std	Y+7, r25	; 0x07
    2662:	8e 83       	std	Y+6, r24	; 0x06
    2664:	f7 01       	movw	r30, r14
    2666:	83 85       	ldd	r24, Z+11	; 0x0b
    2668:	f8 01       	movw	r30, r16
    266a:	81 83       	std	Z+1, r24	; 0x01
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	93 83       	std	Z+3, r25	; 0x03
    2672:	82 83       	std	Z+2, r24	; 0x02
    2674:	80 81       	ld	r24, Z
    2676:	81 30       	cpi	r24, 0x01	; 1
    2678:	11 f4       	brne	.+4      	; 0x267e <osEE_scheduler_task_terminated+0x98>
    267a:	17 82       	std	Z+7, r1	; 0x07
    267c:	16 82       	std	Z+6, r1	; 0x06
    267e:	a7 01       	movw	r20, r14
    2680:	c6 01       	movw	r24, r12
    2682:	0e 94 27 12 	call	0x244e	; 0x244e <osEE_scheduler_rq_insert>
    2686:	b6 01       	movw	r22, r12
    2688:	88 ee       	ldi	r24, 0xE8	; 232
    268a:	91 e0       	ldi	r25, 0x01	; 1
    268c:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_core_rq_preempt_stk>
    2690:	89 2b       	or	r24, r25
    2692:	39 f4       	brne	.+14     	; 0x26a2 <osEE_scheduler_task_terminated+0xbc>
    2694:	ee 81       	ldd	r30, Y+6	; 0x06
    2696:	ff 81       	ldd	r31, Y+7	; 0x07
    2698:	c2 80       	ldd	r12, Z+2	; 0x02
    269a:	d3 80       	ldd	r13, Z+3	; 0x03
    269c:	d9 82       	std	Y+1, r13	; 0x01
    269e:	c8 82       	st	Y, r12
    26a0:	02 c0       	rjmp	.+4      	; 0x26a6 <osEE_scheduler_task_terminated+0xc0>
    26a2:	c8 80       	ld	r12, Y
    26a4:	d9 80       	ldd	r13, Y+1	; 0x01
    26a6:	c6 01       	movw	r24, r12
    26a8:	df 91       	pop	r29
    26aa:	cf 91       	pop	r28
    26ac:	1f 91       	pop	r17
    26ae:	0f 91       	pop	r16
    26b0:	ff 90       	pop	r15
    26b2:	ef 90       	pop	r14
    26b4:	df 90       	pop	r13
    26b6:	cf 90       	pop	r12
    26b8:	bf 90       	pop	r11
    26ba:	af 90       	pop	r10
    26bc:	08 95       	ret

000026be <osEE_scheduler_task_preemption_point>:
    26be:	cf 93       	push	r28
    26c0:	df 93       	push	r29
    26c2:	c0 91 e8 01 	lds	r28, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    26c6:	d0 91 e9 01 	lds	r29, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    26ca:	be 01       	movw	r22, r28
    26cc:	6e 5f       	subi	r22, 0xFE	; 254
    26ce:	7f 4f       	sbci	r23, 0xFF	; 255
    26d0:	88 ee       	ldi	r24, 0xE8	; 232
    26d2:	91 e0       	ldi	r25, 0x01	; 1
    26d4:	0e 94 91 11 	call	0x2322	; 0x2322 <osEE_scheduler_core_rq_preempt_stk>
    26d8:	00 97       	sbiw	r24, 0x00	; 0
    26da:	39 f0       	breq	.+14     	; 0x26ea <osEE_scheduler_task_preemption_point+0x2c>
    26dc:	68 81       	ld	r22, Y
    26de:	79 81       	ldd	r23, Y+1	; 0x01
    26e0:	0e 94 b2 13 	call	0x2764	; 0x2764 <osEE_change_context_from_running>
    26e4:	81 e0       	ldi	r24, 0x01	; 1
    26e6:	90 e0       	ldi	r25, 0x00	; 0
    26e8:	02 c0       	rjmp	.+4      	; 0x26ee <osEE_scheduler_task_preemption_point+0x30>
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	90 e0       	ldi	r25, 0x00	; 0
    26ee:	df 91       	pop	r29
    26f0:	cf 91       	pop	r28
    26f2:	08 95       	ret

000026f4 <osEE_scheduler_task_set_running>:
    26f4:	cf 93       	push	r28
    26f6:	df 93       	push	r29
    26f8:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <osEE_cdb_var>
    26fc:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <osEE_cdb_var+0x1>
    2700:	80 81       	ld	r24, Z
    2702:	91 81       	ldd	r25, Z+1	; 0x01
    2704:	26 81       	ldd	r18, Z+6	; 0x06
    2706:	37 81       	ldd	r19, Z+7	; 0x07
    2708:	ec 01       	movw	r28, r24
    270a:	ac 81       	ldd	r26, Y+4	; 0x04
    270c:	bd 81       	ldd	r27, Y+5	; 0x05
    270e:	12 96       	adiw	r26, 0x02	; 2
    2710:	cd 91       	ld	r28, X+
    2712:	dc 91       	ld	r29, X
    2714:	13 97       	sbiw	r26, 0x03	; 3
    2716:	24 97       	sbiw	r28, 0x04	; 4
    2718:	31 f4       	brne	.+12     	; 0x2726 <osEE_scheduler_task_set_running+0x32>
    271a:	c2 e0       	ldi	r28, 0x02	; 2
    271c:	d0 e0       	ldi	r29, 0x00	; 0
    271e:	13 96       	adiw	r26, 0x03	; 3
    2720:	dc 93       	st	X, r29
    2722:	ce 93       	st	-X, r28
    2724:	12 97       	sbiw	r26, 0x02	; 2
    2726:	71 83       	std	Z+1, r23	; 0x01
    2728:	60 83       	st	Z, r22
    272a:	41 15       	cp	r20, r1
    272c:	51 05       	cpc	r21, r1
    272e:	69 f4       	brne	.+26     	; 0x274a <osEE_scheduler_task_set_running+0x56>
    2730:	a4 81       	ldd	r26, Z+4	; 0x04
    2732:	b5 81       	ldd	r27, Z+5	; 0x05
    2734:	4d 91       	ld	r20, X+
    2736:	5c 91       	ld	r21, X
    2738:	11 97       	sbiw	r26, 0x01	; 1
    273a:	55 83       	std	Z+5, r21	; 0x05
    273c:	44 83       	std	Z+4, r20	; 0x04
    273e:	11 96       	adiw	r26, 0x01	; 1
    2740:	1c 92       	st	X, r1
    2742:	1e 92       	st	-X, r1
    2744:	b7 83       	std	Z+7, r27	; 0x07
    2746:	a6 83       	std	Z+6, r26	; 0x06
    2748:	02 c0       	rjmp	.+4      	; 0x274e <osEE_scheduler_task_set_running+0x5a>
    274a:	57 83       	std	Z+7, r21	; 0x07
    274c:	46 83       	std	Z+6, r20	; 0x06
    274e:	06 80       	ldd	r0, Z+6	; 0x06
    2750:	f7 81       	ldd	r31, Z+7	; 0x07
    2752:	e0 2d       	mov	r30, r0
    2754:	73 83       	std	Z+3, r23	; 0x03
    2756:	62 83       	std	Z+2, r22	; 0x02
    2758:	31 83       	std	Z+1, r19	; 0x01
    275a:	20 83       	st	Z, r18
    275c:	df 91       	pop	r29
    275e:	cf 91       	pop	r28
    2760:	0c 94 b2 13 	jmp	0x2764	; 0x2764 <osEE_change_context_from_running>

00002764 <osEE_change_context_from_running>:
    2764:	fb 01       	movw	r30, r22
    2766:	a4 81       	ldd	r26, Z+4	; 0x04
    2768:	b5 81       	ldd	r27, Z+5	; 0x05
    276a:	12 96       	adiw	r26, 0x02	; 2
    276c:	2d 91       	ld	r18, X+
    276e:	3c 91       	ld	r19, X
    2770:	13 97       	sbiw	r26, 0x03	; 3
    2772:	dc 01       	movw	r26, r24
    2774:	12 96       	adiw	r26, 0x02	; 2
    2776:	4d 91       	ld	r20, X+
    2778:	5c 91       	ld	r21, X
    277a:	13 97       	sbiw	r26, 0x03	; 3
    277c:	62 81       	ldd	r22, Z+2	; 0x02
    277e:	73 81       	ldd	r23, Z+3	; 0x03
    2780:	cf 01       	movw	r24, r30
    2782:	22 30       	cpi	r18, 0x02	; 2
    2784:	31 05       	cpc	r19, r1
    2786:	11 f4       	brne	.+4      	; 0x278c <osEE_change_context_from_running+0x28>
    2788:	0c 94 88 00 	jmp	0x110	; 0x110 <osEE_hal_save_ctx_and_restore_ctx>
    278c:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <osEE_hal_save_ctx_and_ready2stacked>

00002790 <osEE_change_context_from_task_end>:
    2790:	cb 01       	movw	r24, r22
    2792:	db 01       	movw	r26, r22
    2794:	14 96       	adiw	r26, 0x04	; 4
    2796:	ed 91       	ld	r30, X+
    2798:	fc 91       	ld	r31, X
    279a:	15 97       	sbiw	r26, 0x05	; 5
    279c:	22 81       	ldd	r18, Z+2	; 0x02
    279e:	33 81       	ldd	r19, Z+3	; 0x03
    27a0:	12 96       	adiw	r26, 0x02	; 2
    27a2:	6d 91       	ld	r22, X+
    27a4:	7c 91       	ld	r23, X
    27a6:	13 97       	sbiw	r26, 0x03	; 3
    27a8:	22 30       	cpi	r18, 0x02	; 2
    27aa:	31 05       	cpc	r19, r1
    27ac:	11 f4       	brne	.+4      	; 0x27b2 <osEE_change_context_from_task_end+0x22>
    27ae:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    27b2:	0c 94 c8 00 	jmp	0x190	; 0x190 <osEE_hal_ready2stacked>

000027b6 <osEE_idle_task_terminate>:
    27b6:	dc 01       	movw	r26, r24
    27b8:	12 96       	adiw	r26, 0x02	; 2
    27ba:	6d 91       	ld	r22, X+
    27bc:	7c 91       	ld	r23, X
    27be:	13 97       	sbiw	r26, 0x03	; 3
    27c0:	ed 91       	ld	r30, X+
    27c2:	fc 91       	ld	r31, X
    27c4:	40 81       	ld	r20, Z
    27c6:	51 81       	ldd	r21, Z+1	; 0x01
    27c8:	db 01       	movw	r26, r22
    27ca:	ed 91       	ld	r30, X+
    27cc:	fc 91       	ld	r31, X
    27ce:	22 89       	ldd	r18, Z+18	; 0x12
    27d0:	33 89       	ldd	r19, Z+19	; 0x13
    27d2:	21 15       	cp	r18, r1
    27d4:	31 05       	cpc	r19, r1
    27d6:	29 f4       	brne	.+10     	; 0x27e2 <osEE_idle_task_terminate+0x2c>
    27d8:	db 01       	movw	r26, r22
    27da:	ed 93       	st	X+, r30
    27dc:	fc 93       	st	X, r31
    27de:	0c 94 a8 00 	jmp	0x150	; 0x150 <osEE_hal_restore_ctx>
    27e2:	24 17       	cp	r18, r20
    27e4:	35 07       	cpc	r19, r21
    27e6:	c1 f3       	breq	.-16     	; 0x27d8 <osEE_idle_task_terminate+0x22>
    27e8:	f9 01       	movw	r30, r18
    27ea:	f1 cf       	rjmp	.-30     	; 0x27ce <osEE_idle_task_terminate+0x18>

000027ec <osEE_scheduler_task_end>:
    27ec:	cf 93       	push	r28
    27ee:	df 93       	push	r29
    27f0:	00 d0       	rcall	.+0      	; 0x27f2 <osEE_scheduler_task_end+0x6>
    27f2:	cd b7       	in	r28, 0x3d	; 61
    27f4:	de b7       	in	r29, 0x3e	; 62
    27f6:	be 01       	movw	r22, r28
    27f8:	6f 5f       	subi	r22, 0xFF	; 255
    27fa:	7f 4f       	sbci	r23, 0xFF	; 255
    27fc:	82 ee       	ldi	r24, 0xE2	; 226
    27fe:	91 e0       	ldi	r25, 0x01	; 1
    2800:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <osEE_scheduler_task_terminated>
    2804:	bc 01       	movw	r22, r24
    2806:	89 81       	ldd	r24, Y+1	; 0x01
    2808:	9a 81       	ldd	r25, Y+2	; 0x02
    280a:	0e 94 c8 13 	call	0x2790	; 0x2790 <osEE_change_context_from_task_end>
    280e:	0f 90       	pop	r0
    2810:	0f 90       	pop	r0
    2812:	df 91       	pop	r29
    2814:	cf 91       	pop	r28
    2816:	08 95       	ret

00002818 <__vector_default>:
    2818:	f8 94       	cli
    281a:	ff cf       	rjmp	.-2      	; 0x281a <__vector_default+0x2>

0000281c <osEE_atmega_intvect>:
    281c:	e8 e1       	ldi	r30, 0x18	; 24
    281e:	08 95       	ret

00002820 <__vector_11>:
    2820:	8f 93       	push	r24
    2822:	9f 93       	push	r25
    2824:	80 e0       	ldi	r24, 0x00	; 0
    2826:	0e 94 18 14 	call	0x2830	; 0x2830 <osEE_avr8_isr2_stub>
    282a:	9f 91       	pop	r25
    282c:	8f 91       	pop	r24
    282e:	18 95       	reti

00002830 <osEE_avr8_isr2_stub>:
    2830:	1f 92       	push	r1
    2832:	0f 92       	push	r0
    2834:	0f b6       	in	r0, 0x3f	; 63
    2836:	0f 92       	push	r0
    2838:	11 24       	eor	r1, r1
    283a:	2f 93       	push	r18
    283c:	3f 93       	push	r19
    283e:	4f 93       	push	r20
    2840:	5f 93       	push	r21
    2842:	6f 93       	push	r22
    2844:	7f 93       	push	r23
    2846:	af 93       	push	r26
    2848:	bf 93       	push	r27
    284a:	ef 93       	push	r30
    284c:	ff 93       	push	r31
    284e:	0e 94 7f 12 	call	0x24fe	; 0x24fe <osEE_activate_isr2>
    2852:	ff 91       	pop	r31
    2854:	ef 91       	pop	r30
    2856:	bf 91       	pop	r27
    2858:	af 91       	pop	r26
    285a:	7f 91       	pop	r23
    285c:	6f 91       	pop	r22
    285e:	5f 91       	pop	r21
    2860:	4f 91       	pop	r20
    2862:	3f 91       	pop	r19
    2864:	2f 91       	pop	r18
    2866:	0f 90       	pop	r0
    2868:	0f be       	out	0x3f, r0	; 63
    286a:	0f 90       	pop	r0
    286c:	1f 90       	pop	r1
    286e:	08 95       	ret

00002870 <__subsf3>:
    2870:	50 58       	subi	r21, 0x80	; 128

00002872 <__addsf3>:
    2872:	bb 27       	eor	r27, r27
    2874:	aa 27       	eor	r26, r26
    2876:	0e 94 50 14 	call	0x28a0	; 0x28a0 <__addsf3x>
    287a:	0c 94 8d 15 	jmp	0x2b1a	; 0x2b1a <__fp_round>
    287e:	0e 94 7f 15 	call	0x2afe	; 0x2afe <__fp_pscA>
    2882:	38 f0       	brcs	.+14     	; 0x2892 <__addsf3+0x20>
    2884:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <__fp_pscB>
    2888:	20 f0       	brcs	.+8      	; 0x2892 <__addsf3+0x20>
    288a:	39 f4       	brne	.+14     	; 0x289a <__addsf3+0x28>
    288c:	9f 3f       	cpi	r25, 0xFF	; 255
    288e:	19 f4       	brne	.+6      	; 0x2896 <__addsf3+0x24>
    2890:	26 f4       	brtc	.+8      	; 0x289a <__addsf3+0x28>
    2892:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <__fp_nan>
    2896:	0e f4       	brtc	.+2      	; 0x289a <__addsf3+0x28>
    2898:	e0 95       	com	r30
    289a:	e7 fb       	bst	r30, 7
    289c:	0c 94 76 15 	jmp	0x2aec	; 0x2aec <__fp_inf>

000028a0 <__addsf3x>:
    28a0:	e9 2f       	mov	r30, r25
    28a2:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <__fp_split3>
    28a6:	58 f3       	brcs	.-42     	; 0x287e <__addsf3+0xc>
    28a8:	ba 17       	cp	r27, r26
    28aa:	62 07       	cpc	r22, r18
    28ac:	73 07       	cpc	r23, r19
    28ae:	84 07       	cpc	r24, r20
    28b0:	95 07       	cpc	r25, r21
    28b2:	20 f0       	brcs	.+8      	; 0x28bc <__addsf3x+0x1c>
    28b4:	79 f4       	brne	.+30     	; 0x28d4 <__addsf3x+0x34>
    28b6:	a6 f5       	brtc	.+104    	; 0x2920 <__addsf3x+0x80>
    28b8:	0c 94 c0 15 	jmp	0x2b80	; 0x2b80 <__fp_zero>
    28bc:	0e f4       	brtc	.+2      	; 0x28c0 <__addsf3x+0x20>
    28be:	e0 95       	com	r30
    28c0:	0b 2e       	mov	r0, r27
    28c2:	ba 2f       	mov	r27, r26
    28c4:	a0 2d       	mov	r26, r0
    28c6:	0b 01       	movw	r0, r22
    28c8:	b9 01       	movw	r22, r18
    28ca:	90 01       	movw	r18, r0
    28cc:	0c 01       	movw	r0, r24
    28ce:	ca 01       	movw	r24, r20
    28d0:	a0 01       	movw	r20, r0
    28d2:	11 24       	eor	r1, r1
    28d4:	ff 27       	eor	r31, r31
    28d6:	59 1b       	sub	r21, r25
    28d8:	99 f0       	breq	.+38     	; 0x2900 <__addsf3x+0x60>
    28da:	59 3f       	cpi	r21, 0xF9	; 249
    28dc:	50 f4       	brcc	.+20     	; 0x28f2 <__addsf3x+0x52>
    28de:	50 3e       	cpi	r21, 0xE0	; 224
    28e0:	68 f1       	brcs	.+90     	; 0x293c <__addsf3x+0x9c>
    28e2:	1a 16       	cp	r1, r26
    28e4:	f0 40       	sbci	r31, 0x00	; 0
    28e6:	a2 2f       	mov	r26, r18
    28e8:	23 2f       	mov	r18, r19
    28ea:	34 2f       	mov	r19, r20
    28ec:	44 27       	eor	r20, r20
    28ee:	58 5f       	subi	r21, 0xF8	; 248
    28f0:	f3 cf       	rjmp	.-26     	; 0x28d8 <__addsf3x+0x38>
    28f2:	46 95       	lsr	r20
    28f4:	37 95       	ror	r19
    28f6:	27 95       	ror	r18
    28f8:	a7 95       	ror	r26
    28fa:	f0 40       	sbci	r31, 0x00	; 0
    28fc:	53 95       	inc	r21
    28fe:	c9 f7       	brne	.-14     	; 0x28f2 <__addsf3x+0x52>
    2900:	7e f4       	brtc	.+30     	; 0x2920 <__addsf3x+0x80>
    2902:	1f 16       	cp	r1, r31
    2904:	ba 0b       	sbc	r27, r26
    2906:	62 0b       	sbc	r22, r18
    2908:	73 0b       	sbc	r23, r19
    290a:	84 0b       	sbc	r24, r20
    290c:	ba f0       	brmi	.+46     	; 0x293c <__addsf3x+0x9c>
    290e:	91 50       	subi	r25, 0x01	; 1
    2910:	a1 f0       	breq	.+40     	; 0x293a <__addsf3x+0x9a>
    2912:	ff 0f       	add	r31, r31
    2914:	bb 1f       	adc	r27, r27
    2916:	66 1f       	adc	r22, r22
    2918:	77 1f       	adc	r23, r23
    291a:	88 1f       	adc	r24, r24
    291c:	c2 f7       	brpl	.-16     	; 0x290e <__addsf3x+0x6e>
    291e:	0e c0       	rjmp	.+28     	; 0x293c <__addsf3x+0x9c>
    2920:	ba 0f       	add	r27, r26
    2922:	62 1f       	adc	r22, r18
    2924:	73 1f       	adc	r23, r19
    2926:	84 1f       	adc	r24, r20
    2928:	48 f4       	brcc	.+18     	; 0x293c <__addsf3x+0x9c>
    292a:	87 95       	ror	r24
    292c:	77 95       	ror	r23
    292e:	67 95       	ror	r22
    2930:	b7 95       	ror	r27
    2932:	f7 95       	ror	r31
    2934:	9e 3f       	cpi	r25, 0xFE	; 254
    2936:	08 f0       	brcs	.+2      	; 0x293a <__addsf3x+0x9a>
    2938:	b0 cf       	rjmp	.-160    	; 0x289a <__addsf3+0x28>
    293a:	93 95       	inc	r25
    293c:	88 0f       	add	r24, r24
    293e:	08 f0       	brcs	.+2      	; 0x2942 <__addsf3x+0xa2>
    2940:	99 27       	eor	r25, r25
    2942:	ee 0f       	add	r30, r30
    2944:	97 95       	ror	r25
    2946:	87 95       	ror	r24
    2948:	08 95       	ret

0000294a <__cmpsf2>:
    294a:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <__fp_cmp>
    294e:	08 f4       	brcc	.+2      	; 0x2952 <__cmpsf2+0x8>
    2950:	81 e0       	ldi	r24, 0x01	; 1
    2952:	08 95       	ret

00002954 <__divsf3>:
    2954:	0e 94 be 14 	call	0x297c	; 0x297c <__divsf3x>
    2958:	0c 94 8d 15 	jmp	0x2b1a	; 0x2b1a <__fp_round>
    295c:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <__fp_pscB>
    2960:	58 f0       	brcs	.+22     	; 0x2978 <__divsf3+0x24>
    2962:	0e 94 7f 15 	call	0x2afe	; 0x2afe <__fp_pscA>
    2966:	40 f0       	brcs	.+16     	; 0x2978 <__divsf3+0x24>
    2968:	29 f4       	brne	.+10     	; 0x2974 <__divsf3+0x20>
    296a:	5f 3f       	cpi	r21, 0xFF	; 255
    296c:	29 f0       	breq	.+10     	; 0x2978 <__divsf3+0x24>
    296e:	0c 94 76 15 	jmp	0x2aec	; 0x2aec <__fp_inf>
    2972:	51 11       	cpse	r21, r1
    2974:	0c 94 c1 15 	jmp	0x2b82	; 0x2b82 <__fp_szero>
    2978:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <__fp_nan>

0000297c <__divsf3x>:
    297c:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <__fp_split3>
    2980:	68 f3       	brcs	.-38     	; 0x295c <__divsf3+0x8>

00002982 <__divsf3_pse>:
    2982:	99 23       	and	r25, r25
    2984:	b1 f3       	breq	.-20     	; 0x2972 <__divsf3+0x1e>
    2986:	55 23       	and	r21, r21
    2988:	91 f3       	breq	.-28     	; 0x296e <__divsf3+0x1a>
    298a:	95 1b       	sub	r25, r21
    298c:	55 0b       	sbc	r21, r21
    298e:	bb 27       	eor	r27, r27
    2990:	aa 27       	eor	r26, r26
    2992:	62 17       	cp	r22, r18
    2994:	73 07       	cpc	r23, r19
    2996:	84 07       	cpc	r24, r20
    2998:	38 f0       	brcs	.+14     	; 0x29a8 <__divsf3_pse+0x26>
    299a:	9f 5f       	subi	r25, 0xFF	; 255
    299c:	5f 4f       	sbci	r21, 0xFF	; 255
    299e:	22 0f       	add	r18, r18
    29a0:	33 1f       	adc	r19, r19
    29a2:	44 1f       	adc	r20, r20
    29a4:	aa 1f       	adc	r26, r26
    29a6:	a9 f3       	breq	.-22     	; 0x2992 <__divsf3_pse+0x10>
    29a8:	35 d0       	rcall	.+106    	; 0x2a14 <__divsf3_pse+0x92>
    29aa:	0e 2e       	mov	r0, r30
    29ac:	3a f0       	brmi	.+14     	; 0x29bc <__divsf3_pse+0x3a>
    29ae:	e0 e8       	ldi	r30, 0x80	; 128
    29b0:	32 d0       	rcall	.+100    	; 0x2a16 <__divsf3_pse+0x94>
    29b2:	91 50       	subi	r25, 0x01	; 1
    29b4:	50 40       	sbci	r21, 0x00	; 0
    29b6:	e6 95       	lsr	r30
    29b8:	00 1c       	adc	r0, r0
    29ba:	ca f7       	brpl	.-14     	; 0x29ae <__divsf3_pse+0x2c>
    29bc:	2b d0       	rcall	.+86     	; 0x2a14 <__divsf3_pse+0x92>
    29be:	fe 2f       	mov	r31, r30
    29c0:	29 d0       	rcall	.+82     	; 0x2a14 <__divsf3_pse+0x92>
    29c2:	66 0f       	add	r22, r22
    29c4:	77 1f       	adc	r23, r23
    29c6:	88 1f       	adc	r24, r24
    29c8:	bb 1f       	adc	r27, r27
    29ca:	26 17       	cp	r18, r22
    29cc:	37 07       	cpc	r19, r23
    29ce:	48 07       	cpc	r20, r24
    29d0:	ab 07       	cpc	r26, r27
    29d2:	b0 e8       	ldi	r27, 0x80	; 128
    29d4:	09 f0       	breq	.+2      	; 0x29d8 <__divsf3_pse+0x56>
    29d6:	bb 0b       	sbc	r27, r27
    29d8:	80 2d       	mov	r24, r0
    29da:	bf 01       	movw	r22, r30
    29dc:	ff 27       	eor	r31, r31
    29de:	93 58       	subi	r25, 0x83	; 131
    29e0:	5f 4f       	sbci	r21, 0xFF	; 255
    29e2:	3a f0       	brmi	.+14     	; 0x29f2 <__divsf3_pse+0x70>
    29e4:	9e 3f       	cpi	r25, 0xFE	; 254
    29e6:	51 05       	cpc	r21, r1
    29e8:	78 f0       	brcs	.+30     	; 0x2a08 <__divsf3_pse+0x86>
    29ea:	0c 94 76 15 	jmp	0x2aec	; 0x2aec <__fp_inf>
    29ee:	0c 94 c1 15 	jmp	0x2b82	; 0x2b82 <__fp_szero>
    29f2:	5f 3f       	cpi	r21, 0xFF	; 255
    29f4:	e4 f3       	brlt	.-8      	; 0x29ee <__divsf3_pse+0x6c>
    29f6:	98 3e       	cpi	r25, 0xE8	; 232
    29f8:	d4 f3       	brlt	.-12     	; 0x29ee <__divsf3_pse+0x6c>
    29fa:	86 95       	lsr	r24
    29fc:	77 95       	ror	r23
    29fe:	67 95       	ror	r22
    2a00:	b7 95       	ror	r27
    2a02:	f7 95       	ror	r31
    2a04:	9f 5f       	subi	r25, 0xFF	; 255
    2a06:	c9 f7       	brne	.-14     	; 0x29fa <__divsf3_pse+0x78>
    2a08:	88 0f       	add	r24, r24
    2a0a:	91 1d       	adc	r25, r1
    2a0c:	96 95       	lsr	r25
    2a0e:	87 95       	ror	r24
    2a10:	97 f9       	bld	r25, 7
    2a12:	08 95       	ret
    2a14:	e1 e0       	ldi	r30, 0x01	; 1
    2a16:	66 0f       	add	r22, r22
    2a18:	77 1f       	adc	r23, r23
    2a1a:	88 1f       	adc	r24, r24
    2a1c:	bb 1f       	adc	r27, r27
    2a1e:	62 17       	cp	r22, r18
    2a20:	73 07       	cpc	r23, r19
    2a22:	84 07       	cpc	r24, r20
    2a24:	ba 07       	cpc	r27, r26
    2a26:	20 f0       	brcs	.+8      	; 0x2a30 <__divsf3_pse+0xae>
    2a28:	62 1b       	sub	r22, r18
    2a2a:	73 0b       	sbc	r23, r19
    2a2c:	84 0b       	sbc	r24, r20
    2a2e:	ba 0b       	sbc	r27, r26
    2a30:	ee 1f       	adc	r30, r30
    2a32:	88 f7       	brcc	.-30     	; 0x2a16 <__divsf3_pse+0x94>
    2a34:	e0 95       	com	r30
    2a36:	08 95       	ret

00002a38 <__fixsfsi>:
    2a38:	0e 94 23 15 	call	0x2a46	; 0x2a46 <__fixunssfsi>
    2a3c:	68 94       	set
    2a3e:	b1 11       	cpse	r27, r1
    2a40:	0c 94 c1 15 	jmp	0x2b82	; 0x2b82 <__fp_szero>
    2a44:	08 95       	ret

00002a46 <__fixunssfsi>:
    2a46:	0e 94 a6 15 	call	0x2b4c	; 0x2b4c <__fp_splitA>
    2a4a:	88 f0       	brcs	.+34     	; 0x2a6e <__fixunssfsi+0x28>
    2a4c:	9f 57       	subi	r25, 0x7F	; 127
    2a4e:	98 f0       	brcs	.+38     	; 0x2a76 <__fixunssfsi+0x30>
    2a50:	b9 2f       	mov	r27, r25
    2a52:	99 27       	eor	r25, r25
    2a54:	b7 51       	subi	r27, 0x17	; 23
    2a56:	b0 f0       	brcs	.+44     	; 0x2a84 <__fixunssfsi+0x3e>
    2a58:	e1 f0       	breq	.+56     	; 0x2a92 <__fixunssfsi+0x4c>
    2a5a:	66 0f       	add	r22, r22
    2a5c:	77 1f       	adc	r23, r23
    2a5e:	88 1f       	adc	r24, r24
    2a60:	99 1f       	adc	r25, r25
    2a62:	1a f0       	brmi	.+6      	; 0x2a6a <__fixunssfsi+0x24>
    2a64:	ba 95       	dec	r27
    2a66:	c9 f7       	brne	.-14     	; 0x2a5a <__fixunssfsi+0x14>
    2a68:	14 c0       	rjmp	.+40     	; 0x2a92 <__fixunssfsi+0x4c>
    2a6a:	b1 30       	cpi	r27, 0x01	; 1
    2a6c:	91 f0       	breq	.+36     	; 0x2a92 <__fixunssfsi+0x4c>
    2a6e:	0e 94 c0 15 	call	0x2b80	; 0x2b80 <__fp_zero>
    2a72:	b1 e0       	ldi	r27, 0x01	; 1
    2a74:	08 95       	ret
    2a76:	0c 94 c0 15 	jmp	0x2b80	; 0x2b80 <__fp_zero>
    2a7a:	67 2f       	mov	r22, r23
    2a7c:	78 2f       	mov	r23, r24
    2a7e:	88 27       	eor	r24, r24
    2a80:	b8 5f       	subi	r27, 0xF8	; 248
    2a82:	39 f0       	breq	.+14     	; 0x2a92 <__fixunssfsi+0x4c>
    2a84:	b9 3f       	cpi	r27, 0xF9	; 249
    2a86:	cc f3       	brlt	.-14     	; 0x2a7a <__fixunssfsi+0x34>
    2a88:	86 95       	lsr	r24
    2a8a:	77 95       	ror	r23
    2a8c:	67 95       	ror	r22
    2a8e:	b3 95       	inc	r27
    2a90:	d9 f7       	brne	.-10     	; 0x2a88 <__fixunssfsi+0x42>
    2a92:	3e f4       	brtc	.+14     	; 0x2aa2 <__fixunssfsi+0x5c>
    2a94:	90 95       	com	r25
    2a96:	80 95       	com	r24
    2a98:	70 95       	com	r23
    2a9a:	61 95       	neg	r22
    2a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    2aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa2:	08 95       	ret

00002aa4 <__fp_cmp>:
    2aa4:	99 0f       	add	r25, r25
    2aa6:	00 08       	sbc	r0, r0
    2aa8:	55 0f       	add	r21, r21
    2aaa:	aa 0b       	sbc	r26, r26
    2aac:	e0 e8       	ldi	r30, 0x80	; 128
    2aae:	fe ef       	ldi	r31, 0xFE	; 254
    2ab0:	16 16       	cp	r1, r22
    2ab2:	17 06       	cpc	r1, r23
    2ab4:	e8 07       	cpc	r30, r24
    2ab6:	f9 07       	cpc	r31, r25
    2ab8:	c0 f0       	brcs	.+48     	; 0x2aea <__fp_cmp+0x46>
    2aba:	12 16       	cp	r1, r18
    2abc:	13 06       	cpc	r1, r19
    2abe:	e4 07       	cpc	r30, r20
    2ac0:	f5 07       	cpc	r31, r21
    2ac2:	98 f0       	brcs	.+38     	; 0x2aea <__fp_cmp+0x46>
    2ac4:	62 1b       	sub	r22, r18
    2ac6:	73 0b       	sbc	r23, r19
    2ac8:	84 0b       	sbc	r24, r20
    2aca:	95 0b       	sbc	r25, r21
    2acc:	39 f4       	brne	.+14     	; 0x2adc <__fp_cmp+0x38>
    2ace:	0a 26       	eor	r0, r26
    2ad0:	61 f0       	breq	.+24     	; 0x2aea <__fp_cmp+0x46>
    2ad2:	23 2b       	or	r18, r19
    2ad4:	24 2b       	or	r18, r20
    2ad6:	25 2b       	or	r18, r21
    2ad8:	21 f4       	brne	.+8      	; 0x2ae2 <__fp_cmp+0x3e>
    2ada:	08 95       	ret
    2adc:	0a 26       	eor	r0, r26
    2ade:	09 f4       	brne	.+2      	; 0x2ae2 <__fp_cmp+0x3e>
    2ae0:	a1 40       	sbci	r26, 0x01	; 1
    2ae2:	a6 95       	lsr	r26
    2ae4:	8f ef       	ldi	r24, 0xFF	; 255
    2ae6:	81 1d       	adc	r24, r1
    2ae8:	81 1d       	adc	r24, r1
    2aea:	08 95       	ret

00002aec <__fp_inf>:
    2aec:	97 f9       	bld	r25, 7
    2aee:	9f 67       	ori	r25, 0x7F	; 127
    2af0:	80 e8       	ldi	r24, 0x80	; 128
    2af2:	70 e0       	ldi	r23, 0x00	; 0
    2af4:	60 e0       	ldi	r22, 0x00	; 0
    2af6:	08 95       	ret

00002af8 <__fp_nan>:
    2af8:	9f ef       	ldi	r25, 0xFF	; 255
    2afa:	80 ec       	ldi	r24, 0xC0	; 192
    2afc:	08 95       	ret

00002afe <__fp_pscA>:
    2afe:	00 24       	eor	r0, r0
    2b00:	0a 94       	dec	r0
    2b02:	16 16       	cp	r1, r22
    2b04:	17 06       	cpc	r1, r23
    2b06:	18 06       	cpc	r1, r24
    2b08:	09 06       	cpc	r0, r25
    2b0a:	08 95       	ret

00002b0c <__fp_pscB>:
    2b0c:	00 24       	eor	r0, r0
    2b0e:	0a 94       	dec	r0
    2b10:	12 16       	cp	r1, r18
    2b12:	13 06       	cpc	r1, r19
    2b14:	14 06       	cpc	r1, r20
    2b16:	05 06       	cpc	r0, r21
    2b18:	08 95       	ret

00002b1a <__fp_round>:
    2b1a:	09 2e       	mov	r0, r25
    2b1c:	03 94       	inc	r0
    2b1e:	00 0c       	add	r0, r0
    2b20:	11 f4       	brne	.+4      	; 0x2b26 <__fp_round+0xc>
    2b22:	88 23       	and	r24, r24
    2b24:	52 f0       	brmi	.+20     	; 0x2b3a <__fp_round+0x20>
    2b26:	bb 0f       	add	r27, r27
    2b28:	40 f4       	brcc	.+16     	; 0x2b3a <__fp_round+0x20>
    2b2a:	bf 2b       	or	r27, r31
    2b2c:	11 f4       	brne	.+4      	; 0x2b32 <__fp_round+0x18>
    2b2e:	60 ff       	sbrs	r22, 0
    2b30:	04 c0       	rjmp	.+8      	; 0x2b3a <__fp_round+0x20>
    2b32:	6f 5f       	subi	r22, 0xFF	; 255
    2b34:	7f 4f       	sbci	r23, 0xFF	; 255
    2b36:	8f 4f       	sbci	r24, 0xFF	; 255
    2b38:	9f 4f       	sbci	r25, 0xFF	; 255
    2b3a:	08 95       	ret

00002b3c <__fp_split3>:
    2b3c:	57 fd       	sbrc	r21, 7
    2b3e:	90 58       	subi	r25, 0x80	; 128
    2b40:	44 0f       	add	r20, r20
    2b42:	55 1f       	adc	r21, r21
    2b44:	59 f0       	breq	.+22     	; 0x2b5c <__fp_splitA+0x10>
    2b46:	5f 3f       	cpi	r21, 0xFF	; 255
    2b48:	71 f0       	breq	.+28     	; 0x2b66 <__fp_splitA+0x1a>
    2b4a:	47 95       	ror	r20

00002b4c <__fp_splitA>:
    2b4c:	88 0f       	add	r24, r24
    2b4e:	97 fb       	bst	r25, 7
    2b50:	99 1f       	adc	r25, r25
    2b52:	61 f0       	breq	.+24     	; 0x2b6c <__fp_splitA+0x20>
    2b54:	9f 3f       	cpi	r25, 0xFF	; 255
    2b56:	79 f0       	breq	.+30     	; 0x2b76 <__fp_splitA+0x2a>
    2b58:	87 95       	ror	r24
    2b5a:	08 95       	ret
    2b5c:	12 16       	cp	r1, r18
    2b5e:	13 06       	cpc	r1, r19
    2b60:	14 06       	cpc	r1, r20
    2b62:	55 1f       	adc	r21, r21
    2b64:	f2 cf       	rjmp	.-28     	; 0x2b4a <__fp_split3+0xe>
    2b66:	46 95       	lsr	r20
    2b68:	f1 df       	rcall	.-30     	; 0x2b4c <__fp_splitA>
    2b6a:	08 c0       	rjmp	.+16     	; 0x2b7c <__fp_splitA+0x30>
    2b6c:	16 16       	cp	r1, r22
    2b6e:	17 06       	cpc	r1, r23
    2b70:	18 06       	cpc	r1, r24
    2b72:	99 1f       	adc	r25, r25
    2b74:	f1 cf       	rjmp	.-30     	; 0x2b58 <__fp_splitA+0xc>
    2b76:	86 95       	lsr	r24
    2b78:	71 05       	cpc	r23, r1
    2b7a:	61 05       	cpc	r22, r1
    2b7c:	08 94       	sec
    2b7e:	08 95       	ret

00002b80 <__fp_zero>:
    2b80:	e8 94       	clt

00002b82 <__fp_szero>:
    2b82:	bb 27       	eor	r27, r27
    2b84:	66 27       	eor	r22, r22
    2b86:	77 27       	eor	r23, r23
    2b88:	cb 01       	movw	r24, r22
    2b8a:	97 f9       	bld	r25, 7
    2b8c:	08 95       	ret

00002b8e <__gesf2>:
    2b8e:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <__fp_cmp>
    2b92:	08 f4       	brcc	.+2      	; 0x2b96 <__gesf2+0x8>
    2b94:	8f ef       	ldi	r24, 0xFF	; 255
    2b96:	08 95       	ret

00002b98 <__mulsf3>:
    2b98:	0e 94 df 15 	call	0x2bbe	; 0x2bbe <__mulsf3x>
    2b9c:	0c 94 8d 15 	jmp	0x2b1a	; 0x2b1a <__fp_round>
    2ba0:	0e 94 7f 15 	call	0x2afe	; 0x2afe <__fp_pscA>
    2ba4:	38 f0       	brcs	.+14     	; 0x2bb4 <__mulsf3+0x1c>
    2ba6:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <__fp_pscB>
    2baa:	20 f0       	brcs	.+8      	; 0x2bb4 <__mulsf3+0x1c>
    2bac:	95 23       	and	r25, r21
    2bae:	11 f0       	breq	.+4      	; 0x2bb4 <__mulsf3+0x1c>
    2bb0:	0c 94 76 15 	jmp	0x2aec	; 0x2aec <__fp_inf>
    2bb4:	0c 94 7c 15 	jmp	0x2af8	; 0x2af8 <__fp_nan>
    2bb8:	11 24       	eor	r1, r1
    2bba:	0c 94 c1 15 	jmp	0x2b82	; 0x2b82 <__fp_szero>

00002bbe <__mulsf3x>:
    2bbe:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <__fp_split3>
    2bc2:	70 f3       	brcs	.-36     	; 0x2ba0 <__mulsf3+0x8>

00002bc4 <__mulsf3_pse>:
    2bc4:	95 9f       	mul	r25, r21
    2bc6:	c1 f3       	breq	.-16     	; 0x2bb8 <__mulsf3+0x20>
    2bc8:	95 0f       	add	r25, r21
    2bca:	50 e0       	ldi	r21, 0x00	; 0
    2bcc:	55 1f       	adc	r21, r21
    2bce:	62 9f       	mul	r22, r18
    2bd0:	f0 01       	movw	r30, r0
    2bd2:	72 9f       	mul	r23, r18
    2bd4:	bb 27       	eor	r27, r27
    2bd6:	f0 0d       	add	r31, r0
    2bd8:	b1 1d       	adc	r27, r1
    2bda:	63 9f       	mul	r22, r19
    2bdc:	aa 27       	eor	r26, r26
    2bde:	f0 0d       	add	r31, r0
    2be0:	b1 1d       	adc	r27, r1
    2be2:	aa 1f       	adc	r26, r26
    2be4:	64 9f       	mul	r22, r20
    2be6:	66 27       	eor	r22, r22
    2be8:	b0 0d       	add	r27, r0
    2bea:	a1 1d       	adc	r26, r1
    2bec:	66 1f       	adc	r22, r22
    2bee:	82 9f       	mul	r24, r18
    2bf0:	22 27       	eor	r18, r18
    2bf2:	b0 0d       	add	r27, r0
    2bf4:	a1 1d       	adc	r26, r1
    2bf6:	62 1f       	adc	r22, r18
    2bf8:	73 9f       	mul	r23, r19
    2bfa:	b0 0d       	add	r27, r0
    2bfc:	a1 1d       	adc	r26, r1
    2bfe:	62 1f       	adc	r22, r18
    2c00:	83 9f       	mul	r24, r19
    2c02:	a0 0d       	add	r26, r0
    2c04:	61 1d       	adc	r22, r1
    2c06:	22 1f       	adc	r18, r18
    2c08:	74 9f       	mul	r23, r20
    2c0a:	33 27       	eor	r19, r19
    2c0c:	a0 0d       	add	r26, r0
    2c0e:	61 1d       	adc	r22, r1
    2c10:	23 1f       	adc	r18, r19
    2c12:	84 9f       	mul	r24, r20
    2c14:	60 0d       	add	r22, r0
    2c16:	21 1d       	adc	r18, r1
    2c18:	82 2f       	mov	r24, r18
    2c1a:	76 2f       	mov	r23, r22
    2c1c:	6a 2f       	mov	r22, r26
    2c1e:	11 24       	eor	r1, r1
    2c20:	9f 57       	subi	r25, 0x7F	; 127
    2c22:	50 40       	sbci	r21, 0x00	; 0
    2c24:	9a f0       	brmi	.+38     	; 0x2c4c <__mulsf3_pse+0x88>
    2c26:	f1 f0       	breq	.+60     	; 0x2c64 <__mulsf3_pse+0xa0>
    2c28:	88 23       	and	r24, r24
    2c2a:	4a f0       	brmi	.+18     	; 0x2c3e <__mulsf3_pse+0x7a>
    2c2c:	ee 0f       	add	r30, r30
    2c2e:	ff 1f       	adc	r31, r31
    2c30:	bb 1f       	adc	r27, r27
    2c32:	66 1f       	adc	r22, r22
    2c34:	77 1f       	adc	r23, r23
    2c36:	88 1f       	adc	r24, r24
    2c38:	91 50       	subi	r25, 0x01	; 1
    2c3a:	50 40       	sbci	r21, 0x00	; 0
    2c3c:	a9 f7       	brne	.-22     	; 0x2c28 <__mulsf3_pse+0x64>
    2c3e:	9e 3f       	cpi	r25, 0xFE	; 254
    2c40:	51 05       	cpc	r21, r1
    2c42:	80 f0       	brcs	.+32     	; 0x2c64 <__mulsf3_pse+0xa0>
    2c44:	0c 94 76 15 	jmp	0x2aec	; 0x2aec <__fp_inf>
    2c48:	0c 94 c1 15 	jmp	0x2b82	; 0x2b82 <__fp_szero>
    2c4c:	5f 3f       	cpi	r21, 0xFF	; 255
    2c4e:	e4 f3       	brlt	.-8      	; 0x2c48 <__mulsf3_pse+0x84>
    2c50:	98 3e       	cpi	r25, 0xE8	; 232
    2c52:	d4 f3       	brlt	.-12     	; 0x2c48 <__mulsf3_pse+0x84>
    2c54:	86 95       	lsr	r24
    2c56:	77 95       	ror	r23
    2c58:	67 95       	ror	r22
    2c5a:	b7 95       	ror	r27
    2c5c:	f7 95       	ror	r31
    2c5e:	e7 95       	ror	r30
    2c60:	9f 5f       	subi	r25, 0xFF	; 255
    2c62:	c1 f7       	brne	.-16     	; 0x2c54 <__mulsf3_pse+0x90>
    2c64:	fe 2b       	or	r31, r30
    2c66:	88 0f       	add	r24, r24
    2c68:	91 1d       	adc	r25, r1
    2c6a:	96 95       	lsr	r25
    2c6c:	87 95       	ror	r24
    2c6e:	97 f9       	bld	r25, 7
    2c70:	08 95       	ret

00002c72 <__divmodhi4>:
    2c72:	97 fb       	bst	r25, 7
    2c74:	07 2e       	mov	r0, r23
    2c76:	16 f4       	brtc	.+4      	; 0x2c7c <__divmodhi4+0xa>
    2c78:	00 94       	com	r0
    2c7a:	07 d0       	rcall	.+14     	; 0x2c8a <__divmodhi4_neg1>
    2c7c:	77 fd       	sbrc	r23, 7
    2c7e:	09 d0       	rcall	.+18     	; 0x2c92 <__divmodhi4_neg2>
    2c80:	0e 94 6f 16 	call	0x2cde	; 0x2cde <__udivmodhi4>
    2c84:	07 fc       	sbrc	r0, 7
    2c86:	05 d0       	rcall	.+10     	; 0x2c92 <__divmodhi4_neg2>
    2c88:	3e f4       	brtc	.+14     	; 0x2c98 <__divmodhi4_exit>

00002c8a <__divmodhi4_neg1>:
    2c8a:	90 95       	com	r25
    2c8c:	81 95       	neg	r24
    2c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c90:	08 95       	ret

00002c92 <__divmodhi4_neg2>:
    2c92:	70 95       	com	r23
    2c94:	61 95       	neg	r22
    2c96:	7f 4f       	sbci	r23, 0xFF	; 255

00002c98 <__divmodhi4_exit>:
    2c98:	08 95       	ret

00002c9a <__udivmodsi4>:
    2c9a:	a1 e2       	ldi	r26, 0x21	; 33
    2c9c:	1a 2e       	mov	r1, r26
    2c9e:	aa 1b       	sub	r26, r26
    2ca0:	bb 1b       	sub	r27, r27
    2ca2:	fd 01       	movw	r30, r26
    2ca4:	0d c0       	rjmp	.+26     	; 0x2cc0 <__udivmodsi4_ep>

00002ca6 <__udivmodsi4_loop>:
    2ca6:	aa 1f       	adc	r26, r26
    2ca8:	bb 1f       	adc	r27, r27
    2caa:	ee 1f       	adc	r30, r30
    2cac:	ff 1f       	adc	r31, r31
    2cae:	a2 17       	cp	r26, r18
    2cb0:	b3 07       	cpc	r27, r19
    2cb2:	e4 07       	cpc	r30, r20
    2cb4:	f5 07       	cpc	r31, r21
    2cb6:	20 f0       	brcs	.+8      	; 0x2cc0 <__udivmodsi4_ep>
    2cb8:	a2 1b       	sub	r26, r18
    2cba:	b3 0b       	sbc	r27, r19
    2cbc:	e4 0b       	sbc	r30, r20
    2cbe:	f5 0b       	sbc	r31, r21

00002cc0 <__udivmodsi4_ep>:
    2cc0:	66 1f       	adc	r22, r22
    2cc2:	77 1f       	adc	r23, r23
    2cc4:	88 1f       	adc	r24, r24
    2cc6:	99 1f       	adc	r25, r25
    2cc8:	1a 94       	dec	r1
    2cca:	69 f7       	brne	.-38     	; 0x2ca6 <__udivmodsi4_loop>
    2ccc:	60 95       	com	r22
    2cce:	70 95       	com	r23
    2cd0:	80 95       	com	r24
    2cd2:	90 95       	com	r25
    2cd4:	9b 01       	movw	r18, r22
    2cd6:	ac 01       	movw	r20, r24
    2cd8:	bd 01       	movw	r22, r26
    2cda:	cf 01       	movw	r24, r30
    2cdc:	08 95       	ret

00002cde <__udivmodhi4>:
    2cde:	aa 1b       	sub	r26, r26
    2ce0:	bb 1b       	sub	r27, r27
    2ce2:	51 e1       	ldi	r21, 0x11	; 17
    2ce4:	07 c0       	rjmp	.+14     	; 0x2cf4 <__udivmodhi4_ep>

00002ce6 <__udivmodhi4_loop>:
    2ce6:	aa 1f       	adc	r26, r26
    2ce8:	bb 1f       	adc	r27, r27
    2cea:	a6 17       	cp	r26, r22
    2cec:	b7 07       	cpc	r27, r23
    2cee:	10 f0       	brcs	.+4      	; 0x2cf4 <__udivmodhi4_ep>
    2cf0:	a6 1b       	sub	r26, r22
    2cf2:	b7 0b       	sbc	r27, r23

00002cf4 <__udivmodhi4_ep>:
    2cf4:	88 1f       	adc	r24, r24
    2cf6:	99 1f       	adc	r25, r25
    2cf8:	5a 95       	dec	r21
    2cfa:	a9 f7       	brne	.-22     	; 0x2ce6 <__udivmodhi4_loop>
    2cfc:	80 95       	com	r24
    2cfe:	90 95       	com	r25
    2d00:	bc 01       	movw	r22, r24
    2d02:	cd 01       	movw	r24, r26
    2d04:	08 95       	ret

00002d06 <__tablejump2__>:
    2d06:	ee 0f       	add	r30, r30
    2d08:	ff 1f       	adc	r31, r31
    2d0a:	05 90       	lpm	r0, Z+
    2d0c:	f4 91       	lpm	r31, Z
    2d0e:	e0 2d       	mov	r30, r0
    2d10:	09 94       	ijmp

00002d12 <snprintf>:
    2d12:	ae e0       	ldi	r26, 0x0E	; 14
    2d14:	b0 e0       	ldi	r27, 0x00	; 0
    2d16:	ef e8       	ldi	r30, 0x8F	; 143
    2d18:	f6 e1       	ldi	r31, 0x16	; 22
    2d1a:	0c 94 45 19 	jmp	0x328a	; 0x328a <__prologue_saves__+0x1c>
    2d1e:	0d 89       	ldd	r16, Y+21	; 0x15
    2d20:	1e 89       	ldd	r17, Y+22	; 0x16
    2d22:	8f 89       	ldd	r24, Y+23	; 0x17
    2d24:	98 8d       	ldd	r25, Y+24	; 0x18
    2d26:	26 e0       	ldi	r18, 0x06	; 6
    2d28:	2c 83       	std	Y+4, r18	; 0x04
    2d2a:	1a 83       	std	Y+2, r17	; 0x02
    2d2c:	09 83       	std	Y+1, r16	; 0x01
    2d2e:	97 ff       	sbrs	r25, 7
    2d30:	02 c0       	rjmp	.+4      	; 0x2d36 <snprintf+0x24>
    2d32:	80 e0       	ldi	r24, 0x00	; 0
    2d34:	90 e8       	ldi	r25, 0x80	; 128
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	9e 83       	std	Y+6, r25	; 0x06
    2d3a:	8d 83       	std	Y+5, r24	; 0x05
    2d3c:	ae 01       	movw	r20, r28
    2d3e:	45 5e       	subi	r20, 0xE5	; 229
    2d40:	5f 4f       	sbci	r21, 0xFF	; 255
    2d42:	69 8d       	ldd	r22, Y+25	; 0x19
    2d44:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d46:	ce 01       	movw	r24, r28
    2d48:	01 96       	adiw	r24, 0x01	; 1
    2d4a:	0e 94 b9 16 	call	0x2d72	; 0x2d72 <vfprintf>
    2d4e:	4d 81       	ldd	r20, Y+5	; 0x05
    2d50:	5e 81       	ldd	r21, Y+6	; 0x06
    2d52:	57 fd       	sbrc	r21, 7
    2d54:	0a c0       	rjmp	.+20     	; 0x2d6a <snprintf+0x58>
    2d56:	2f 81       	ldd	r18, Y+7	; 0x07
    2d58:	38 85       	ldd	r19, Y+8	; 0x08
    2d5a:	42 17       	cp	r20, r18
    2d5c:	53 07       	cpc	r21, r19
    2d5e:	0c f4       	brge	.+2      	; 0x2d62 <snprintf+0x50>
    2d60:	9a 01       	movw	r18, r20
    2d62:	f8 01       	movw	r30, r16
    2d64:	e2 0f       	add	r30, r18
    2d66:	f3 1f       	adc	r31, r19
    2d68:	10 82       	st	Z, r1
    2d6a:	2e 96       	adiw	r28, 0x0e	; 14
    2d6c:	e4 e0       	ldi	r30, 0x04	; 4
    2d6e:	0c 94 61 19 	jmp	0x32c2	; 0x32c2 <__epilogue_restores__+0x1c>

00002d72 <vfprintf>:
    2d72:	ac e0       	ldi	r26, 0x0C	; 12
    2d74:	b0 e0       	ldi	r27, 0x00	; 0
    2d76:	ef eb       	ldi	r30, 0xBF	; 191
    2d78:	f6 e1       	ldi	r31, 0x16	; 22
    2d7a:	0c 94 37 19 	jmp	0x326e	; 0x326e <__prologue_saves__>
    2d7e:	7c 01       	movw	r14, r24
    2d80:	6b 01       	movw	r12, r22
    2d82:	8a 01       	movw	r16, r20
    2d84:	fc 01       	movw	r30, r24
    2d86:	17 82       	std	Z+7, r1	; 0x07
    2d88:	16 82       	std	Z+6, r1	; 0x06
    2d8a:	83 81       	ldd	r24, Z+3	; 0x03
    2d8c:	81 ff       	sbrs	r24, 1
    2d8e:	bd c1       	rjmp	.+890    	; 0x310a <vfprintf+0x398>
    2d90:	ce 01       	movw	r24, r28
    2d92:	01 96       	adiw	r24, 0x01	; 1
    2d94:	4c 01       	movw	r8, r24
    2d96:	f7 01       	movw	r30, r14
    2d98:	93 81       	ldd	r25, Z+3	; 0x03
    2d9a:	f6 01       	movw	r30, r12
    2d9c:	93 fd       	sbrc	r25, 3
    2d9e:	85 91       	lpm	r24, Z+
    2da0:	93 ff       	sbrs	r25, 3
    2da2:	81 91       	ld	r24, Z+
    2da4:	6f 01       	movw	r12, r30
    2da6:	88 23       	and	r24, r24
    2da8:	09 f4       	brne	.+2      	; 0x2dac <vfprintf+0x3a>
    2daa:	ab c1       	rjmp	.+854    	; 0x3102 <vfprintf+0x390>
    2dac:	85 32       	cpi	r24, 0x25	; 37
    2dae:	39 f4       	brne	.+14     	; 0x2dbe <vfprintf+0x4c>
    2db0:	93 fd       	sbrc	r25, 3
    2db2:	85 91       	lpm	r24, Z+
    2db4:	93 ff       	sbrs	r25, 3
    2db6:	81 91       	ld	r24, Z+
    2db8:	6f 01       	movw	r12, r30
    2dba:	85 32       	cpi	r24, 0x25	; 37
    2dbc:	29 f4       	brne	.+10     	; 0x2dc8 <vfprintf+0x56>
    2dbe:	b7 01       	movw	r22, r14
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    2dc6:	e7 cf       	rjmp	.-50     	; 0x2d96 <vfprintf+0x24>
    2dc8:	51 2c       	mov	r5, r1
    2dca:	31 2c       	mov	r3, r1
    2dcc:	20 e0       	ldi	r18, 0x00	; 0
    2dce:	20 32       	cpi	r18, 0x20	; 32
    2dd0:	a0 f4       	brcc	.+40     	; 0x2dfa <vfprintf+0x88>
    2dd2:	8b 32       	cpi	r24, 0x2B	; 43
    2dd4:	69 f0       	breq	.+26     	; 0x2df0 <vfprintf+0x7e>
    2dd6:	30 f4       	brcc	.+12     	; 0x2de4 <vfprintf+0x72>
    2dd8:	80 32       	cpi	r24, 0x20	; 32
    2dda:	59 f0       	breq	.+22     	; 0x2df2 <vfprintf+0x80>
    2ddc:	83 32       	cpi	r24, 0x23	; 35
    2dde:	69 f4       	brne	.+26     	; 0x2dfa <vfprintf+0x88>
    2de0:	20 61       	ori	r18, 0x10	; 16
    2de2:	2c c0       	rjmp	.+88     	; 0x2e3c <vfprintf+0xca>
    2de4:	8d 32       	cpi	r24, 0x2D	; 45
    2de6:	39 f0       	breq	.+14     	; 0x2df6 <vfprintf+0x84>
    2de8:	80 33       	cpi	r24, 0x30	; 48
    2dea:	39 f4       	brne	.+14     	; 0x2dfa <vfprintf+0x88>
    2dec:	21 60       	ori	r18, 0x01	; 1
    2dee:	26 c0       	rjmp	.+76     	; 0x2e3c <vfprintf+0xca>
    2df0:	22 60       	ori	r18, 0x02	; 2
    2df2:	24 60       	ori	r18, 0x04	; 4
    2df4:	23 c0       	rjmp	.+70     	; 0x2e3c <vfprintf+0xca>
    2df6:	28 60       	ori	r18, 0x08	; 8
    2df8:	21 c0       	rjmp	.+66     	; 0x2e3c <vfprintf+0xca>
    2dfa:	27 fd       	sbrc	r18, 7
    2dfc:	27 c0       	rjmp	.+78     	; 0x2e4c <vfprintf+0xda>
    2dfe:	30 ed       	ldi	r19, 0xD0	; 208
    2e00:	38 0f       	add	r19, r24
    2e02:	3a 30       	cpi	r19, 0x0A	; 10
    2e04:	78 f4       	brcc	.+30     	; 0x2e24 <vfprintf+0xb2>
    2e06:	26 ff       	sbrs	r18, 6
    2e08:	06 c0       	rjmp	.+12     	; 0x2e16 <vfprintf+0xa4>
    2e0a:	fa e0       	ldi	r31, 0x0A	; 10
    2e0c:	5f 9e       	mul	r5, r31
    2e0e:	30 0d       	add	r19, r0
    2e10:	11 24       	eor	r1, r1
    2e12:	53 2e       	mov	r5, r19
    2e14:	13 c0       	rjmp	.+38     	; 0x2e3c <vfprintf+0xca>
    2e16:	8a e0       	ldi	r24, 0x0A	; 10
    2e18:	38 9e       	mul	r3, r24
    2e1a:	30 0d       	add	r19, r0
    2e1c:	11 24       	eor	r1, r1
    2e1e:	33 2e       	mov	r3, r19
    2e20:	20 62       	ori	r18, 0x20	; 32
    2e22:	0c c0       	rjmp	.+24     	; 0x2e3c <vfprintf+0xca>
    2e24:	8e 32       	cpi	r24, 0x2E	; 46
    2e26:	21 f4       	brne	.+8      	; 0x2e30 <vfprintf+0xbe>
    2e28:	26 fd       	sbrc	r18, 6
    2e2a:	6b c1       	rjmp	.+726    	; 0x3102 <vfprintf+0x390>
    2e2c:	20 64       	ori	r18, 0x40	; 64
    2e2e:	06 c0       	rjmp	.+12     	; 0x2e3c <vfprintf+0xca>
    2e30:	8c 36       	cpi	r24, 0x6C	; 108
    2e32:	11 f4       	brne	.+4      	; 0x2e38 <vfprintf+0xc6>
    2e34:	20 68       	ori	r18, 0x80	; 128
    2e36:	02 c0       	rjmp	.+4      	; 0x2e3c <vfprintf+0xca>
    2e38:	88 36       	cpi	r24, 0x68	; 104
    2e3a:	41 f4       	brne	.+16     	; 0x2e4c <vfprintf+0xda>
    2e3c:	f6 01       	movw	r30, r12
    2e3e:	93 fd       	sbrc	r25, 3
    2e40:	85 91       	lpm	r24, Z+
    2e42:	93 ff       	sbrs	r25, 3
    2e44:	81 91       	ld	r24, Z+
    2e46:	6f 01       	movw	r12, r30
    2e48:	81 11       	cpse	r24, r1
    2e4a:	c1 cf       	rjmp	.-126    	; 0x2dce <vfprintf+0x5c>
    2e4c:	98 2f       	mov	r25, r24
    2e4e:	9f 7d       	andi	r25, 0xDF	; 223
    2e50:	95 54       	subi	r25, 0x45	; 69
    2e52:	93 30       	cpi	r25, 0x03	; 3
    2e54:	28 f4       	brcc	.+10     	; 0x2e60 <vfprintf+0xee>
    2e56:	0c 5f       	subi	r16, 0xFC	; 252
    2e58:	1f 4f       	sbci	r17, 0xFF	; 255
    2e5a:	ff e3       	ldi	r31, 0x3F	; 63
    2e5c:	f9 83       	std	Y+1, r31	; 0x01
    2e5e:	0d c0       	rjmp	.+26     	; 0x2e7a <vfprintf+0x108>
    2e60:	83 36       	cpi	r24, 0x63	; 99
    2e62:	31 f0       	breq	.+12     	; 0x2e70 <vfprintf+0xfe>
    2e64:	83 37       	cpi	r24, 0x73	; 115
    2e66:	71 f0       	breq	.+28     	; 0x2e84 <vfprintf+0x112>
    2e68:	83 35       	cpi	r24, 0x53	; 83
    2e6a:	09 f0       	breq	.+2      	; 0x2e6e <vfprintf+0xfc>
    2e6c:	5b c0       	rjmp	.+182    	; 0x2f24 <vfprintf+0x1b2>
    2e6e:	22 c0       	rjmp	.+68     	; 0x2eb4 <vfprintf+0x142>
    2e70:	f8 01       	movw	r30, r16
    2e72:	80 81       	ld	r24, Z
    2e74:	89 83       	std	Y+1, r24	; 0x01
    2e76:	0e 5f       	subi	r16, 0xFE	; 254
    2e78:	1f 4f       	sbci	r17, 0xFF	; 255
    2e7a:	44 24       	eor	r4, r4
    2e7c:	43 94       	inc	r4
    2e7e:	51 2c       	mov	r5, r1
    2e80:	54 01       	movw	r10, r8
    2e82:	15 c0       	rjmp	.+42     	; 0x2eae <vfprintf+0x13c>
    2e84:	38 01       	movw	r6, r16
    2e86:	f2 e0       	ldi	r31, 0x02	; 2
    2e88:	6f 0e       	add	r6, r31
    2e8a:	71 1c       	adc	r7, r1
    2e8c:	f8 01       	movw	r30, r16
    2e8e:	a0 80       	ld	r10, Z
    2e90:	b1 80       	ldd	r11, Z+1	; 0x01
    2e92:	26 ff       	sbrs	r18, 6
    2e94:	03 c0       	rjmp	.+6      	; 0x2e9c <vfprintf+0x12a>
    2e96:	65 2d       	mov	r22, r5
    2e98:	70 e0       	ldi	r23, 0x00	; 0
    2e9a:	02 c0       	rjmp	.+4      	; 0x2ea0 <vfprintf+0x12e>
    2e9c:	6f ef       	ldi	r22, 0xFF	; 255
    2e9e:	7f ef       	ldi	r23, 0xFF	; 255
    2ea0:	c5 01       	movw	r24, r10
    2ea2:	2c 87       	std	Y+12, r18	; 0x0c
    2ea4:	0e 94 96 18 	call	0x312c	; 0x312c <strnlen>
    2ea8:	2c 01       	movw	r4, r24
    2eaa:	83 01       	movw	r16, r6
    2eac:	2c 85       	ldd	r18, Y+12	; 0x0c
    2eae:	2f 77       	andi	r18, 0x7F	; 127
    2eb0:	22 2e       	mov	r2, r18
    2eb2:	17 c0       	rjmp	.+46     	; 0x2ee2 <vfprintf+0x170>
    2eb4:	38 01       	movw	r6, r16
    2eb6:	f2 e0       	ldi	r31, 0x02	; 2
    2eb8:	6f 0e       	add	r6, r31
    2eba:	71 1c       	adc	r7, r1
    2ebc:	f8 01       	movw	r30, r16
    2ebe:	a0 80       	ld	r10, Z
    2ec0:	b1 80       	ldd	r11, Z+1	; 0x01
    2ec2:	26 ff       	sbrs	r18, 6
    2ec4:	03 c0       	rjmp	.+6      	; 0x2ecc <vfprintf+0x15a>
    2ec6:	65 2d       	mov	r22, r5
    2ec8:	70 e0       	ldi	r23, 0x00	; 0
    2eca:	02 c0       	rjmp	.+4      	; 0x2ed0 <vfprintf+0x15e>
    2ecc:	6f ef       	ldi	r22, 0xFF	; 255
    2ece:	7f ef       	ldi	r23, 0xFF	; 255
    2ed0:	c5 01       	movw	r24, r10
    2ed2:	2c 87       	std	Y+12, r18	; 0x0c
    2ed4:	0e 94 8b 18 	call	0x3116	; 0x3116 <strnlen_P>
    2ed8:	2c 01       	movw	r4, r24
    2eda:	2c 85       	ldd	r18, Y+12	; 0x0c
    2edc:	20 68       	ori	r18, 0x80	; 128
    2ede:	22 2e       	mov	r2, r18
    2ee0:	83 01       	movw	r16, r6
    2ee2:	23 fc       	sbrc	r2, 3
    2ee4:	1b c0       	rjmp	.+54     	; 0x2f1c <vfprintf+0x1aa>
    2ee6:	83 2d       	mov	r24, r3
    2ee8:	90 e0       	ldi	r25, 0x00	; 0
    2eea:	48 16       	cp	r4, r24
    2eec:	59 06       	cpc	r5, r25
    2eee:	b0 f4       	brcc	.+44     	; 0x2f1c <vfprintf+0x1aa>
    2ef0:	b7 01       	movw	r22, r14
    2ef2:	80 e2       	ldi	r24, 0x20	; 32
    2ef4:	90 e0       	ldi	r25, 0x00	; 0
    2ef6:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    2efa:	3a 94       	dec	r3
    2efc:	f4 cf       	rjmp	.-24     	; 0x2ee6 <vfprintf+0x174>
    2efe:	f5 01       	movw	r30, r10
    2f00:	27 fc       	sbrc	r2, 7
    2f02:	85 91       	lpm	r24, Z+
    2f04:	27 fe       	sbrs	r2, 7
    2f06:	81 91       	ld	r24, Z+
    2f08:	5f 01       	movw	r10, r30
    2f0a:	b7 01       	movw	r22, r14
    2f0c:	90 e0       	ldi	r25, 0x00	; 0
    2f0e:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    2f12:	31 10       	cpse	r3, r1
    2f14:	3a 94       	dec	r3
    2f16:	f1 e0       	ldi	r31, 0x01	; 1
    2f18:	4f 1a       	sub	r4, r31
    2f1a:	51 08       	sbc	r5, r1
    2f1c:	41 14       	cp	r4, r1
    2f1e:	51 04       	cpc	r5, r1
    2f20:	71 f7       	brne	.-36     	; 0x2efe <vfprintf+0x18c>
    2f22:	e5 c0       	rjmp	.+458    	; 0x30ee <vfprintf+0x37c>
    2f24:	84 36       	cpi	r24, 0x64	; 100
    2f26:	11 f0       	breq	.+4      	; 0x2f2c <vfprintf+0x1ba>
    2f28:	89 36       	cpi	r24, 0x69	; 105
    2f2a:	39 f5       	brne	.+78     	; 0x2f7a <vfprintf+0x208>
    2f2c:	f8 01       	movw	r30, r16
    2f2e:	27 ff       	sbrs	r18, 7
    2f30:	07 c0       	rjmp	.+14     	; 0x2f40 <vfprintf+0x1ce>
    2f32:	60 81       	ld	r22, Z
    2f34:	71 81       	ldd	r23, Z+1	; 0x01
    2f36:	82 81       	ldd	r24, Z+2	; 0x02
    2f38:	93 81       	ldd	r25, Z+3	; 0x03
    2f3a:	0c 5f       	subi	r16, 0xFC	; 252
    2f3c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f3e:	08 c0       	rjmp	.+16     	; 0x2f50 <vfprintf+0x1de>
    2f40:	60 81       	ld	r22, Z
    2f42:	71 81       	ldd	r23, Z+1	; 0x01
    2f44:	07 2e       	mov	r0, r23
    2f46:	00 0c       	add	r0, r0
    2f48:	88 0b       	sbc	r24, r24
    2f4a:	99 0b       	sbc	r25, r25
    2f4c:	0e 5f       	subi	r16, 0xFE	; 254
    2f4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f50:	2f 76       	andi	r18, 0x6F	; 111
    2f52:	72 2e       	mov	r7, r18
    2f54:	97 ff       	sbrs	r25, 7
    2f56:	09 c0       	rjmp	.+18     	; 0x2f6a <vfprintf+0x1f8>
    2f58:	90 95       	com	r25
    2f5a:	80 95       	com	r24
    2f5c:	70 95       	com	r23
    2f5e:	61 95       	neg	r22
    2f60:	7f 4f       	sbci	r23, 0xFF	; 255
    2f62:	8f 4f       	sbci	r24, 0xFF	; 255
    2f64:	9f 4f       	sbci	r25, 0xFF	; 255
    2f66:	20 68       	ori	r18, 0x80	; 128
    2f68:	72 2e       	mov	r7, r18
    2f6a:	2a e0       	ldi	r18, 0x0A	; 10
    2f6c:	30 e0       	ldi	r19, 0x00	; 0
    2f6e:	a4 01       	movw	r20, r8
    2f70:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__ultoa_invert>
    2f74:	a8 2e       	mov	r10, r24
    2f76:	a8 18       	sub	r10, r8
    2f78:	44 c0       	rjmp	.+136    	; 0x3002 <vfprintf+0x290>
    2f7a:	85 37       	cpi	r24, 0x75	; 117
    2f7c:	29 f4       	brne	.+10     	; 0x2f88 <vfprintf+0x216>
    2f7e:	2f 7e       	andi	r18, 0xEF	; 239
    2f80:	b2 2e       	mov	r11, r18
    2f82:	2a e0       	ldi	r18, 0x0A	; 10
    2f84:	30 e0       	ldi	r19, 0x00	; 0
    2f86:	25 c0       	rjmp	.+74     	; 0x2fd2 <vfprintf+0x260>
    2f88:	f2 2f       	mov	r31, r18
    2f8a:	f9 7f       	andi	r31, 0xF9	; 249
    2f8c:	bf 2e       	mov	r11, r31
    2f8e:	8f 36       	cpi	r24, 0x6F	; 111
    2f90:	c1 f0       	breq	.+48     	; 0x2fc2 <vfprintf+0x250>
    2f92:	18 f4       	brcc	.+6      	; 0x2f9a <vfprintf+0x228>
    2f94:	88 35       	cpi	r24, 0x58	; 88
    2f96:	79 f0       	breq	.+30     	; 0x2fb6 <vfprintf+0x244>
    2f98:	b4 c0       	rjmp	.+360    	; 0x3102 <vfprintf+0x390>
    2f9a:	80 37       	cpi	r24, 0x70	; 112
    2f9c:	19 f0       	breq	.+6      	; 0x2fa4 <vfprintf+0x232>
    2f9e:	88 37       	cpi	r24, 0x78	; 120
    2fa0:	21 f0       	breq	.+8      	; 0x2faa <vfprintf+0x238>
    2fa2:	af c0       	rjmp	.+350    	; 0x3102 <vfprintf+0x390>
    2fa4:	2f 2f       	mov	r18, r31
    2fa6:	20 61       	ori	r18, 0x10	; 16
    2fa8:	b2 2e       	mov	r11, r18
    2faa:	b4 fe       	sbrs	r11, 4
    2fac:	0d c0       	rjmp	.+26     	; 0x2fc8 <vfprintf+0x256>
    2fae:	8b 2d       	mov	r24, r11
    2fb0:	84 60       	ori	r24, 0x04	; 4
    2fb2:	b8 2e       	mov	r11, r24
    2fb4:	09 c0       	rjmp	.+18     	; 0x2fc8 <vfprintf+0x256>
    2fb6:	24 ff       	sbrs	r18, 4
    2fb8:	0a c0       	rjmp	.+20     	; 0x2fce <vfprintf+0x25c>
    2fba:	9f 2f       	mov	r25, r31
    2fbc:	96 60       	ori	r25, 0x06	; 6
    2fbe:	b9 2e       	mov	r11, r25
    2fc0:	06 c0       	rjmp	.+12     	; 0x2fce <vfprintf+0x25c>
    2fc2:	28 e0       	ldi	r18, 0x08	; 8
    2fc4:	30 e0       	ldi	r19, 0x00	; 0
    2fc6:	05 c0       	rjmp	.+10     	; 0x2fd2 <vfprintf+0x260>
    2fc8:	20 e1       	ldi	r18, 0x10	; 16
    2fca:	30 e0       	ldi	r19, 0x00	; 0
    2fcc:	02 c0       	rjmp	.+4      	; 0x2fd2 <vfprintf+0x260>
    2fce:	20 e1       	ldi	r18, 0x10	; 16
    2fd0:	32 e0       	ldi	r19, 0x02	; 2
    2fd2:	f8 01       	movw	r30, r16
    2fd4:	b7 fe       	sbrs	r11, 7
    2fd6:	07 c0       	rjmp	.+14     	; 0x2fe6 <vfprintf+0x274>
    2fd8:	60 81       	ld	r22, Z
    2fda:	71 81       	ldd	r23, Z+1	; 0x01
    2fdc:	82 81       	ldd	r24, Z+2	; 0x02
    2fde:	93 81       	ldd	r25, Z+3	; 0x03
    2fe0:	0c 5f       	subi	r16, 0xFC	; 252
    2fe2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fe4:	06 c0       	rjmp	.+12     	; 0x2ff2 <vfprintf+0x280>
    2fe6:	60 81       	ld	r22, Z
    2fe8:	71 81       	ldd	r23, Z+1	; 0x01
    2fea:	80 e0       	ldi	r24, 0x00	; 0
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	0e 5f       	subi	r16, 0xFE	; 254
    2ff0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ff2:	a4 01       	movw	r20, r8
    2ff4:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <__ultoa_invert>
    2ff8:	a8 2e       	mov	r10, r24
    2ffa:	a8 18       	sub	r10, r8
    2ffc:	fb 2d       	mov	r31, r11
    2ffe:	ff 77       	andi	r31, 0x7F	; 127
    3000:	7f 2e       	mov	r7, r31
    3002:	76 fe       	sbrs	r7, 6
    3004:	0b c0       	rjmp	.+22     	; 0x301c <vfprintf+0x2aa>
    3006:	37 2d       	mov	r19, r7
    3008:	3e 7f       	andi	r19, 0xFE	; 254
    300a:	a5 14       	cp	r10, r5
    300c:	50 f4       	brcc	.+20     	; 0x3022 <vfprintf+0x2b0>
    300e:	74 fe       	sbrs	r7, 4
    3010:	0a c0       	rjmp	.+20     	; 0x3026 <vfprintf+0x2b4>
    3012:	72 fc       	sbrc	r7, 2
    3014:	08 c0       	rjmp	.+16     	; 0x3026 <vfprintf+0x2b4>
    3016:	37 2d       	mov	r19, r7
    3018:	3e 7e       	andi	r19, 0xEE	; 238
    301a:	05 c0       	rjmp	.+10     	; 0x3026 <vfprintf+0x2b4>
    301c:	ba 2c       	mov	r11, r10
    301e:	37 2d       	mov	r19, r7
    3020:	03 c0       	rjmp	.+6      	; 0x3028 <vfprintf+0x2b6>
    3022:	ba 2c       	mov	r11, r10
    3024:	01 c0       	rjmp	.+2      	; 0x3028 <vfprintf+0x2b6>
    3026:	b5 2c       	mov	r11, r5
    3028:	34 ff       	sbrs	r19, 4
    302a:	0d c0       	rjmp	.+26     	; 0x3046 <vfprintf+0x2d4>
    302c:	fe 01       	movw	r30, r28
    302e:	ea 0d       	add	r30, r10
    3030:	f1 1d       	adc	r31, r1
    3032:	80 81       	ld	r24, Z
    3034:	80 33       	cpi	r24, 0x30	; 48
    3036:	11 f4       	brne	.+4      	; 0x303c <vfprintf+0x2ca>
    3038:	39 7e       	andi	r19, 0xE9	; 233
    303a:	09 c0       	rjmp	.+18     	; 0x304e <vfprintf+0x2dc>
    303c:	32 ff       	sbrs	r19, 2
    303e:	06 c0       	rjmp	.+12     	; 0x304c <vfprintf+0x2da>
    3040:	b3 94       	inc	r11
    3042:	b3 94       	inc	r11
    3044:	04 c0       	rjmp	.+8      	; 0x304e <vfprintf+0x2dc>
    3046:	83 2f       	mov	r24, r19
    3048:	86 78       	andi	r24, 0x86	; 134
    304a:	09 f0       	breq	.+2      	; 0x304e <vfprintf+0x2dc>
    304c:	b3 94       	inc	r11
    304e:	33 fd       	sbrc	r19, 3
    3050:	13 c0       	rjmp	.+38     	; 0x3078 <vfprintf+0x306>
    3052:	30 ff       	sbrs	r19, 0
    3054:	06 c0       	rjmp	.+12     	; 0x3062 <vfprintf+0x2f0>
    3056:	5a 2c       	mov	r5, r10
    3058:	b3 14       	cp	r11, r3
    305a:	18 f4       	brcc	.+6      	; 0x3062 <vfprintf+0x2f0>
    305c:	53 0c       	add	r5, r3
    305e:	5b 18       	sub	r5, r11
    3060:	b3 2c       	mov	r11, r3
    3062:	b3 14       	cp	r11, r3
    3064:	68 f4       	brcc	.+26     	; 0x3080 <vfprintf+0x30e>
    3066:	b7 01       	movw	r22, r14
    3068:	80 e2       	ldi	r24, 0x20	; 32
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	3c 87       	std	Y+12, r19	; 0x0c
    306e:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    3072:	b3 94       	inc	r11
    3074:	3c 85       	ldd	r19, Y+12	; 0x0c
    3076:	f5 cf       	rjmp	.-22     	; 0x3062 <vfprintf+0x2f0>
    3078:	b3 14       	cp	r11, r3
    307a:	10 f4       	brcc	.+4      	; 0x3080 <vfprintf+0x30e>
    307c:	3b 18       	sub	r3, r11
    307e:	01 c0       	rjmp	.+2      	; 0x3082 <vfprintf+0x310>
    3080:	31 2c       	mov	r3, r1
    3082:	34 ff       	sbrs	r19, 4
    3084:	12 c0       	rjmp	.+36     	; 0x30aa <vfprintf+0x338>
    3086:	b7 01       	movw	r22, r14
    3088:	80 e3       	ldi	r24, 0x30	; 48
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	3c 87       	std	Y+12, r19	; 0x0c
    308e:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    3092:	3c 85       	ldd	r19, Y+12	; 0x0c
    3094:	32 ff       	sbrs	r19, 2
    3096:	17 c0       	rjmp	.+46     	; 0x30c6 <vfprintf+0x354>
    3098:	31 fd       	sbrc	r19, 1
    309a:	03 c0       	rjmp	.+6      	; 0x30a2 <vfprintf+0x330>
    309c:	88 e7       	ldi	r24, 0x78	; 120
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	02 c0       	rjmp	.+4      	; 0x30a6 <vfprintf+0x334>
    30a2:	88 e5       	ldi	r24, 0x58	; 88
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	b7 01       	movw	r22, r14
    30a8:	0c c0       	rjmp	.+24     	; 0x30c2 <vfprintf+0x350>
    30aa:	83 2f       	mov	r24, r19
    30ac:	86 78       	andi	r24, 0x86	; 134
    30ae:	59 f0       	breq	.+22     	; 0x30c6 <vfprintf+0x354>
    30b0:	31 ff       	sbrs	r19, 1
    30b2:	02 c0       	rjmp	.+4      	; 0x30b8 <vfprintf+0x346>
    30b4:	8b e2       	ldi	r24, 0x2B	; 43
    30b6:	01 c0       	rjmp	.+2      	; 0x30ba <vfprintf+0x348>
    30b8:	80 e2       	ldi	r24, 0x20	; 32
    30ba:	37 fd       	sbrc	r19, 7
    30bc:	8d e2       	ldi	r24, 0x2D	; 45
    30be:	b7 01       	movw	r22, r14
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    30c6:	a5 14       	cp	r10, r5
    30c8:	38 f4       	brcc	.+14     	; 0x30d8 <vfprintf+0x366>
    30ca:	b7 01       	movw	r22, r14
    30cc:	80 e3       	ldi	r24, 0x30	; 48
    30ce:	90 e0       	ldi	r25, 0x00	; 0
    30d0:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    30d4:	5a 94       	dec	r5
    30d6:	f7 cf       	rjmp	.-18     	; 0x30c6 <vfprintf+0x354>
    30d8:	aa 94       	dec	r10
    30da:	f4 01       	movw	r30, r8
    30dc:	ea 0d       	add	r30, r10
    30de:	f1 1d       	adc	r31, r1
    30e0:	80 81       	ld	r24, Z
    30e2:	b7 01       	movw	r22, r14
    30e4:	90 e0       	ldi	r25, 0x00	; 0
    30e6:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    30ea:	a1 10       	cpse	r10, r1
    30ec:	f5 cf       	rjmp	.-22     	; 0x30d8 <vfprintf+0x366>
    30ee:	33 20       	and	r3, r3
    30f0:	09 f4       	brne	.+2      	; 0x30f4 <vfprintf+0x382>
    30f2:	51 ce       	rjmp	.-862    	; 0x2d96 <vfprintf+0x24>
    30f4:	b7 01       	movw	r22, r14
    30f6:	80 e2       	ldi	r24, 0x20	; 32
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	0e 94 a1 18 	call	0x3142	; 0x3142 <fputc>
    30fe:	3a 94       	dec	r3
    3100:	f6 cf       	rjmp	.-20     	; 0x30ee <vfprintf+0x37c>
    3102:	f7 01       	movw	r30, r14
    3104:	86 81       	ldd	r24, Z+6	; 0x06
    3106:	97 81       	ldd	r25, Z+7	; 0x07
    3108:	02 c0       	rjmp	.+4      	; 0x310e <vfprintf+0x39c>
    310a:	8f ef       	ldi	r24, 0xFF	; 255
    310c:	9f ef       	ldi	r25, 0xFF	; 255
    310e:	2c 96       	adiw	r28, 0x0c	; 12
    3110:	e2 e1       	ldi	r30, 0x12	; 18
    3112:	0c 94 53 19 	jmp	0x32a6	; 0x32a6 <__epilogue_restores__>

00003116 <strnlen_P>:
    3116:	fc 01       	movw	r30, r24
    3118:	05 90       	lpm	r0, Z+
    311a:	61 50       	subi	r22, 0x01	; 1
    311c:	70 40       	sbci	r23, 0x00	; 0
    311e:	01 10       	cpse	r0, r1
    3120:	d8 f7       	brcc	.-10     	; 0x3118 <strnlen_P+0x2>
    3122:	80 95       	com	r24
    3124:	90 95       	com	r25
    3126:	8e 0f       	add	r24, r30
    3128:	9f 1f       	adc	r25, r31
    312a:	08 95       	ret

0000312c <strnlen>:
    312c:	fc 01       	movw	r30, r24
    312e:	61 50       	subi	r22, 0x01	; 1
    3130:	70 40       	sbci	r23, 0x00	; 0
    3132:	01 90       	ld	r0, Z+
    3134:	01 10       	cpse	r0, r1
    3136:	d8 f7       	brcc	.-10     	; 0x312e <strnlen+0x2>
    3138:	80 95       	com	r24
    313a:	90 95       	com	r25
    313c:	8e 0f       	add	r24, r30
    313e:	9f 1f       	adc	r25, r31
    3140:	08 95       	ret

00003142 <fputc>:
    3142:	0f 93       	push	r16
    3144:	1f 93       	push	r17
    3146:	cf 93       	push	r28
    3148:	df 93       	push	r29
    314a:	fb 01       	movw	r30, r22
    314c:	23 81       	ldd	r18, Z+3	; 0x03
    314e:	21 fd       	sbrc	r18, 1
    3150:	03 c0       	rjmp	.+6      	; 0x3158 <fputc+0x16>
    3152:	8f ef       	ldi	r24, 0xFF	; 255
    3154:	9f ef       	ldi	r25, 0xFF	; 255
    3156:	28 c0       	rjmp	.+80     	; 0x31a8 <fputc+0x66>
    3158:	22 ff       	sbrs	r18, 2
    315a:	16 c0       	rjmp	.+44     	; 0x3188 <fputc+0x46>
    315c:	46 81       	ldd	r20, Z+6	; 0x06
    315e:	57 81       	ldd	r21, Z+7	; 0x07
    3160:	24 81       	ldd	r18, Z+4	; 0x04
    3162:	35 81       	ldd	r19, Z+5	; 0x05
    3164:	42 17       	cp	r20, r18
    3166:	53 07       	cpc	r21, r19
    3168:	44 f4       	brge	.+16     	; 0x317a <fputc+0x38>
    316a:	a0 81       	ld	r26, Z
    316c:	b1 81       	ldd	r27, Z+1	; 0x01
    316e:	9d 01       	movw	r18, r26
    3170:	2f 5f       	subi	r18, 0xFF	; 255
    3172:	3f 4f       	sbci	r19, 0xFF	; 255
    3174:	31 83       	std	Z+1, r19	; 0x01
    3176:	20 83       	st	Z, r18
    3178:	8c 93       	st	X, r24
    317a:	26 81       	ldd	r18, Z+6	; 0x06
    317c:	37 81       	ldd	r19, Z+7	; 0x07
    317e:	2f 5f       	subi	r18, 0xFF	; 255
    3180:	3f 4f       	sbci	r19, 0xFF	; 255
    3182:	37 83       	std	Z+7, r19	; 0x07
    3184:	26 83       	std	Z+6, r18	; 0x06
    3186:	10 c0       	rjmp	.+32     	; 0x31a8 <fputc+0x66>
    3188:	eb 01       	movw	r28, r22
    318a:	09 2f       	mov	r16, r25
    318c:	18 2f       	mov	r17, r24
    318e:	00 84       	ldd	r0, Z+8	; 0x08
    3190:	f1 85       	ldd	r31, Z+9	; 0x09
    3192:	e0 2d       	mov	r30, r0
    3194:	09 95       	icall
    3196:	89 2b       	or	r24, r25
    3198:	e1 f6       	brne	.-72     	; 0x3152 <fputc+0x10>
    319a:	8e 81       	ldd	r24, Y+6	; 0x06
    319c:	9f 81       	ldd	r25, Y+7	; 0x07
    319e:	01 96       	adiw	r24, 0x01	; 1
    31a0:	9f 83       	std	Y+7, r25	; 0x07
    31a2:	8e 83       	std	Y+6, r24	; 0x06
    31a4:	81 2f       	mov	r24, r17
    31a6:	90 2f       	mov	r25, r16
    31a8:	df 91       	pop	r29
    31aa:	cf 91       	pop	r28
    31ac:	1f 91       	pop	r17
    31ae:	0f 91       	pop	r16
    31b0:	08 95       	ret

000031b2 <__ultoa_invert>:
    31b2:	fa 01       	movw	r30, r20
    31b4:	aa 27       	eor	r26, r26
    31b6:	28 30       	cpi	r18, 0x08	; 8
    31b8:	51 f1       	breq	.+84     	; 0x320e <__ultoa_invert+0x5c>
    31ba:	20 31       	cpi	r18, 0x10	; 16
    31bc:	81 f1       	breq	.+96     	; 0x321e <__ultoa_invert+0x6c>
    31be:	e8 94       	clt
    31c0:	6f 93       	push	r22
    31c2:	6e 7f       	andi	r22, 0xFE	; 254
    31c4:	6e 5f       	subi	r22, 0xFE	; 254
    31c6:	7f 4f       	sbci	r23, 0xFF	; 255
    31c8:	8f 4f       	sbci	r24, 0xFF	; 255
    31ca:	9f 4f       	sbci	r25, 0xFF	; 255
    31cc:	af 4f       	sbci	r26, 0xFF	; 255
    31ce:	b1 e0       	ldi	r27, 0x01	; 1
    31d0:	3e d0       	rcall	.+124    	; 0x324e <__ultoa_invert+0x9c>
    31d2:	b4 e0       	ldi	r27, 0x04	; 4
    31d4:	3c d0       	rcall	.+120    	; 0x324e <__ultoa_invert+0x9c>
    31d6:	67 0f       	add	r22, r23
    31d8:	78 1f       	adc	r23, r24
    31da:	89 1f       	adc	r24, r25
    31dc:	9a 1f       	adc	r25, r26
    31de:	a1 1d       	adc	r26, r1
    31e0:	68 0f       	add	r22, r24
    31e2:	79 1f       	adc	r23, r25
    31e4:	8a 1f       	adc	r24, r26
    31e6:	91 1d       	adc	r25, r1
    31e8:	a1 1d       	adc	r26, r1
    31ea:	6a 0f       	add	r22, r26
    31ec:	71 1d       	adc	r23, r1
    31ee:	81 1d       	adc	r24, r1
    31f0:	91 1d       	adc	r25, r1
    31f2:	a1 1d       	adc	r26, r1
    31f4:	20 d0       	rcall	.+64     	; 0x3236 <__ultoa_invert+0x84>
    31f6:	09 f4       	brne	.+2      	; 0x31fa <__ultoa_invert+0x48>
    31f8:	68 94       	set
    31fa:	3f 91       	pop	r19
    31fc:	2a e0       	ldi	r18, 0x0A	; 10
    31fe:	26 9f       	mul	r18, r22
    3200:	11 24       	eor	r1, r1
    3202:	30 19       	sub	r19, r0
    3204:	30 5d       	subi	r19, 0xD0	; 208
    3206:	31 93       	st	Z+, r19
    3208:	de f6       	brtc	.-74     	; 0x31c0 <__ultoa_invert+0xe>
    320a:	cf 01       	movw	r24, r30
    320c:	08 95       	ret
    320e:	46 2f       	mov	r20, r22
    3210:	47 70       	andi	r20, 0x07	; 7
    3212:	40 5d       	subi	r20, 0xD0	; 208
    3214:	41 93       	st	Z+, r20
    3216:	b3 e0       	ldi	r27, 0x03	; 3
    3218:	0f d0       	rcall	.+30     	; 0x3238 <__ultoa_invert+0x86>
    321a:	c9 f7       	brne	.-14     	; 0x320e <__ultoa_invert+0x5c>
    321c:	f6 cf       	rjmp	.-20     	; 0x320a <__ultoa_invert+0x58>
    321e:	46 2f       	mov	r20, r22
    3220:	4f 70       	andi	r20, 0x0F	; 15
    3222:	40 5d       	subi	r20, 0xD0	; 208
    3224:	4a 33       	cpi	r20, 0x3A	; 58
    3226:	18 f0       	brcs	.+6      	; 0x322e <__ultoa_invert+0x7c>
    3228:	49 5d       	subi	r20, 0xD9	; 217
    322a:	31 fd       	sbrc	r19, 1
    322c:	40 52       	subi	r20, 0x20	; 32
    322e:	41 93       	st	Z+, r20
    3230:	02 d0       	rcall	.+4      	; 0x3236 <__ultoa_invert+0x84>
    3232:	a9 f7       	brne	.-22     	; 0x321e <__ultoa_invert+0x6c>
    3234:	ea cf       	rjmp	.-44     	; 0x320a <__ultoa_invert+0x58>
    3236:	b4 e0       	ldi	r27, 0x04	; 4
    3238:	a6 95       	lsr	r26
    323a:	97 95       	ror	r25
    323c:	87 95       	ror	r24
    323e:	77 95       	ror	r23
    3240:	67 95       	ror	r22
    3242:	ba 95       	dec	r27
    3244:	c9 f7       	brne	.-14     	; 0x3238 <__ultoa_invert+0x86>
    3246:	00 97       	sbiw	r24, 0x00	; 0
    3248:	61 05       	cpc	r22, r1
    324a:	71 05       	cpc	r23, r1
    324c:	08 95       	ret
    324e:	9b 01       	movw	r18, r22
    3250:	ac 01       	movw	r20, r24
    3252:	0a 2e       	mov	r0, r26
    3254:	06 94       	lsr	r0
    3256:	57 95       	ror	r21
    3258:	47 95       	ror	r20
    325a:	37 95       	ror	r19
    325c:	27 95       	ror	r18
    325e:	ba 95       	dec	r27
    3260:	c9 f7       	brne	.-14     	; 0x3254 <__ultoa_invert+0xa2>
    3262:	62 0f       	add	r22, r18
    3264:	73 1f       	adc	r23, r19
    3266:	84 1f       	adc	r24, r20
    3268:	95 1f       	adc	r25, r21
    326a:	a0 1d       	adc	r26, r0
    326c:	08 95       	ret

0000326e <__prologue_saves__>:
    326e:	2f 92       	push	r2
    3270:	3f 92       	push	r3
    3272:	4f 92       	push	r4
    3274:	5f 92       	push	r5
    3276:	6f 92       	push	r6
    3278:	7f 92       	push	r7
    327a:	8f 92       	push	r8
    327c:	9f 92       	push	r9
    327e:	af 92       	push	r10
    3280:	bf 92       	push	r11
    3282:	cf 92       	push	r12
    3284:	df 92       	push	r13
    3286:	ef 92       	push	r14
    3288:	ff 92       	push	r15
    328a:	0f 93       	push	r16
    328c:	1f 93       	push	r17
    328e:	cf 93       	push	r28
    3290:	df 93       	push	r29
    3292:	cd b7       	in	r28, 0x3d	; 61
    3294:	de b7       	in	r29, 0x3e	; 62
    3296:	ca 1b       	sub	r28, r26
    3298:	db 0b       	sbc	r29, r27
    329a:	0f b6       	in	r0, 0x3f	; 63
    329c:	f8 94       	cli
    329e:	de bf       	out	0x3e, r29	; 62
    32a0:	0f be       	out	0x3f, r0	; 63
    32a2:	cd bf       	out	0x3d, r28	; 61
    32a4:	09 94       	ijmp

000032a6 <__epilogue_restores__>:
    32a6:	2a 88       	ldd	r2, Y+18	; 0x12
    32a8:	39 88       	ldd	r3, Y+17	; 0x11
    32aa:	48 88       	ldd	r4, Y+16	; 0x10
    32ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    32ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    32b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    32b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    32b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    32b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    32b8:	b9 84       	ldd	r11, Y+9	; 0x09
    32ba:	c8 84       	ldd	r12, Y+8	; 0x08
    32bc:	df 80       	ldd	r13, Y+7	; 0x07
    32be:	ee 80       	ldd	r14, Y+6	; 0x06
    32c0:	fd 80       	ldd	r15, Y+5	; 0x05
    32c2:	0c 81       	ldd	r16, Y+4	; 0x04
    32c4:	1b 81       	ldd	r17, Y+3	; 0x03
    32c6:	aa 81       	ldd	r26, Y+2	; 0x02
    32c8:	b9 81       	ldd	r27, Y+1	; 0x01
    32ca:	ce 0f       	add	r28, r30
    32cc:	d1 1d       	adc	r29, r1
    32ce:	0f b6       	in	r0, 0x3f	; 63
    32d0:	f8 94       	cli
    32d2:	de bf       	out	0x3e, r29	; 62
    32d4:	0f be       	out	0x3f, r0	; 63
    32d6:	cd bf       	out	0x3d, r28	; 61
    32d8:	ed 01       	movw	r28, r26
    32da:	08 95       	ret

000032dc <_exit>:
    32dc:	f8 94       	cli

000032de <__stop_program>:
    32de:	ff cf       	rjmp	.-2      	; 0x32de <__stop_program>
