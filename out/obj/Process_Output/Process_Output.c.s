	.file	"Process_Output.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
.global	__mulsf3
.global	__fixsfsi
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"%d"
	.section	.text.Process_Output,"ax",@progbits
.global	Process_Output
	.type	Process_Output, @function
Process_Output:
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
/* prologue: function */
/* frame size = 0 */
/* stack size = 15 */
.L__stack_usage = 15
	in r16,__SP_L__
	in r17,__SP_H__
	ldi r24,lo8(60)
	sts output_char,r24
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(32)
	ldi r21,lo8(65)
	lds r22,Relative_Distance
	lds r23,Relative_Distance+1
	lds r24,Relative_Distance+2
	lds r25,Relative_Distance+3
	call __mulsf3
	call __fixsfsi
	movw r18,r22
	movw r24,r22
	mov r10,__zero_reg__
	mov r11,__zero_reg__
	ldi r30,lo8(10)
	ldi r31,0
.L2:
	movw r20,r10
	subi r20,-1
	sbci r21,-1
	movw r12,r20
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .L23
	movw r22,r30
	call __divmodhi4
	movw r24,r22
	movw r10,r12
	rjmp .L2
.L23:
	in r8,__SP_L__
	in r9,__SP_H__
	in r24,__SP_L__
	in r25,__SP_H__
	sub r24,r20
	sbc r25,r21
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r25
	out __SREG__,__tmp_reg__
	out __SP_L__,r24
	in r26,__SP_L__
	in r27,__SP_H__
	adiw r26,1
	movw r14,r26
	push r19
	push r18
	ldi r24,lo8(.LC0)
	ldi r25,hi8(.LC0)
	push r25
	push r24
	push r13
	push r20
	push r15
	push r26
	call snprintf
	movw r30,r14
	ldi r26,lo8(output_char+1)
	ldi r27,hi8(output_char+1)
	movw r24,r14
	add r24,r10
	adc r25,r11
	in r18,__SP_L__
	in r19,__SP_H__
	subi r18,-8
	sbci r19,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r19
	out __SREG__,__tmp_reg__
	out __SP_L__,r18
.L4:
	cp r30,r24
	cpc r31,r25
	breq .L24
	ld r18,Z+
	st X+,r18
	rjmp .L4
.L24:
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r9
	out __SREG__,__tmp_reg__
	out __SP_L__,r8
	ldi r24,lo8(46)
	movw r30,r12
	subi r30,lo8(-(output_char))
	sbci r31,hi8(-(output_char))
	st Z,r24
	lds r22,Vehicle_Speed
	lds r23,Vehicle_Speed+1
	lds r24,Vehicle_Speed+2
	lds r25,Vehicle_Speed+3
	call __fixsfsi
	mov r20,r22
	mov r5,r23
	mov r24,r22
	mov r25,r5
	mov r6,__zero_reg__
	mov r7,__zero_reg__
	ldi r30,lo8(10)
	ldi r31,0
.L6:
	movw r18,r6
	subi r18,-1
	sbci r19,-1
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .L25
	movw r22,r30
	call __divmodhi4
	movw r24,r22
	movw r6,r18
	rjmp .L6
.L25:
	in r8,__SP_L__
	in r9,__SP_H__
	in r24,__SP_L__
	in r25,__SP_H__
	sub r24,r18
	sbc r25,r19
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r25
	out __SREG__,__tmp_reg__
	out __SP_L__,r24
	in r26,__SP_L__
	in r27,__SP_H__
	adiw r26,1
	movw r14,r26
	push r5
	push r20
	ldi r24,lo8(.LC0)
	ldi r25,hi8(.LC0)
	push r25
	push r24
	push r19
	push r18
	push r15
	push r26
	call snprintf
	movw r30,r14
	in r18,__SP_L__
	in r19,__SP_H__
	subi r18,-8
	sbci r19,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r19
	out __SREG__,__tmp_reg__
	out __SP_L__,r18
	mov r14,__zero_reg__
	mov r15,__zero_reg__
.L8:
	cp r14,r6
	cpc r15,r7
	breq .L26
	ld r24,Z+
	movw r26,r14
	add r26,r10
	adc r27,r11
	subi r26,lo8(-(output_char))
	sbci r27,hi8(-(output_char))
	adiw r26,2
	st X,r24
	ldi r19,-1
	sub r14,r19
	sbc r15,r19
	rjmp .L8
.L26:
	add r14,r12
	adc r15,r13
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r9
	out __SREG__,__tmp_reg__
	out __SP_L__,r8
	movw r12,r14
	ldi r20,-1
	sub r12,r20
	sbc r13,r20
	movw r30,r12
	subi r30,lo8(-(output_char))
	sbci r31,hi8(-(output_char))
	ldi r24,lo8(46)
	st Z,r24
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(32)
	ldi r21,lo8(65)
	lds r22,Relative_Speed
	lds r23,Relative_Speed+1
	lds r24,Relative_Speed+2
	lds r25,Relative_Speed+3
	call __mulsf3
	call __fixsfsi
	mov r20,r22
	mov r5,r23
	mov r24,r22
	mov r25,r5
	mov r6,__zero_reg__
	mov r7,__zero_reg__
	ldi r30,lo8(10)
	ldi r31,0
.L10:
	movw r18,r6
	subi r18,-1
	sbci r19,-1
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .L27
	movw r22,r30
	call __divmodhi4
	movw r24,r22
	movw r6,r18
	rjmp .L10
.L27:
	in r10,__SP_L__
	in r11,__SP_H__
	in r24,__SP_L__
	in r25,__SP_H__
	sub r24,r18
	sbc r25,r19
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r25
	out __SREG__,__tmp_reg__
	out __SP_L__,r24
	in r26,__SP_L__
	in r27,__SP_H__
	adiw r26,1
	movw r8,r26
	push r5
	push r20
	ldi r24,lo8(.LC0)
	ldi r25,hi8(.LC0)
	push r25
	push r24
	push r19
	push r18
	push r9
	push r26
	call snprintf
	movw r30,r8
	in r18,__SP_L__
	in r19,__SP_H__
	subi r18,-8
	sbci r19,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r19
	out __SREG__,__tmp_reg__
	out __SP_L__,r18
	ldi r24,0
	ldi r25,0
.L12:
	cp r24,r6
	cpc r25,r7
	breq .L28
	ld r18,Z+
	movw r26,r24
	add r26,r14
	adc r27,r15
	subi r26,lo8(-(output_char))
	sbci r27,hi8(-(output_char))
	adiw r26,2
	st X,r18
	adiw r24,1
	rjmp .L12
.L28:
	add r12,r24
	adc r13,r25
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r11
	out __SREG__,__tmp_reg__
	out __SP_L__,r10
	movw r14,r12
	ldi r19,-1
	sub r14,r19
	sbc r15,r19
	movw r30,r14
	subi r30,lo8(-(output_char))
	sbci r31,hi8(-(output_char))
	ldi r24,lo8(46)
	st Z,r24
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(32)
	ldi r21,lo8(65)
	lds r22,Safety_Distance
	lds r23,Safety_Distance+1
	lds r24,Safety_Distance+2
	lds r25,Safety_Distance+3
	call __mulsf3
	call __fixsfsi
	mov r20,r22
	mov r5,r23
	mov r24,r22
	mov r25,r5
	mov r6,__zero_reg__
	mov r7,__zero_reg__
	ldi r30,lo8(10)
	ldi r31,0
.L14:
	movw r18,r6
	subi r18,-1
	sbci r19,-1
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .L29
	movw r22,r30
	call __divmodhi4
	movw r24,r22
	movw r6,r18
	rjmp .L14
.L29:
	in r10,__SP_L__
	in r11,__SP_H__
	in r24,__SP_L__
	in r25,__SP_H__
	sub r24,r18
	sbc r25,r19
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r25
	out __SREG__,__tmp_reg__
	out __SP_L__,r24
	in r26,__SP_L__
	in r27,__SP_H__
	adiw r26,1
	movw r8,r26
	push r5
	push r20
	ldi r24,lo8(.LC0)
	ldi r25,hi8(.LC0)
	push r25
	push r24
	push r19
	push r18
	push r9
	push r26
	call snprintf
	movw r30,r8
	in r18,__SP_L__
	in r19,__SP_H__
	subi r18,-8
	sbci r19,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r19
	out __SREG__,__tmp_reg__
	out __SP_L__,r18
	ldi r24,0
	ldi r25,0
.L16:
	cp r24,r6
	cpc r25,r7
	breq .L30
	ld r18,Z+
	movw r26,r24
	add r26,r12
	adc r27,r13
	subi r26,lo8(-(output_char))
	sbci r27,hi8(-(output_char))
	adiw r26,2
	st X,r18
	adiw r24,1
	rjmp .L16
.L30:
	add r14,r24
	adc r15,r25
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r11
	out __SREG__,__tmp_reg__
	out __SP_L__,r10
	movw r12,r14
	ldi r19,-1
	sub r12,r19
	sbc r13,r19
	movw r30,r12
	subi r30,lo8(-(output_char))
	sbci r31,hi8(-(output_char))
	ldi r24,lo8(46)
	st Z,r24
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(122)
	ldi r21,lo8(68)
	lds r22,Output_Acceleration
	lds r23,Output_Acceleration+1
	lds r24,Output_Acceleration+2
	lds r25,Output_Acceleration+3
	call __mulsf3
	call __fixsfsi
	mov r20,r22
	mov r7,r23
	mov r24,r22
	mov r25,r7
	mov r10,__zero_reg__
	mov r11,__zero_reg__
	ldi r30,lo8(10)
	ldi r31,0
.L18:
	movw r18,r10
	subi r18,-1
	sbci r19,-1
	cp __zero_reg__,r24
	cpc __zero_reg__,r25
	brge .L31
	movw r22,r30
	call __divmodhi4
	movw r24,r22
	movw r10,r18
	rjmp .L18
.L31:
	in r24,__SP_L__
	in r25,__SP_H__
	sub r24,r18
	sbc r25,r19
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r25
	out __SREG__,__tmp_reg__
	out __SP_L__,r24
	in r26,__SP_L__
	in r27,__SP_H__
	adiw r26,1
	movw r8,r26
	push r7
	push r20
	ldi r24,lo8(.LC0)
	ldi r25,hi8(.LC0)
	push r25
	push r24
	push r19
	push r18
	push r9
	push r26
	call snprintf
	movw r20,r8
	in r18,__SP_L__
	in r19,__SP_H__
	subi r18,-8
	sbci r19,-1
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r19
	out __SREG__,__tmp_reg__
	out __SP_L__,r18
	ldi r30,0
	ldi r31,0
.L20:
	cp r30,r10
	cpc r31,r11
	breq .L32
	movw r26,r20
	ld r18,X+
	movw r20,r26
	movw r24,r30
	add r24,r14
	adc r25,r15
	subi r24,lo8(-(output_char))
	sbci r25,hi8(-(output_char))
	movw r26,r24
	adiw r26,2
	st X,r18
	adiw r30,1
	rjmp .L20
.L32:
	add r30,r12
	adc r31,r13
	subi r30,lo8(-(output_char))
	sbci r31,hi8(-(output_char))
	ldi r25,lo8(46)
	std Z+1,r25
	lds r24,Status_Accel_Decel
	subi r24,lo8(-(48))
	std Z+2,r24
	std Z+3,r25
	lds r24,Status_Dec_Inc
	subi r24,lo8(-(48))
	std Z+4,r24
	ldi r24,lo8(62)
	std Z+5,r24
	std Z+6,__zero_reg__
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r17
	out __SREG__,__tmp_reg__
	out __SP_L__,r16
/* epilogue start */
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	ret
	.size	Process_Output, .-Process_Output
	.ident	"GCC: (GNU) 4.9.2"
.global __do_copy_data
